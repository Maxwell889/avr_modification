Timeout: 1, Memory_limit: 118000
	10000.000000 (abstract query)
	10000.000000 (concrete query)

Config:
	(concrete bit-width limit: 0)
	(fineness: 2)
	(interpret-ex-cc-level: 2)
	(forward-check:	0)
	(full projection)
	(prioritization:	single)

#STAT# num_bits= 4 num_regs= 12 num_total_bits= 100
1  4
8  12

System
  int : 234
  bool : 183
  sum : 417
  bool_op : 187
  int_op : 8
    !  8
    !=_int  6
    &&  7
    <=_8_8  8
    ==  5
    ==_int  31
    ?:  24
    ?:_int  100
    ||  6


Property
  int : 5
  bool : 42
  sum : 47
  bool_op : 21
  int_op : 0
    !=_int  6
    &&  5
    ==  1
    ==_int  3
    ||  6

Partial interpretation info:
  depth: 0
  count: 0
  count (d=0): 0

  depth (prop): 0
  count (prop): 0
  count (d=0) (prop): 0

	# of Inst.                  : 510	(864 bytes each)
	  ExInst::hm_ExInst.size()  : 0	(984 bytes each)
	  SigInst::hm_SigInst.size(): 46	(904 bytes each)
	  NumInst::hm_NumInst.size(): 8	(888 bytes each)
	  OpInst::hm_OpInst.size()  : 133	(944 bytes each)
	  OpInst::hm_ITEInst.size() : 124	(944 bytes each)
	  OpInst::hm_ETCInst.size() : 3	(944 bytes each)
	Total                       : 314

	Memory (est.)               : 0.420227 MB
	  ExInst                    : 0.000000 MB
	  SigInst                   : 0.039658 MB
	  NumInst                   : 0.006775 MB
	  OpInst::OP                : 0.119736 MB
	  OpInst::ITE               : 0.111633 MB
	  OpInst::ETC               : 0.002701 MB

	(maximum function composition in T: 1)

---------------------------------------------------------------------------------------------
 Reachability Analysis Begins
---------------------------------------------------------------------------------------------
Loop_FrameNumber_#ReachabilityIterations_#RefinementIterations
---------------------------------------------------------------------------------------------
Loop_0_0_0
---------------------------------------------------------------------------------------------
[Basis Step]:
	F[0] = I
	SAT_a ? [ F[0] && !P ]: UNSAT

[First Step]:
	SAT_a ? [ F[0] & T & !P ]: UNSAT

[RES_1]       0	: 0	: 0 s: 0
[RES_0]    L  0 : 0 s: 0, mem: 14, time: 0.004295
[RES_1]       0	: 1	: 0 0 s: 0
[RES_0]    L  1 : 0 0 s: 0, mem: 14, time: 0.004489
---------------------------------------------------------------------------------------------
Loop_1_0_0
---------------------------------------------------------------------------------------------
	F[1] = P
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 7	(7 + 0 + 0 + 0 + 0)
	(concrete cube) 7	(7 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 7 -> 1)
	(22 + 7 -> 22 + 1)
	(7 -> 1 -> 1)
	(7 -> 1 -> 1)

		[MUS(s)]:

		[1] w8	(\ep_3 != 8'd0)
[RES_1]       0	: 1	: 0 1 s: 1
[RES_0]    L  1 : 0 1 s: 1, mem: 14, time: 0.00584
---------------------------------------------------------------------------------------------
Loop_1_1_0
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #3
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(6 + 0 + 0 + 0 + 0)
	(concrete cube) 6	(6 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 6 -> 2)
	(22 + 6 -> 22 + 2)
	(6 -> 2 -> 2)
	(6 -> 2 -> 2)

		[MUS(s)]:

		[1] w8	((\transfer_3 != 8'd0) && (\locked_0 == \transfer_3))
[RES_1]       0	: 1	: 0 2 s: 2
[RES_0]    L  1 : 0 3 s: 3, mem: 14, time: 0.006617
---------------------------------------------------------------------------------------------
Loop_1_2_0
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #3
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(6 + 0 + 0 + 0 + 0)
	(concrete cube) 6	(6 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 6 -> 2)
	(23 + 6 -> 23 + 2)
	(6 -> 2 -> 2)
	(6 -> 2 -> 2)

		[MUS(s)]:

		[1] w8	((\locked_1 == \transfer_3) && (\transfer_3 != 8'd0))
[RES_1]       0	: 1	: 0 3 s: 3
[RES_0]    L  1 : 0 5 s: 5, mem: 14, time: 0.007475
---------------------------------------------------------------------------------------------
Loop_1_3_0
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #3
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(6 + 0 + 0 + 0 + 0)
	(concrete cube) 6	(6 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 6 -> 2)
	(24 + 6 -> 24 + 2)
	(6 -> 2 -> 2)
	(6 -> 2 -> 2)

		[MUS(s)]:

		[1] w8	((\locked_2 == \transfer_3) && (\transfer_3 != 8'd0))
[RES_1]       0	: 1	: 0 4 s: 4
[RES_0]    L  1 : 0 7 s: 7, mem: 14, time: 0.008378
---------------------------------------------------------------------------------------------
Loop_1_4_0
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 7	(7 + 0 + 0 + 0 + 0)
	(concrete cube) 7	(7 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 7 -> 2)
	(27 + 7 -> 27 + 2)
	(7 -> 2 -> 2)
	(7 -> 2 -> 2)

		[MUS(s)]:

		[1] w8	((\transfer_2 != 8'd0) && (\locked_3 == \transfer_2))
[RES_1]       0	: 1	: 0 5 s: 5
[RES_0]    L  1 : 0 9 s: 9, mem: 14, time: 0.00944
---------------------------------------------------------------------------------------------
Loop_1_5_0
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 7	(7 + 0 + 0 + 0 + 0)
	(concrete cube) 7	(7 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 7 -> 2)
	(27 + 7 -> 27 + 2)
	(7 -> 2 -> 2)
	(7 -> 2 -> 2)

		[MUS(s)]:

		[1] w8	((\locked_0 == \transfer_2) && (\transfer_2 != 8'd0))
[RES_1]       0	: 1	: 0 6 s: 6
[RES_0]    L  1 : 0 11 s: 11, mem: 14, time: 0.010329
---------------------------------------------------------------------------------------------
Loop_1_6_0
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 7	(7 + 0 + 0 + 0 + 0)
	(concrete cube) 7	(7 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 7 -> 2)
	(27 + 7 -> 27 + 2)
	(7 -> 2 -> 2)
	(7 -> 2 -> 2)

		[MUS(s)]:

		[1] w8	((\locked_1 == \transfer_2) && (\transfer_2 != 8'd0))
[RES_1]       0	: 1	: 0 7 s: 7
[RES_0]    L  1 : 0 13 s: 13, mem: 14, time: 0.011166
---------------------------------------------------------------------------------------------
Loop_1_7_0
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 7	(7 + 0 + 0 + 0 + 0)
	(concrete cube) 7	(7 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 7 -> 2)
	(29 + 7 -> 29 + 2)
	(7 -> 2 -> 2)
	(7 -> 2 -> 2)

		[MUS(s)]:

		[1] w8	((\ep_1 != \transfer_1) && (\locked_0 == \transfer_1))
[RES_1]       0	: 1	: 0 8 s: 8
[RES_0]    L  1 : 0 15 s: 15, mem: 15, time: 0.012308
---------------------------------------------------------------------------------------------
Loop_1_8_0
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #3
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(6 + 0 + 0 + 0 + 0)
	(concrete cube) 6	(6 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 6 -> 2)
	(29 + 6 -> 29 + 2)
	(6 -> 2 -> 1)
	(6 -> 2 -> 1)

		[MUS(s)]:

		[1] w8	(\ep_1 != 8'd0)
[RES_1]       0	: 1	: 0 9 s: 9
[RES_0]    L  1 : 0 16 s: 16, mem: 15, time: 0.013043
---------------------------------------------------------------------------------------------
Loop_1_9_0
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #3
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(6 + 0 + 0 + 0 + 0)
	(concrete cube) 6	(6 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 6 -> 2)
	(29 + 6 -> 29 + 2)
	(6 -> 2 -> 2)
	(6 -> 2 -> 2)

		[MUS(s)]:

		[1] w8	((\transfer_1 != 8'd0) && (\locked_3 == \transfer_1))
[RES_1]       0	: 1	: 0 10 s: 10
[RES_0]    L  1 : 0 18 s: 18, mem: 15, time: 0.013869
---------------------------------------------------------------------------------------------
Loop_1_10_0
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #3
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(6 + 0 + 0 + 0 + 0)
	(concrete cube) 6	(6 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 6 -> 2)
	(29 + 6 -> 29 + 2)
	(6 -> 2 -> 2)
	(6 -> 2 -> 2)

		[MUS(s)]:

		[1] w8	((\locked_2 == \transfer_1) && (\transfer_1 != 8'd0))
[RES_1]       0	: 1	: 0 11 s: 11
[RES_0]    L  1 : 0 20 s: 20, mem: 15, time: 0.014711
---------------------------------------------------------------------------------------------
Loop_1_11_0
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 7	(7 + 0 + 0 + 0 + 0)
	(concrete cube) 7	(7 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 7 -> 2)
	(31 + 7 -> 31 + 2)
	(7 -> 2 -> 2)
	(7 -> 2 -> 2)

		[MUS(s)]:

		[1] w8	((\transfer_0 != 8'd0) && (\locked_1 == \transfer_0))
[RES_1]       0	: 1	: 0 12 s: 12
[RES_0]    L  1 : 0 22 s: 22, mem: 15, time: 0.015954
---------------------------------------------------------------------------------------------
Loop_1_12_0
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 7	(7 + 0 + 0 + 0 + 0)
	(concrete cube) 7	(7 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 7 -> 2)
	(31 + 7 -> 31 + 2)
	(7 -> 2 -> 2)
	(7 -> 2 -> 2)

		[MUS(s)]:

		[1] w8	((\locked_2 == \transfer_0) && (\transfer_0 != 8'd0))
[RES_1]       0	: 1	: 0 13 s: 13
[RES_0]    L  1 : 0 24 s: 24, mem: 15, time: 0.016828
---------------------------------------------------------------------------------------------
Loop_1_13_0
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[1] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 7	(7 + 0 + 0 + 0 + 0)
	(concrete cube) 7	(7 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 7 -> 2)
	(31 + 7 -> 31 + 2)
	(7 -> 2 -> 2)
	(7 -> 2 -> 2)

		[MUS(s)]:

		[1] w8	((\locked_3 == \transfer_0) && (\transfer_0 != 8'd0))
[RES_1]       0	: 1	: 0 14 s: 14
[RES_0]    L  1 : 0 26 s: 26, mem: 15, time: 0.017708
---------------------------------------------------------------------------------------------
Loop_1_14_0
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[1] & T & !P+ ]: UNSAT
[RES_1]       0	: 1	: 0 14 s: 14
[RES_0]    L  1 : 0 26 s: 26, mem: 15, time: 0.018125
	[Forward propagation]:
[RES_1]       0	: 2	: 0 14 0 s: 14
[RES_0]    L  2 : 0 26 0 s: 26, mem: 15, time: 0.019547
---------------------------------------------------------------------------------------------
Loop_2_0_0
---------------------------------------------------------------------------------------------
	F[2] = P
	SAT_a ? [ F[2] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 7	(7 + 0 + 0 + 0 + 0)
	(concrete cube) 7	(7 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 7 -> 3)
	(20 + 7 -> 20 + 3)
	(7 -> 3 -> 3)
	(7 -> 3 -> 3)

		[MUS(s)]:

		[1] w8	((\ep_3 != 8'd0) && (\locked_0 == \transfer_3) && (\transfer_3 != 8'd0))
[RES_1]       0	: 2	: 0 14 1 s: 15
[RES_0]    L  2 : 0 26 3 s: 29, mem: 15, time: 0.020705
---------------------------------------------------------------------------------------------
Loop_2_1_0
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[2] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #3
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(6 + 0 + 0 + 0 + 0)
	(concrete cube) 6	(6 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #8
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #7
	(adding from pre_c to cc. cube) #8
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #7
	(abstract cube) 13	(13 + 0 + 0 + 0 + 0)
	(concrete cube) 13	(13 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 13 -> 1)
	(32 + 13 -> 32 + 1)
	(13 -> 1 -> 1)
	(13 -> 1 -> 1)

		[MUS(s)]:

		[1] w8	(\locked_0 != 8'd0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #5
	(adding required pred. from mixed_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #7
	(adding from pre_c to cc. cube) #5
	(adding pred. from mixed_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #7
	(abstract cube) 11	(11 + 0 + 0 + 0 + 0)
	(concrete cube) 11	(11 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 11 -> 2)
	(32 + 11 -> 32 + 2)
	(11 -> 2 -> 2)
	(11 -> 2 -> 2)

		[MUS(s)]:

		[1] w8	(\held_0 && (\transfer_0 != 8'd0))
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #6
	(adding required pred. from mixed_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #6
	(adding from pre_c to cc. cube) #6
	(adding pred. from mixed_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #6
	(abstract cube) 12	(12 + 0 + 0 + 0 + 0)
	(concrete cube) 12	(12 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #5
	(adding required pred. from mixed_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #8
	(adding from pre_c to cc. cube) #5
	(adding pred. from mixed_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #8
	(abstract cube) 11	(11 + 0 + 0 + 0 + 0)
	(concrete cube) 11	(11 + 0 + 0 + 0)
		(Next: ((\held_1$next == \held_1$next_rhs) && (\ep_0$next == \ep_0$next_rhs) && (\ep_1$next == \ep_1$next_rhs) && (\ep_3$next == \ep_3$next_rhs) && (\transfer_0$next == \transfer_0$next_rhs)))

	[Concrete check]:

[ ACEXT ]: (Length: 3)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 21)
		SAT_c ? [ A[2] & T[2] & A[1]+ ]: 		(bv input core size: 28)
		(cc core: 28 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((\transfer_1 == 8'd0) && (\transfer_1 == \acceptE) && !(LE_1_8_8(\acceptE, \ep_1)))

	[Lemmas]: 
		[1] !(((\transfer_1 == 8'd0) && (\transfer_1 == \acceptE) && !(LE_1_8_8(\acceptE, \ep_1))))
#809
#Lemmas = 1
[RES_1]       1	: 2	: 0 16 1 s: 17
[RES_0]    L  2 : 0 29 3 s: 32, mem: 17, time: 0.029527
---------------------------------------------------------------------------------------------
Loop_2_0_1
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[2] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #3
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(6 + 0 + 0 + 0 + 0)
	(concrete cube) 6	(6 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #6
	(adding required pred. from mixed_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #6
	(adding from pre_c to cc. cube) #6
	(adding pred. from mixed_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #6
	(abstract cube) 12	(12 + 0 + 0 + 0 + 0)
	(concrete cube) 12	(12 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 12 -> 1)
	(34 + 12 -> 34 + 1)
	(12 -> 1 -> 1)
	(12 -> 1 -> 1)

		[MUS(s)]:

		[1] w1	\held_1
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #8
	(adding required pred. from mixed_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #5
	(adding from pre_c to cc. cube) #8
	(adding pred. from mixed_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #5
	(abstract cube) 14	(14 + 0 + 0 + 0 + 0)
	(concrete cube) 14	(14 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 14 -> 2)
	(35 + 14 -> 35 + 2)
	(14 -> 2 -> 1)
	(14 -> 2 -> 1)

		[MUS(s)]:

		[1] w8	(\ep_2 != 8'd0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #6
	(adding required pred. from mixed_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #5
	(adding from pre_c to cc. cube) #6
	(adding pred. from mixed_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #5
	(abstract cube) 12	(12 + 0 + 0 + 0 + 0)
	(concrete cube) 12	(12 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 12 -> 1)
	(35 + 12 -> 35 + 1)
	(12 -> 1 -> 1)
	(12 -> 1 -> 1)

		[MUS(s)]:

		[1] w1	\held_2
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #5
	(adding required pred. from mixed_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #4
	(adding from pre_c to cc. cube) #5
	(adding pred. from mixed_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #4
	(abstract cube) 11	(11 + 0 + 0 + 0 + 0)
	(concrete cube) 11	(11 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 11 -> 1)
	(36 + 11 -> 36 + 1)
	(11 -> 1 -> 1)
	(11 -> 1 -> 1)

		[MUS(s)]:

		[1] w1	\held_3
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #6
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #6
	(adding from pre_c to cc. cube) #6
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #6
	(abstract cube) 10	(10 + 0 + 0 + 0 + 0)
	(concrete cube) 10	(10 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 10 -> 2)
	(36 + 10 -> 36 + 2)
	(10 -> 2 -> 2)
	(10 -> 2 -> 2)

		[MUS(s)]:

		[1] w8	((\transfer_3 == \transfer_0) && (\transfer_0 != 8'd0))
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 6 -> 2)
	(29 + 6 -> 29 + 2)
	(6 -> 2 -> 2)
	(6 -> 2 -> 2)

		[MUS(s)]:

		[1] w8	((\locked_0 == \transfer_3) && (\transfer_3 != 8'd0))
[RES_1]       1	: 2	: 0 20 1 s: 21
[RES_0]    L  2 : 0 33 2 s: 35, mem: 17, time: 0.034711
---------------------------------------------------------------------------------------------
Loop_2_1_1
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[2] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #3
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(6 + 0 + 0 + 0 + 0)
	(concrete cube) 6	(6 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #5
	(adding required pred. from mixed_c to ab. cube) #1
	(adding required pred. from inp_c to ab. cube) #7
	(adding from pre_c to cc. cube) #5
	(adding pred. from mixed_c to cc. cube) #1
	(adding pred. from inp_c to cc. cube) #7
	(abstract cube) 10	(10 + 0 + 0 + 0 + 0)
	(concrete cube) 10	(10 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 10 -> 1)
	(36 + 10 -> 36 + 1)
	(10 -> 1 -> 1)
	(10 -> 1 -> 1)

		[MUS(s)]:

		[1] w8	(\locked_1 != 8'd0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #6
	(adding required pred. from mixed_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #7
	(adding from pre_c to cc. cube) #6
	(adding pred. from mixed_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #7
	(abstract cube) 12	(12 + 0 + 0 + 0 + 0)
	(concrete cube) 12	(12 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 12 -> 3)
	(36 + 12 -> 36 + 3)
	(12 -> 3 -> 3)
	(12 -> 3 -> 3)

		[MUS(s)]:

		[1] w8	((\ep_0 != 8'd0) && \held_0 && (\transfer_1 != 8'd0))
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #5
	(adding required pred. from mixed_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #7
	(adding from pre_c to cc. cube) #5
	(adding pred. from mixed_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #7
	(abstract cube) 11	(11 + 0 + 0 + 0 + 0)
	(concrete cube) 11	(11 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #5
	(adding required pred. from mixed_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #8
	(adding from pre_c to cc. cube) #5
	(adding pred. from mixed_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #8
	(abstract cube) 11	(11 + 0 + 0 + 0 + 0)
	(concrete cube) 11	(11 + 0 + 0 + 0)
		(Next: ((\held_0$next == \held_0$next_rhs) && (\ep_0$next == \ep_0$next_rhs) && (\ep_1$next == \ep_1$next_rhs) && (\ep_3$next == \ep_3$next_rhs) && (\transfer_1$next == \transfer_1$next_rhs)))

	[Concrete check]:

[ ACEXT ]: (Length: 3)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 20)
		SAT_c ? [ A[2] & T[2] & A[1]+ ]: 		(bv input core size: 27)
		(cc core: 27 -> 5)
UNSAT

		[MUS(s)]:
		[1] ((\ep_0$next == 8'd0) && !(LE_1_8_8(\acceptE, \ep_0)) && (\ep_0$next == \ep_0$next_rhs) && (\acceptN == 2'd0) && (\transfer_0 == \acceptE))

	[Lemmas]: 
		[1] !(((\ep_0$next == 8'd0) && !(LE_1_8_8(\acceptE, \ep_0)) && (\ep_0$next == \ep_0$next_rhs) && (\acceptN == 2'd0) && (\transfer_0 == \acceptE)))
#896
#Lemmas = 2
[RES_1]       2	: 2	: 0 22 1 s: 23
[RES_0]    L  2 : 0 37 2 s: 39, mem: 17, time: 0.0431
---------------------------------------------------------------------------------------------
Loop_2_0_2
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[2] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #3
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(6 + 0 + 0 + 0 + 0)
	(concrete cube) 6	(6 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #5
	(adding required pred. from mixed_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #7
	(adding from pre_c to cc. cube) #5
	(adding pred. from mixed_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #7
	(abstract cube) 11	(11 + 0 + 0 + 0 + 0)
	(concrete cube) 11	(11 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 11 -> 3)
	(37 + 11 -> 37 + 3)
	(11 -> 3 -> 2)
	(11 -> 3 -> 2)

		[MUS(s)]:

		[1] w8	(\held_0 && (\transfer_1 != 8'd0))
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #5
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #6
	(adding from pre_c to cc. cube) #5
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #6
	(abstract cube) 9	(9 + 0 + 0 + 0 + 0)
	(concrete cube) 9	(9 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 9 -> 3)
	(37 + 9 -> 37 + 3)
	(9 -> 3 -> 2)
	(9 -> 3 -> 2)

		[MUS(s)]:

		[1] w8	((\transfer_3 == \transfer_1) && (\transfer_1 != 8'd0))
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 6 -> 2)
	(36 + 6 -> 36 + 2)
	(6 -> 2 -> 2)
	(6 -> 2 -> 2)

		[MUS(s)]:

		[1] w8	((\locked_1 == \transfer_3) && (\transfer_3 != 8'd0))
[RES_1]       2	: 2	: 0 22 2 s: 24
[RES_0]    L  2 : 0 36 4 s: 40, mem: 17, time: 0.046213
---------------------------------------------------------------------------------------------
Loop_2_1_2
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[2] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #3
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(6 + 0 + 0 + 0 + 0)
	(concrete cube) 6	(6 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #5
	(adding required pred. from mixed_c to ab. cube) #1
	(adding required pred. from inp_c to ab. cube) #7
	(adding from pre_c to cc. cube) #5
	(adding pred. from mixed_c to cc. cube) #1
	(adding pred. from inp_c to cc. cube) #7
	(abstract cube) 10	(10 + 0 + 0 + 0 + 0)
	(concrete cube) 10	(10 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 10 -> 1)
	(37 + 10 -> 37 + 1)
	(10 -> 1 -> 1)
	(10 -> 1 -> 1)

		[MUS(s)]:

		[1] w8	(\locked_2 != 8'd0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #6
	(adding required pred. from mixed_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #7
	(adding from pre_c to cc. cube) #6
	(adding pred. from mixed_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #7
	(abstract cube) 12	(12 + 0 + 0 + 0 + 0)
	(concrete cube) 12	(12 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 12 -> 2)
	(37 + 12 -> 37 + 2)
	(12 -> 2 -> 2)
	(12 -> 2 -> 2)

		[MUS(s)]:

		[1] w8	(\held_0 && (\transfer_2 != 8'd0))
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #5
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #6
	(adding from pre_c to cc. cube) #5
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #6
	(abstract cube) 9	(9 + 0 + 0 + 0 + 0)
	(concrete cube) 9	(9 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 9 -> 3)
	(37 + 9 -> 37 + 3)
	(9 -> 3 -> 2)
	(9 -> 3 -> 2)

		[MUS(s)]:

		[1] w8	((\transfer_3 == \transfer_2) && (\transfer_2 != 8'd0))
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 6 -> 2)
	(41 + 6 -> 41 + 2)
	(6 -> 2 -> 2)
	(6 -> 2 -> 2)

		[MUS(s)]:

		[1] w8	((\locked_2 == \transfer_3) && (\transfer_3 != 8'd0))
[RES_1]       2	: 2	: 0 24 3 s: 27
[RES_0]    L  2 : 0 39 6 s: 45, mem: 17, time: 0.050251
---------------------------------------------------------------------------------------------
Loop_2_2_2
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[2] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 7	(7 + 0 + 0 + 0 + 0)
	(concrete cube) 7	(7 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 7 -> 3)
	(45 + 7 -> 45 + 3)
	(7 -> 3 -> 3)
	(7 -> 3 -> 3)

		[MUS(s)]:

		[1] w8	((\ep_2 != 8'd0) && (\locked_3 == \transfer_2) && (\transfer_2 != 8'd0))
[RES_1]       2	: 2	: 0 24 4 s: 28
[RES_0]    L  2 : 0 39 9 s: 48, mem: 17, time: 0.051396
---------------------------------------------------------------------------------------------
Loop_2_3_2
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[2] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #3
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(6 + 0 + 0 + 0 + 0)
	(concrete cube) 6	(6 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #6
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #7
	(adding from pre_c to cc. cube) #6
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #7
	(abstract cube) 11	(11 + 0 + 0 + 0 + 0)
	(concrete cube) 11	(11 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 11 -> 1)
	(37 + 11 -> 37 + 1)
	(11 -> 1 -> 1)
	(11 -> 1 -> 1)

		[MUS(s)]:

		[1] w8	(\locked_3 != 8'd0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #6
	(adding required pred. from mixed_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #7
	(adding from pre_c to cc. cube) #6
	(adding pred. from mixed_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #7
	(abstract cube) 12	(12 + 0 + 0 + 0 + 0)
	(concrete cube) 12	(12 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 12 -> 2)
	(37 + 12 -> 37 + 2)
	(12 -> 2 -> 2)
	(12 -> 2 -> 2)

		[MUS(s)]:

		[1] w8	(\held_0 && (\transfer_3 != 8'd0))
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 6 -> 2)
	(48 + 6 -> 48 + 2)
	(6 -> 2 -> 2)
	(6 -> 2 -> 2)

		[MUS(s)]:

		[1] w8	((\locked_3 == \transfer_2) && (\transfer_2 != 8'd0))
[RES_1]       2	: 2	: 0 25 4 s: 29
[RES_0]    L  2 : 0 40 8 s: 48, mem: 17, time: 0.054545
---------------------------------------------------------------------------------------------
Loop_2_4_2
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[2] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #3
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(6 + 0 + 0 + 0 + 0)
	(concrete cube) 6	(6 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #6
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #6
	(adding from pre_c to cc. cube) #6
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #6
	(abstract cube) 10	(10 + 0 + 0 + 0 + 0)
	(concrete cube) 10	(10 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 10 -> 3)
	(37 + 10 -> 37 + 3)
	(10 -> 3 -> 2)
	(10 -> 3 -> 2)

		[MUS(s)]:

		[1] w8	((\transfer_2 == \transfer_0) && (\transfer_0 != 8'd0))
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 6 -> 2)
	(50 + 6 -> 50 + 2)
	(6 -> 2 -> 2)
	(6 -> 2 -> 2)

		[MUS(s)]:

		[1] w8	((\locked_0 == \transfer_2) && (\transfer_2 != 8'd0))
[RES_1]       2	: 2	: 0 25 5 s: 30
[RES_0]    L  2 : 0 40 10 s: 50, mem: 17, time: 0.057044
---------------------------------------------------------------------------------------------
Loop_2_5_2
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[2] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #3
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(6 + 0 + 0 + 0 + 0)
	(concrete cube) 6	(6 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #5
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #6
	(adding from pre_c to cc. cube) #5
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #6
	(abstract cube) 9	(9 + 0 + 0 + 0 + 0)
	(concrete cube) 9	(9 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 9 -> 3)
	(37 + 9 -> 37 + 3)
	(9 -> 3 -> 2)
	(9 -> 3 -> 2)

		[MUS(s)]:

		[1] w8	((\transfer_2 == \transfer_1) && (\transfer_1 != 8'd0))
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 6 -> 2)
	(52 + 6 -> 52 + 2)
	(6 -> 2 -> 2)
	(6 -> 2 -> 2)

		[MUS(s)]:

		[1] w8	((\locked_1 == \transfer_2) && (\transfer_2 != 8'd0))
[RES_1]       2	: 2	: 0 25 6 s: 31
[RES_0]    L  2 : 0 40 12 s: 52, mem: 17, time: 0.059445
---------------------------------------------------------------------------------------------
Loop_2_6_2
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[2] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 7	(7 + 0 + 0 + 0 + 0)
	(concrete cube) 7	(7 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 7 -> 3)
	(55 + 7 -> 55 + 3)
	(7 -> 3 -> 2)
	(7 -> 3 -> 2)

		[MUS(s)]:

		[1] w8	((\locked_2 == \transfer_1) && (\transfer_1 != 8'd0))
[RES_1]       2	: 2	: 0 24 7 s: 31
[RES_0]    L  2 : 0 38 14 s: 52, mem: 17, time: 0.060745
---------------------------------------------------------------------------------------------
Loop_2_7_2
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[2] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 7	(7 + 0 + 0 + 0 + 0)
	(concrete cube) 7	(7 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 7 -> 3)
	(56 + 7 -> 56 + 3)
	(7 -> 3 -> 3)
	(7 -> 3 -> 3)

		[MUS(s)]:

		[1] w8	((\ep_1 != 8'd0) && (\locked_0 == \transfer_1) && (\transfer_1 != 8'd0))
[RES_1]       2	: 2	: 0 24 8 s: 32
[RES_0]    L  2 : 0 38 17 s: 55, mem: 17, time: 0.061963
---------------------------------------------------------------------------------------------
Loop_2_8_2
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[2] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #3
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(6 + 0 + 0 + 0 + 0)
	(concrete cube) 6	(6 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #6
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #6
	(adding from pre_c to cc. cube) #6
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #6
	(abstract cube) 10	(10 + 0 + 0 + 0 + 0)
	(concrete cube) 10	(10 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 10 -> 3)
	(37 + 10 -> 37 + 3)
	(10 -> 3 -> 2)
	(10 -> 3 -> 2)

		[MUS(s)]:

		[1] w8	((\transfer_1 == \transfer_0) && (\transfer_0 != 8'd0))
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 6 -> 2)
	(58 + 6 -> 58 + 2)
	(6 -> 2 -> 2)
	(6 -> 2 -> 2)

		[MUS(s)]:

		[1] w8	((\locked_0 == \transfer_1) && (\transfer_1 != 8'd0))
[RES_1]       2	: 2	: 0 25 8 s: 33
[RES_0]    L  2 : 0 40 16 s: 56, mem: 17, time: 0.064672
---------------------------------------------------------------------------------------------
Loop_2_9_2
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[2] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #3
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(6 + 0 + 0 + 0 + 0)
	(concrete cube) 6	(6 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 6 -> 2)
	(59 + 6 -> 59 + 2)
	(6 -> 2 -> 2)
	(6 -> 2 -> 2)

		[MUS(s)]:

		[1] w8	((\locked_3 == \transfer_1) && (\transfer_1 != 8'd0))
[RES_1]       2	: 2	: 0 24 9 s: 33
[RES_0]    L  2 : 0 38 18 s: 56, mem: 17, time: 0.06595
---------------------------------------------------------------------------------------------
Loop_2_10_2
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[2] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 7	(7 + 0 + 0 + 0 + 0)
	(concrete cube) 7	(7 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 7 -> 2)
	(62 + 7 -> 62 + 2)
	(7 -> 2 -> 2)
	(7 -> 2 -> 2)

		[MUS(s)]:

		[1] w8	((\locked_2 == \transfer_0) && (\transfer_0 != 8'd0))
[RES_1]       2	: 2	: 0 23 10 s: 33
[RES_0]    L  2 : 0 36 20 s: 56, mem: 17, time: 0.067329
---------------------------------------------------------------------------------------------
Loop_2_11_2
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[2] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 7	(7 + 0 + 0 + 0 + 0)
	(concrete cube) 7	(7 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 7 -> 2)
	(63 + 7 -> 63 + 2)
	(7 -> 2 -> 2)
	(7 -> 2 -> 2)

		[MUS(s)]:

		[1] w8	((\locked_1 == \transfer_0) && (\transfer_0 != 8'd0))
[RES_1]       2	: 2	: 0 22 11 s: 33
[RES_0]    L  2 : 0 34 22 s: 56, mem: 17, time: 0.068496
---------------------------------------------------------------------------------------------
Loop_2_12_2
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[2] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 7	(7 + 0 + 0 + 0 + 0)
	(concrete cube) 7	(7 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 7 -> 2)
	(64 + 7 -> 64 + 2)
	(7 -> 2 -> 2)
	(7 -> 2 -> 2)

		[MUS(s)]:

		[1] w8	((\locked_3 == \transfer_0) && (\transfer_0 != 8'd0))
[RES_1]       2	: 2	: 0 21 12 s: 33
[RES_0]    L  2 : 0 32 24 s: 56, mem: 17, time: 0.0696
---------------------------------------------------------------------------------------------
Loop_2_13_2
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[2] & T & !P+ ]: UNSAT
[RES_1]       2	: 2	: 0 21 12 s: 33
[RES_0]    L  2 : 0 32 24 s: 56, mem: 17, time: 0.07005
	[Forward propagation]:
[RES_1]       2	: 3	: 0 15 18 0 s: 33
[RES_0]    L  3 : 0 20 36 0 s: 56, mem: 17, time: 0.075216
---------------------------------------------------------------------------------------------
Loop_3_0_2
---------------------------------------------------------------------------------------------
	F[3] = P
	SAT_a ? [ F[3] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 7	(7 + 0 + 0 + 0 + 0)
	(concrete cube) 7	(7 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #7
	(adding required pred. from mixed_c to ab. cube) #1
	(adding required pred. from inp_c to ab. cube) #7
	(adding from pre_c to cc. cube) #7
	(adding pred. from mixed_c to cc. cube) #1
	(adding pred. from inp_c to cc. cube) #7
	(abstract cube) 12	(12 + 0 + 0 + 0 + 0)
	(concrete cube) 12	(12 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 12 -> 2)
	(72 + 12 -> 72 + 2)
	(12 -> 2 -> 2)
	(12 -> 2 -> 2)

		[MUS(s)]:

		[1] w8	((\locked_0 != 8'd0) && (\ep_3 != 8'd0))
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #7
	(adding required pred. from mixed_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #7
	(adding from pre_c to cc. cube) #7
	(adding pred. from mixed_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #7
	(abstract cube) 13	(13 + 0 + 0 + 0 + 0)
	(concrete cube) 13	(13 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 13 -> 2)
	(73 + 13 -> 73 + 2)
	(13 -> 2 -> 2)
	(13 -> 2 -> 2)

		[MUS(s)]:

		[1] w8	((\ep_3 != 8'd0) && \held_0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #11
	(adding required pred. from mixed_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #6
	(adding from pre_c to cc. cube) #11
	(adding pred. from mixed_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #6
	(abstract cube) 17	(17 + 0 + 0 + 0 + 0)
	(concrete cube) 17	(17 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 17 -> 2)
	(75 + 17 -> 75 + 2)
	(17 -> 2 -> 2)
	(17 -> 2 -> 2)

		[MUS(s)]:

		[1] w8	(\held_1 && (\ep_3 != 8'd0))
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #11
	(adding required pred. from mixed_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #5
	(adding from pre_c to cc. cube) #11
	(adding pred. from mixed_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #5
	(abstract cube) 17	(17 + 0 + 0 + 0 + 0)
	(concrete cube) 17	(17 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 17 -> 2)
	(77 + 17 -> 77 + 2)
	(17 -> 2 -> 2)
	(17 -> 2 -> 2)

		[MUS(s)]:

		[1] w8	((\ep_2 != 8'd0) && (\ep_3 != 8'd0))
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #8
	(adding required pred. from mixed_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #5
	(adding from pre_c to cc. cube) #8
	(adding pred. from mixed_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #5
	(abstract cube) 14	(14 + 0 + 0 + 0 + 0)
	(concrete cube) 14	(14 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 14 -> 2)
	(78 + 14 -> 78 + 2)
	(14 -> 2 -> 2)
	(14 -> 2 -> 2)

		[MUS(s)]:

		[1] w8	(\held_2 && (\ep_3 != 8'd0))
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #7
	(adding required pred. from mixed_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #4
	(adding from pre_c to cc. cube) #7
	(adding pred. from mixed_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #4
	(abstract cube) 13	(13 + 0 + 0 + 0 + 0)
	(concrete cube) 13	(13 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #7
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #6
	(adding from pre_c to cc. cube) #7
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #6
	(abstract cube) 14	(14 + 0 + 0 + 0 + 0)
	(concrete cube) 14	(14 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 14 -> 2)
	(37 + 14 -> 37 + 2)
	(14 -> 2 -> 2)
	(14 -> 2 -> 2)

		[MUS(s)]:

		[1] w8	((\transfer_3 != 8'd0) && (\transfer_0 != 8'd0))
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 13 -> 3)
	(81 + 13 -> 81 + 3)
	(13 -> 3 -> 2)
	(13 -> 3 -> 2)

		[MUS(s)]:

		[1] w8	((\ep_3 != 8'd0) && (\transfer_0 != 8'd0))
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 7 -> 3)
	(35 + 7 -> 35 + 3)
	(7 -> 3 -> 3)
	(7 -> 3 -> 3)

		[MUS(s)]:

		[1] w8	((\locked_0 == \transfer_3) && (\ep_3 != 8'd0) && (\transfer_3 != 8'd0))
[RES_1]       2	: 3	: 0 16 24 1 s: 41
[RES_0]    L  3 : 0 22 48 3 s: 73, mem: 18, time: 0.084754
---------------------------------------------------------------------------------------------
Loop_3_1_2
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[3] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #3
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(6 + 0 + 0 + 0 + 0)
	(concrete cube) 6	(6 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #4
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #4
	(abstract cube) 9	(9 + 0 + 0 + 0 + 0)
	(concrete cube) 9	(9 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 9 -> 2)
	(83 + 9 -> 83 + 2)
	(9 -> 2 -> 2)
	(9 -> 2 -> 2)

		[MUS(s)]:

		[1] w8	(\held_3 && (\locked_0 != 8'd0))
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #6
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #7
	(adding from pre_c to cc. cube) #6
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #7
	(abstract cube) 11	(11 + 0 + 0 + 0 + 0)
	(concrete cube) 11	(11 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 11 -> 2)
	(84 + 11 -> 84 + 2)
	(11 -> 2 -> 2)
	(11 -> 2 -> 2)

		[MUS(s)]:

		[1] w8	((\ep_0 != \locked_0) && (\locked_0 != 8'd0))
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #5
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #7
	(adding from pre_c to cc. cube) #5
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #7
	(abstract cube) 10	(10 + 0 + 0 + 0 + 0)
	(concrete cube) 10	(10 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #5
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #6
	(adding from pre_c to cc. cube) #5
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #6
	(abstract cube) 12	(12 + 0 + 0 + 0 + 0)
	(concrete cube) 12	(12 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #1
	(adding required pred. from inp_c to ab. cube) #8
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #1
	(adding pred. from inp_c to cc. cube) #8
	(abstract cube) 9	(9 + 0 + 0 + 0 + 0)
	(concrete cube) 9	(9 + 0 + 0 + 0)
		(Next: ((\ep_0$next == \ep_0$next_rhs) && (\ep_3$next == \ep_3$next_rhs) && (\transfer_0$next == \transfer_0$next_rhs) && (\transfer_3$next == \transfer_3$next_rhs)))

	[Concrete check]:

[ ACEXT ]: (Length: 4)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 19)
		(cc core: 19 -> 11)
UNSAT

		[MUS(s)]:
		[1] ((\transfer_3$next != 8'd0) && (\locked_0$next == \transfer_3$next) && (\acceptN == 2'd3) && (\transfer_3$next == \transfer_3$next_rhs) && (\ep_0 == \locked_0) && (\grantN1 == 2'd0) && (\locked_0$next == \locked_0$next_rhs) && (\transfer_3 == 8'd0))

	[Lemmas]: 
		[1] !(((\transfer_3$next != 8'd0) && (\locked_0$next == \transfer_3$next) && (\acceptN == 2'd3) && (\transfer_3$next == \transfer_3$next_rhs) && (\ep_0 == \locked_0) && (\grantN1 == 2'd0) && (\locked_0$next == \locked_0$next_rhs) && (\transfer_3 == 8'd0)))
#1171
#Lemmas = 3
[RES_1]       3	: 3	: 0 16 26 1 s: 43
[RES_0]    L  3 : 0 22 52 3 s: 77, mem: 18, time: 0.094123
---------------------------------------------------------------------------------------------
Loop_3_0_3
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[3] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #3
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(6 + 0 + 0 + 0 + 0)
	(concrete cube) 6	(6 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #6
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #6
	(adding from pre_c to cc. cube) #6
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #6
	(abstract cube) 11	(11 + 0 + 0 + 0 + 0)
	(concrete cube) 11	(11 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 11 -> 2)
	(86 + 11 -> 86 + 2)
	(11 -> 2 -> 2)
	(11 -> 2 -> 2)

		[MUS(s)]:

		[1] w8	((\ep_1 != 8'd0) && (\locked_0 != 8'd0))
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #5
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #6
	(adding from pre_c to cc. cube) #5
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #6
	(abstract cube) 10	(10 + 0 + 0 + 0 + 0)
	(concrete cube) 10	(10 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 10 -> 2)
	(87 + 10 -> 87 + 2)
	(10 -> 2 -> 2)
	(10 -> 2 -> 2)

		[MUS(s)]:

		[1] w8	(\held_1 && (\locked_0 != 8'd0))
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #5
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #5
	(adding from pre_c to cc. cube) #5
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #5
	(abstract cube) 10	(10 + 0 + 0 + 0 + 0)
	(concrete cube) 10	(10 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 10 -> 2)
	(88 + 10 -> 88 + 2)
	(10 -> 2 -> 2)
	(10 -> 2 -> 2)

		[MUS(s)]:

		[1] w8	(\held_2 && (\locked_0 != 8'd0))
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #6
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #7
	(adding from pre_c to cc. cube) #6
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #7
	(abstract cube) 11	(11 + 0 + 0 + 0 + 0)
	(concrete cube) 11	(11 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 11 -> 3)
	(89 + 11 -> 89 + 3)
	(11 -> 3 -> 3)
	(11 -> 3 -> 3)

		[MUS(s)]:

		[1] w8	((\ep_0 == \locked_0) && (\ep_0 != 8'd0) && (\transfer_3 != 8'd0))
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #1
	(adding required pred. from inp_c to ab. cube) #7
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #1
	(adding pred. from inp_c to cc. cube) #7
	(abstract cube) 9	(9 + 0 + 0 + 0 + 0)
	(concrete cube) 9	(9 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #3
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(abstract cube) 6	(6 + 0 + 0 + 0 + 0)
	(concrete cube) 6	(6 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 6 -> 2)
	(38 + 6 -> 38 + 2)
	(6 -> 2 -> 1)
	(6 -> 2 -> 1)

		[MUS(s)]:

		[1] w8	(\ep_0 == 8'd0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(abstract cube) 7	(7 + 0 + 0 + 0 + 0)
	(concrete cube) 7	(7 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #7
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #7
	(abstract cube) 9	(9 + 0 + 0 + 0 + 0)
	(concrete cube) 9	(9 + 0 + 0 + 0)
		(Next: ((\ep_0$next == \ep_0$next_rhs) && (\ep_3$next == \ep_3$next_rhs) && (\transfer_0$next == \transfer_0$next_rhs)))

	[Concrete check]:

[ ACEXT ]: (Length: 4)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 18)
		(cc core: 18 -> 10)
UNSAT

		[MUS(s)]:
		[1] (!(LE_1_8_8(\grantE, \ep_0)) && \held_0 && (\grantN2 == 2'd3) && (\transfer_3$next == \transfer_3$next_rhs) && (\acceptN != 2'd0) && (\locked_0$next == \transfer_3$next) && (\grantN1 == 2'd0) && (\ep_0 == \locked_0) && (\locked_0$next == \locked_0$next_rhs) && (\acceptN != 2'd3))

	[Lemmas]: 
		[1] !((!(LE_1_8_8(\grantE, \ep_0)) && \held_0 && (\grantN2 == 2'd3) && (\transfer_3$next == \transfer_3$next_rhs) && (\acceptN != 2'd0) && (\locked_0$next == \transfer_3$next) && (\grantN1 == 2'd0) && (\ep_0 == \locked_0) && (\locked_0$next == \locked_0$next_rhs) && (\acceptN != 2'd3)))
#1226
#Lemmas = 4
[RES_1]       4	: 3	: 0 17 30 1 s: 48
[RES_0]    L  3 : 0 23 61 3 s: 87, mem: 18, time: 0.106699
---------------------------------------------------------------------------------------------
Loop_3_0_4
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[3] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #3
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(6 + 0 + 0 + 0 + 0)
	(concrete cube) 6	(6 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #6
	(adding required pred. from mixed_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #7
	(adding from pre_c to cc. cube) #6
	(adding pred. from mixed_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #7
	(abstract cube) 12	(12 + 0 + 0 + 0 + 0)
	(concrete cube) 12	(12 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 12 -> 5)
	(92 + 12 -> 92 + 5)
	(12 -> 5 -> 3)
	(12 -> 5 -> 3)

		[MUS(s)]:

		[1] w8	((\ep_0 != \transfer_0) && \held_0 && (\transfer_0 != 8'd0))
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #7
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #7
	(abstract cube) 10	(10 + 0 + 0 + 0 + 0)
	(concrete cube) 10	(10 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #6
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #6
	(abstract cube) 11	(11 + 0 + 0 + 0 + 0)
	(concrete cube) 11	(11 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #7
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #7
	(abstract cube) 9	(9 + 0 + 0 + 0 + 0)
	(concrete cube) 9	(9 + 0 + 0 + 0)
		(Next: ((\ep_0$next == \ep_0$next_rhs) && (\ep_3$next == \ep_3$next_rhs) && (\transfer_0$next == \transfer_0$next_rhs)))

	[Concrete check]:

[ ACEXT ]: (Length: 4)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 19)
		(cc core: 19 -> 3)
UNSAT

		[MUS(s)]:
		[1] (!(LE_1_8_8(\acceptE, \ep_0)) && (\ep_0 == \transfer_0) && (\transfer_0 == \acceptE))

	[Lemmas]: 
		[1] !((!(LE_1_8_8(\acceptE, \ep_0)) && (\ep_0 == \transfer_0) && (\transfer_0 == \acceptE)))
#1252
#Lemmas = 5
[RES_1]       5	: 3	: 0 17 31 1 s: 49
[RES_0]    L  3 : 0 23 64 3 s: 90, mem: 18, time: 0.113175
---------------------------------------------------------------------------------------------
Loop_3_0_5
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[3] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #3
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(6 + 0 + 0 + 0 + 0)
	(concrete cube) 6	(6 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #5
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #7
	(adding from pre_c to cc. cube) #5
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #7
	(abstract cube) 10	(10 + 0 + 0 + 0 + 0)
	(concrete cube) 10	(10 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #6
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #6
	(abstract cube) 11	(11 + 0 + 0 + 0 + 0)
	(concrete cube) 11	(11 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #7
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #7
	(abstract cube) 9	(9 + 0 + 0 + 0 + 0)
	(concrete cube) 9	(9 + 0 + 0 + 0)
		(Next: ((\ep_0$next == \ep_0$next_rhs) && (\ep_3$next == \ep_3$next_rhs) && (\transfer_0$next == \transfer_0$next_rhs)))

	[Concrete check]:

[ ACEXT ]: (Length: 4)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 19)
		(cc core: 19 -> 10)
UNSAT

		[MUS(s)]:
		[1] ((\ep_0 == \locked_0) && !(LE_1_8_8(\grantE, \ep_0)) && (\grantN2 == 2'd3) && (\locked_0$next == \locked_0$next_rhs) && (\acceptN == 2'd0) && (\transfer_0 != \acceptE) && (\locked_0$next == \transfer_3$next) && (\transfer_3$next == \transfer_3$next_rhs) && (\grantN1 == 2'd0) && \held_0)

	[Lemmas]: 
		[1] !(((\ep_0 == \locked_0) && !(LE_1_8_8(\grantE, \ep_0)) && (\grantN2 == 2'd3) && (\locked_0$next == \locked_0$next_rhs) && (\acceptN == 2'd0) && (\transfer_0 != \acceptE) && (\locked_0$next == \transfer_3$next) && (\transfer_3$next == \transfer_3$next_rhs) && (\grantN1 == 2'd0) && \held_0))
#1264
#Lemmas = 6
[RES_1]       6	: 3	: 0 17 31 1 s: 49
[RES_0]    L  3 : 0 23 64 3 s: 90, mem: 18, time: 0.120561
---------------------------------------------------------------------------------------------
Loop_3_0_6
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[3] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #3
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(6 + 0 + 0 + 0 + 0)
	(concrete cube) 6	(6 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #5
	(adding required pred. from mixed_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #7
	(adding from pre_c to cc. cube) #5
	(adding pred. from mixed_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #7
	(abstract cube) 11	(11 + 0 + 0 + 0 + 0)
	(concrete cube) 11	(11 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #6
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #6
	(abstract cube) 11	(11 + 0 + 0 + 0 + 0)
	(concrete cube) 11	(11 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #7
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #7
	(abstract cube) 9	(9 + 0 + 0 + 0 + 0)
	(concrete cube) 9	(9 + 0 + 0 + 0)
		(Next: ((\ep_0$next == \ep_0$next_rhs) && (\ep_3$next == \ep_3$next_rhs) && (\transfer_0$next == \transfer_0$next_rhs)))

	[Concrete check]:

[ ACEXT ]: (Length: 4)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 20)
		(cc core: 20 -> 10)
UNSAT

		[MUS(s)]:
		[1] ((\ep_0 == \locked_0) && (\grantN1 == 2'd0) && !(LE_1_8_8(\grantE, \ep_0)) && (\grantN2 == 2'd3) && \held_0 && (\acceptN == 2'd0) && (\locked_0$next == \transfer_3$next) && (\locked_0$next == \locked_0$next_rhs) && LE_1_8_8(\acceptE, \ep_0) && (\transfer_3$next == \transfer_3$next_rhs))

	[Lemmas]: 
		[1] !(((\ep_0 == \locked_0) && (\grantN1 == 2'd0) && !(LE_1_8_8(\grantE, \ep_0)) && (\grantN2 == 2'd3) && \held_0 && (\acceptN == 2'd0) && (\locked_0$next == \transfer_3$next) && (\locked_0$next == \locked_0$next_rhs) && LE_1_8_8(\acceptE, \ep_0) && (\transfer_3$next == \transfer_3$next_rhs)))
#1277
#Lemmas = 7
[RES_1]       7	: 3	: 0 17 31 1 s: 49
[RES_0]    L  3 : 0 23 64 3 s: 90, mem: 18, time: 0.13076
---------------------------------------------------------------------------------------------
Loop_3_0_7
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[3] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #3
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(6 + 0 + 0 + 0 + 0)
	(concrete cube) 6	(6 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #4
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #4
	(abstract cube) 10	(10 + 0 + 0 + 0 + 0)
	(concrete cube) 10	(10 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 10 -> 2)
	(96 + 10 -> 96 + 2)
	(10 -> 2 -> 1)
	(10 -> 2 -> 1)

		[MUS(s)]:

		[1] w8	(\ep_0 == 8'd0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #5
	(adding required pred. from mixed_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #4
	(adding from pre_c to cc. cube) #5
	(adding pred. from mixed_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #4
	(abstract cube) 11	(11 + 0 + 0 + 0 + 0)
	(concrete cube) 11	(11 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #5
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #6
	(adding from pre_c to cc. cube) #5
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #6
	(abstract cube) 12	(12 + 0 + 0 + 0 + 0)
	(concrete cube) 12	(12 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #5
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #8
	(adding from pre_c to cc. cube) #5
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #8
	(abstract cube) 10	(10 + 0 + 0 + 0 + 0)
	(concrete cube) 10	(10 + 0 + 0 + 0)
		(Next: ((\ep_0$next == \ep_0$next_rhs) && (\ep_3$next == \ep_3$next_rhs) && (\transfer_0$next == \transfer_0$next_rhs) && (\transfer_3$next == \transfer_3$next_rhs)))

	[Concrete check]:

[ ACEXT ]: (Length: 4)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 20)
		SAT_c ? [ A[2] & T[2] & A[1]+ ]: 		(bv input core size: 27)
		(cc core: 27 -> 4)
UNSAT

		[MUS(s)]:
		[1] ((\grantN1 != 2'd3) && (\grantN1 != 2'd1) && (\grantN1 != 2'd0) && (\grantN1 != 2'd2))

	[Lemmas]: 
		[1] !(((\grantN1 != 2'd3) && (\grantN1 != 2'd1) && (\grantN1 != 2'd0) && (\grantN1 != 2'd2)))
#1293
#Lemmas = 8
[RES_1]       8	: 3	: 0 16 32 1 s: 49
[RES_0]    L  3 : 0 22 65 3 s: 90, mem: 18, time: 0.139913
---------------------------------------------------------------------------------------------
Loop_3_0_8
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[3] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #3
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(6 + 0 + 0 + 0 + 0)
	(concrete cube) 6	(6 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #5
	(adding required pred. from mixed_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #4
	(adding from pre_c to cc. cube) #5
	(adding pred. from mixed_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #4
	(abstract cube) 11	(11 + 0 + 0 + 0 + 0)
	(concrete cube) 11	(11 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #6
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #6
	(adding from pre_c to cc. cube) #6
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #6
	(abstract cube) 10	(10 + 0 + 0 + 0 + 0)
	(concrete cube) 10	(10 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #6
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #9
	(adding from pre_c to cc. cube) #6
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #9
	(abstract cube) 11	(11 + 0 + 0 + 0 + 0)
	(concrete cube) 11	(11 + 0 + 0 + 0)
		(Next: ((\held_1$next == \held_1$next_rhs) && (\ep_0$next == \ep_0$next_rhs) && (\ep_3$next == \ep_3$next_rhs) && (\transfer_0$next == \transfer_0$next_rhs) && (\transfer_3$next == \transfer_3$next_rhs)))

	[Concrete check]:

[ ACEXT ]: (Length: 4)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 20)
		SAT_c ? [ A[2] & T[2] & A[1]+ ]: 		(bv input core size: 25)
		(cc core: 25 -> 3)
UNSAT

		[MUS(s)]:
		[1] ((\transfer_3 == 8'd0) && (\transfer_3 == \acceptE) && !(LE_1_8_8(\acceptE, \ep_3)))

	[Lemmas]: 
		[1] !(((\transfer_3 == 8'd0) && (\transfer_3 == \acceptE) && !(LE_1_8_8(\acceptE, \ep_3))))
#1307
#Lemmas = 9
[RES_1]       9	: 3	: 0 16 32 1 s: 49
[RES_0]    L  3 : 0 22 65 3 s: 90, mem: 18, time: 0.148
---------------------------------------------------------------------------------------------
Loop_3_0_9
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[3] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #3
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(6 + 0 + 0 + 0 + 0)
	(concrete cube) 6	(6 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #5
	(adding required pred. from mixed_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #4
	(adding from pre_c to cc. cube) #5
	(adding pred. from mixed_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #4
	(abstract cube) 11	(11 + 0 + 0 + 0 + 0)
	(concrete cube) 11	(11 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 11 -> 2)
	(99 + 11 -> 99 + 2)
	(11 -> 2 -> 2)
	(11 -> 2 -> 2)

		[MUS(s)]:

		[1] w8	(\held_3 && (\transfer_0 != 8'd0))
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #8
	(adding required pred. from mixed_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #6
	(adding from pre_c to cc. cube) #8
	(adding pred. from mixed_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #6
	(abstract cube) 14	(14 + 0 + 0 + 0 + 0)
	(concrete cube) 14	(14 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #9
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #7
	(adding from pre_c to cc. cube) #9
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #7
	(abstract cube) 13	(13 + 0 + 0 + 0 + 0)
	(concrete cube) 13	(13 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 13 -> 3)
	(44 + 13 -> 44 + 3)
	(13 -> 3 -> 2)
	(13 -> 3 -> 2)

		[MUS(s)]:

		[1] w8	((\transfer_1 != 8'd0) && (\transfer_0 != 8'd0))
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 14 -> 2)
	(101 + 14 -> 101 + 2)
	(14 -> 2 -> 2)
	(14 -> 2 -> 2)

		[MUS(s)]:

		[1] w8	(\held_1 && (\transfer_0 != 8'd0))
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #6
	(adding required pred. from mixed_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #5
	(adding from pre_c to cc. cube) #6
	(adding pred. from mixed_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #5
	(abstract cube) 12	(12 + 0 + 0 + 0 + 0)
	(concrete cube) 12	(12 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 12 -> 3)
	(102 + 12 -> 102 + 3)
	(12 -> 3 -> 3)
		(added cond. from num.)	(\ep_2$next != \transfer_0$next)
	(12 -> 3 -> 4 -> 3)

		[MUS(s)]:

		[1] w8	((\ep_2 == 8'd0) && \held_2 && (\ep_2 != \transfer_0))
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #6
	(adding required pred. from mixed_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #5
	(adding from pre_c to cc. cube) #6
	(adding pred. from mixed_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #5
	(abstract cube) 12	(12 + 0 + 0 + 0 + 0)
	(concrete cube) 12	(12 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 12 -> 3)
	(103 + 12 -> 103 + 3)
	(12 -> 3 -> 2)
	(12 -> 3 -> 2)

		[MUS(s)]:

		[1] w8	((\ep_2 == \transfer_0) && (\ep_2 != 8'd0))
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #8
	(adding required pred. from mixed_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #5
	(adding from pre_c to cc. cube) #8
	(adding pred. from mixed_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #5
	(abstract cube) 14	(14 + 0 + 0 + 0 + 0)
	(concrete cube) 14	(14 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #9
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #7
	(adding from pre_c to cc. cube) #9
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #7
	(abstract cube) 13	(13 + 0 + 0 + 0 + 0)
	(concrete cube) 13	(13 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 13 -> 3)
	(44 + 13 -> 44 + 3)
	(13 -> 3 -> 2)
	(13 -> 3 -> 2)

		[MUS(s)]:

		[1] w8	((\transfer_2 != 8'd0) && (\transfer_0 != 8'd0))
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 14 -> 3)
	(105 + 14 -> 105 + 3)
	(14 -> 3 -> 2)
	(14 -> 3 -> 2)

		[MUS(s)]:

		[1] w8	(\held_2 && (\transfer_0 != 8'd0))
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 6 -> 2)
	(56 + 6 -> 56 + 2)
	(6 -> 2 -> 2)
	(6 -> 2 -> 2)

		[MUS(s)]:

		[1] w8	((\locked_0 == \transfer_3) && (\transfer_3 != 8'd0))
[RES_1]       9	: 3	: 0 18 36 1 s: 55
[RES_0]    L  3 : 0 26 74 2 s: 102, mem: 18, time: 0.158923
---------------------------------------------------------------------------------------------
Loop_3_1_9
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[3] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #3
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(6 + 0 + 0 + 0 + 0)
	(concrete cube) 6	(6 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #5
	(adding required pred. from mixed_c to ab. cube) #1
	(adding required pred. from inp_c to ab. cube) #7
	(adding from pre_c to cc. cube) #5
	(adding pred. from mixed_c to cc. cube) #1
	(adding pred. from inp_c to cc. cube) #7
	(abstract cube) 10	(10 + 0 + 0 + 0 + 0)
	(concrete cube) 10	(10 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 10 -> 2)
	(107 + 10 -> 107 + 2)
	(10 -> 2 -> 2)
	(10 -> 2 -> 2)

		[MUS(s)]:

		[1] w8	((\locked_1 != 8'd0) && \held_0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #8
	(adding required pred. from mixed_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #7
	(adding from pre_c to cc. cube) #8
	(adding pred. from mixed_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #7
	(abstract cube) 14	(14 + 0 + 0 + 0 + 0)
	(concrete cube) 14	(14 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 14 -> 2)
	(108 + 14 -> 108 + 2)
	(14 -> 2 -> 2)
	(14 -> 2 -> 2)

		[MUS(s)]:

		[1] w8	((\ep_1 != 8'd0) && \held_0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #6
	(adding required pred. from mixed_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #7
	(adding from pre_c to cc. cube) #6
	(adding pred. from mixed_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #7
	(abstract cube) 12	(12 + 0 + 0 + 0 + 0)
	(concrete cube) 12	(12 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 12 -> 2)
	(109 + 12 -> 109 + 2)
	(12 -> 2 -> 2)
	(12 -> 2 -> 2)

		[MUS(s)]:

		[1] w8	(\held_0 && (\transfer_1 != 8'd0))
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #6
	(adding required pred. from mixed_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #5
	(adding from pre_c to cc. cube) #6
	(adding pred. from mixed_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #5
	(abstract cube) 12	(12 + 0 + 0 + 0 + 0)
	(concrete cube) 12	(12 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #7
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #7
	(adding from pre_c to cc. cube) #7
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #7
	(abstract cube) 11	(11 + 0 + 0 + 0 + 0)
	(concrete cube) 11	(11 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 11 -> 3)
	(44 + 11 -> 44 + 3)
	(11 -> 3 -> 2)
	(11 -> 3 -> 2)

		[MUS(s)]:

		[1] w8	((\transfer_2 != 8'd0) && (\transfer_1 != 8'd0))
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 12 -> 3)
	(111 + 12 -> 111 + 3)
	(12 -> 3 -> 2)
	(12 -> 3 -> 2)

		[MUS(s)]:

		[1] w8	((\ep_2 != 8'd0) && (\transfer_1 != 8'd0))
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #5
	(adding required pred. from mixed_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #5
	(adding from pre_c to cc. cube) #5
	(adding pred. from mixed_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #5
	(abstract cube) 11	(11 + 0 + 0 + 0 + 0)
	(concrete cube) 11	(11 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #6
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #7
	(adding from pre_c to cc. cube) #6
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #7
	(abstract cube) 10	(10 + 0 + 0 + 0 + 0)
	(concrete cube) 10	(10 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #7
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #10
	(adding from pre_c to cc. cube) #7
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #10
	(abstract cube) 12	(12 + 0 + 0 + 0 + 0)
	(concrete cube) 12	(12 + 0 + 0 + 0)
		(Next: ((\held_0$next == \held_0$next_rhs) && (\ep_1$next == \ep_1$next_rhs) && (\ep_2$next == \ep_2$next_rhs) && (\ep_3$next == \ep_3$next_rhs) && (\transfer_1$next == \transfer_1$next_rhs) && (\transfer_2$next == \transfer_2$next_rhs)))

	[Concrete check]:

[ ACEXT ]: (Length: 4)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 20)
		SAT_c ? [ A[2] & T[2] & A[1]+ ]: 		(bv input core size: 26)
		(cc core: 26 -> 3)
UNSAT

		[MUS(s)]:
		[1] (!(LE_1_8_8(\acceptE, \ep_2)) && (\transfer_2 == \acceptE) && (\transfer_2 == 8'd0))

	[Lemmas]: 
		[1] !((!(LE_1_8_8(\acceptE, \ep_2)) && (\transfer_2 == \acceptE) && (\transfer_2 == 8'd0)))
#1410
#Lemmas = 10
[RES_1]       10	: 3	: 0 18 40 1 s: 59
[RES_0]    L  3 : 0 26 82 2 s: 110, mem: 18, time: 0.171882
---------------------------------------------------------------------------------------------
Loop_3_0_10
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[3] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #3
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(6 + 0 + 0 + 0 + 0)
	(concrete cube) 6	(6 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #5
	(adding required pred. from mixed_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #5
	(adding from pre_c to cc. cube) #5
	(adding pred. from mixed_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #5
	(abstract cube) 11	(11 + 0 + 0 + 0 + 0)
	(concrete cube) 11	(11 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 11 -> 2)
	(113 + 11 -> 113 + 2)
	(11 -> 2 -> 2)
	(11 -> 2 -> 2)

		[MUS(s)]:

		[1] w8	(\held_2 && (\transfer_1 != 8'd0))
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #6
	(adding required pred. from mixed_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #5
	(adding from pre_c to cc. cube) #6
	(adding pred. from mixed_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #5
	(abstract cube) 12	(12 + 0 + 0 + 0 + 0)
	(concrete cube) 12	(12 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 12 -> 2)
	(114 + 12 -> 114 + 2)
	(12 -> 2 -> 2)
	(12 -> 2 -> 2)

		[MUS(s)]:

		[1] w8	((\locked_1 != 8'd0) && \held_2)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #6
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #6
	(adding from pre_c to cc. cube) #6
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #6
	(abstract cube) 11	(11 + 0 + 0 + 0 + 0)
	(concrete cube) 11	(11 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 11 -> 2)
	(115 + 11 -> 115 + 2)
	(11 -> 2 -> 2)
	(11 -> 2 -> 2)

		[MUS(s)]:

		[1] w8	((\ep_1 == 8'd0) && \held_1)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #8
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #6
	(adding from pre_c to cc. cube) #8
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #6
	(abstract cube) 13	(13 + 0 + 0 + 0 + 0)
	(concrete cube) 13	(13 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 13 -> 1)
	(116 + 13 -> 116 + 1)
	(13 -> 1 -> 1)
	(13 -> 1 -> 1)

		[MUS(s)]:

		[1] w8	(\ep_1 != \locked_1)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #6
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #6
	(adding from pre_c to cc. cube) #6
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #6
	(abstract cube) 11	(11 + 0 + 0 + 0 + 0)
	(concrete cube) 11	(11 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 11 -> 3)
	(117 + 11 -> 117 + 3)
	(11 -> 3 -> 3)
	(11 -> 3 -> 3)

		[MUS(s)]:

		[1] w8	((\ep_1 != \transfer_1) && \held_1 && (\transfer_1 != 8'd0))
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #5
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #6
	(adding from pre_c to cc. cube) #5
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #6
	(abstract cube) 10	(10 + 0 + 0 + 0 + 0)
	(concrete cube) 10	(10 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #5
	(adding from pre_c to cc. cube) #3
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #5
	(abstract cube) 9	(9 + 0 + 0 + 0 + 0)
	(concrete cube) 9	(9 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #1
	(adding required pred. from inp_c to ab. cube) #7
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #1
	(adding pred. from inp_c to cc. cube) #7
	(abstract cube) 9	(9 + 0 + 0 + 0 + 0)
	(concrete cube) 9	(9 + 0 + 0 + 0)
		(Next: ((\ep_1$next == \ep_1$next_rhs) && (\ep_3$next == \ep_3$next_rhs) && (\transfer_1$next == \transfer_1$next_rhs)))

	[Concrete check]:

[ ACEXT ]: (Length: 4)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 19)
		(cc core: 19 -> 10)
UNSAT

		[MUS(s)]:
		[1] ((\locked_1$next == \transfer_3$next) && (\transfer_1 != \acceptE) && (\transfer_3$next == \transfer_3$next_rhs) && \held_1 && (\acceptN == 2'd1) && (\locked_1$next == \locked_1$next_rhs) && (\grantN2 == 2'd3) && !(LE_1_8_8(\grantE, \ep_1)) && (\grantN1 == 2'd1) && (\ep_1 == \locked_1))

	[Lemmas]: 
		[1] !(((\locked_1$next == \transfer_3$next) && (\transfer_1 != \acceptE) && (\transfer_3$next == \transfer_3$next_rhs) && \held_1 && (\acceptN == 2'd1) && (\locked_1$next == \locked_1$next_rhs) && (\grantN2 == 2'd3) && !(LE_1_8_8(\grantE, \ep_1)) && (\grantN1 == 2'd1) && (\ep_1 == \locked_1)))
#1466
#Lemmas = 11
[RES_1]       11	: 3	: 0 18 45 1 s: 64
[RES_0]    L  3 : 0 26 92 2 s: 120, mem: 19, time: 0.187494
---------------------------------------------------------------------------------------------
Loop_3_0_11
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[3] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #3
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(6 + 0 + 0 + 0 + 0)
	(concrete cube) 6	(6 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #5
	(adding required pred. from mixed_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #6
	(adding from pre_c to cc. cube) #5
	(adding pred. from mixed_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #6
	(abstract cube) 11	(11 + 0 + 0 + 0 + 0)
	(concrete cube) 11	(11 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #5
	(adding from pre_c to cc. cube) #3
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #5
	(abstract cube) 9	(9 + 0 + 0 + 0 + 0)
	(concrete cube) 9	(9 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #1
	(adding required pred. from inp_c to ab. cube) #7
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #1
	(adding pred. from inp_c to cc. cube) #7
	(abstract cube) 9	(9 + 0 + 0 + 0 + 0)
	(concrete cube) 9	(9 + 0 + 0 + 0)
		(Next: ((\ep_1$next == \ep_1$next_rhs) && (\ep_3$next == \ep_3$next_rhs) && (\transfer_1$next == \transfer_1$next_rhs)))

	[Concrete check]:

[ ACEXT ]: (Length: 4)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 20)
		(cc core: 20 -> 10)
UNSAT

		[MUS(s)]:
		[1] ((\transfer_3$next == \transfer_3$next_rhs) && (\grantN2 == 2'd3) && (\locked_1$next == \locked_1$next_rhs) && (\acceptN == 2'd1) && (\ep_1 == \locked_1) && (\locked_1$next == \transfer_3$next) && LE_1_8_8(\acceptE, \ep_1) && (\grantN1 == 2'd1) && \held_1 && !(LE_1_8_8(\grantE, \ep_1)))

	[Lemmas]: 
		[1] !(((\transfer_3$next == \transfer_3$next_rhs) && (\grantN2 == 2'd3) && (\locked_1$next == \locked_1$next_rhs) && (\acceptN == 2'd1) && (\ep_1 == \locked_1) && (\locked_1$next == \transfer_3$next) && LE_1_8_8(\acceptE, \ep_1) && (\grantN1 == 2'd1) && \held_1 && !(LE_1_8_8(\grantE, \ep_1))))
#1478
#Lemmas = 12
[RES_1]       12	: 3	: 0 18 45 1 s: 64
[RES_0]    L  3 : 0 26 92 2 s: 120, mem: 19, time: 0.196164
---------------------------------------------------------------------------------------------
Loop_3_0_12
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[3] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #3
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(6 + 0 + 0 + 0 + 0)
	(concrete cube) 6	(6 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #6
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #6
	(abstract cube) 10	(10 + 0 + 0 + 0 + 0)
	(concrete cube) 10	(10 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #5
	(adding from pre_c to cc. cube) #3
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #5
	(abstract cube) 9	(9 + 0 + 0 + 0 + 0)
	(concrete cube) 9	(9 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #1
	(adding required pred. from inp_c to ab. cube) #7
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #1
	(adding pred. from inp_c to cc. cube) #7
	(abstract cube) 9	(9 + 0 + 0 + 0 + 0)
	(concrete cube) 9	(9 + 0 + 0 + 0)
		(Next: ((\ep_1$next == \ep_1$next_rhs) && (\ep_3$next == \ep_3$next_rhs) && (\transfer_1$next == \transfer_1$next_rhs)))

	[Concrete check]:

[ ACEXT ]: (Length: 4)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 19)
		(cc core: 19 -> 11)
UNSAT

		[MUS(s)]:
		[1] ((\ep_1 == \transfer_1) && !(LE_1_8_8(\acceptE, \ep_1)) && (\transfer_1 == \acceptE))

	[Lemmas]: 
		[1] !(((\ep_1 == \transfer_1) && !(LE_1_8_8(\acceptE, \ep_1)) && (\transfer_1 == \acceptE)))
#1489
#Lemmas = 13
[RES_1]       13	: 3	: 0 18 45 1 s: 64
[RES_0]    L  3 : 0 26 92 2 s: 120, mem: 19, time: 0.201356
---------------------------------------------------------------------------------------------
Loop_3_0_13
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[3] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #3
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(6 + 0 + 0 + 0 + 0)
	(concrete cube) 6	(6 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #1
	(adding required pred. from inp_c to ab. cube) #6
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #1
	(adding pred. from inp_c to cc. cube) #6
	(abstract cube) 9	(9 + 0 + 0 + 0 + 0)
	(concrete cube) 9	(9 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #3
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(abstract cube) 6	(6 + 0 + 0 + 0 + 0)
	(concrete cube) 6	(6 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #1
	(adding required pred. from inp_c to ab. cube) #7
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #1
	(adding pred. from inp_c to cc. cube) #7
	(abstract cube) 9	(9 + 0 + 0 + 0 + 0)
	(concrete cube) 9	(9 + 0 + 0 + 0)
		(Next: ((\ep_1$next == \ep_1$next_rhs) && (\ep_3$next == \ep_3$next_rhs) && (\transfer_1$next == \transfer_1$next_rhs)))

	[Concrete check]:

[ ACEXT ]: (Length: 4)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 18)
		(cc core: 18 -> 10)
UNSAT

		[MUS(s)]:
		[1] ((\transfer_3$next == \transfer_3$next_rhs) && (\locked_1$next == \locked_1$next_rhs) && (\locked_1$next == \transfer_3$next) && (\acceptN != 2'd3) && !(LE_1_8_8(\grantE, \ep_1)) && (\grantN1 == 2'd1) && (\acceptN != 2'd1) && \held_1 && (\ep_1 == \locked_1) && (\grantN2 == 2'd3))

	[Lemmas]: 
		[1] !(((\transfer_3$next == \transfer_3$next_rhs) && (\locked_1$next == \locked_1$next_rhs) && (\locked_1$next == \transfer_3$next) && (\acceptN != 2'd3) && !(LE_1_8_8(\grantE, \ep_1)) && (\grantN1 == 2'd1) && (\acceptN != 2'd1) && \held_1 && (\ep_1 == \locked_1) && (\grantN2 == 2'd3)))
#1502
#Lemmas = 14
[RES_1]       14	: 3	: 0 18 45 1 s: 64
[RES_0]    L  3 : 0 26 92 2 s: 120, mem: 19, time: 0.21399
---------------------------------------------------------------------------------------------
Loop_3_0_14
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[3] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #3
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(6 + 0 + 0 + 0 + 0)
	(concrete cube) 6	(6 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from mixed_c to ab. cube) #1
	(adding required pred. from inp_c to ab. cube) #4
	(adding from pre_c to cc. cube) #3
	(adding pred. from mixed_c to cc. cube) #1
	(adding pred. from inp_c to cc. cube) #4
	(abstract cube) 8	(8 + 0 + 0 + 0 + 0)
	(concrete cube) 8	(8 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 8 -> 2)
	(122 + 8 -> 122 + 2)
	(8 -> 2 -> 2)
	(8 -> 2 -> 2)

		[MUS(s)]:

		[1] w8	(\held_3 && (\locked_1 != 8'd0))
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #4
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #4
	(abstract cube) 10	(10 + 0 + 0 + 0 + 0)
	(concrete cube) 10	(10 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 10 -> 2)
	(123 + 10 -> 123 + 2)
	(10 -> 2 -> 2)
	(10 -> 2 -> 2)

		[MUS(s)]:

		[1] w8	((\ep_3 == 8'd0) && \held_3)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #6
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #6
	(adding from pre_c to cc. cube) #6
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #6
	(abstract cube) 11	(11 + 0 + 0 + 0 + 0)
	(concrete cube) 11	(11 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #6
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #6
	(adding from pre_c to cc. cube) #6
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #6
	(abstract cube) 10	(10 + 0 + 0 + 0 + 0)
	(concrete cube) 10	(10 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 10 -> 3)
	(49 + 10 -> 49 + 3)
	(10 -> 3 -> 2)
	(10 -> 3 -> 2)

		[MUS(s)]:

		[1] w8	((\transfer_3 != 8'd0) && (\transfer_1 != 8'd0))
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 11 -> 2)
	(125 + 11 -> 125 + 2)
	(11 -> 2 -> 2)
	(11 -> 2 -> 2)

		[MUS(s)]:

		[1] w8	(\held_1 && (\transfer_3 != 8'd0))
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #5
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #6
	(adding from pre_c to cc. cube) #5
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #6
	(abstract cube) 10	(10 + 0 + 0 + 0 + 0)
	(concrete cube) 10	(10 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #5
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #6
	(adding from pre_c to cc. cube) #5
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #6
	(abstract cube) 9	(9 + 0 + 0 + 0 + 0)
	(concrete cube) 9	(9 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #6
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #9
	(adding from pre_c to cc. cube) #6
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #9
	(abstract cube) 11	(11 + 0 + 0 + 0 + 0)
	(concrete cube) 11	(11 + 0 + 0 + 0)
		(Next: ((\held_0$next == \held_0$next_rhs) && (\ep_1$next == \ep_1$next_rhs) && (\ep_3$next == \ep_3$next_rhs) && (\transfer_1$next == \transfer_1$next_rhs) && (\transfer_3$next == \transfer_3$next_rhs)))

	[Concrete check]:

[ ACEXT ]: (Length: 4)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 19)
		(cc core: 19 -> 10)
UNSAT

		[MUS(s)]:
		[1] ((\acceptN == 2'd3) && !(LE_1_8_8(\grantE, \ep_1)) && (\transfer_3 != \acceptE) && (\transfer_3$next == \transfer_3$next_rhs) && (\locked_1$next == \transfer_3$next) && \held_1 && (\ep_1 == \locked_1) && (\grantN2 == 2'd3) && (\locked_1$next == \locked_1$next_rhs) && (\grantN1 == 2'd1))

	[Lemmas]: 
		[1] !(((\acceptN == 2'd3) && !(LE_1_8_8(\grantE, \ep_1)) && (\transfer_3 != \acceptE) && (\transfer_3$next == \transfer_3$next_rhs) && (\locked_1$next == \transfer_3$next) && \held_1 && (\ep_1 == \locked_1) && (\grantN2 == 2'd3) && (\locked_1$next == \locked_1$next_rhs) && (\grantN1 == 2'd1)))
#1547
#Lemmas = 15
[RES_1]       15	: 3	: 0 19 48 1 s: 68
[RES_0]    L  3 : 0 28 98 2 s: 128, mem: 19, time: 0.227715
---------------------------------------------------------------------------------------------
Loop_3_0_15
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[3] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #3
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(6 + 0 + 0 + 0 + 0)
	(concrete cube) 6	(6 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 6 -> 3)
	(76 + 6 -> 76 + 3)
	(6 -> 3 -> 3)
		(added cond. from num.)	(\ep_3$next != \transfer_3$next)
	(6 -> 3 -> 4 -> 3)

		[MUS(s)]:

		[1] w8	((\ep_3 == 8'd0) && (\locked_1 == \transfer_3) && (\ep_3 != \transfer_3))
[RES_1]       15	: 3	: 0 19 48 2 s: 69
[RES_0]    L  3 : 0 28 98 5 s: 131, mem: 19, time: 0.230669
---------------------------------------------------------------------------------------------
Loop_3_1_15
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[3] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #3
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(6 + 0 + 0 + 0 + 0)
	(concrete cube) 6	(6 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #4
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #4
	(abstract cube) 10	(10 + 0 + 0 + 0 + 0)
	(concrete cube) 10	(10 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 10 -> 2)
	(128 + 10 -> 128 + 2)
	(10 -> 2 -> 2)
	(10 -> 2 -> 2)

		[MUS(s)]:

		[1] w8	((\transfer_1 == \ep_3) && \held_3)
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 6 -> 3)
	(78 + 6 -> 78 + 3)
	(6 -> 3 -> 3)
	(6 -> 3 -> 3)

		[MUS(s)]:

		[1] w8	((\ep_3 == \transfer_3) && (\locked_1 == \ep_3) && (\ep_3 != 8'd0))
[RES_1]       15	: 3	: 0 19 49 3 s: 71
[RES_0]    L  3 : 0 28 100 8 s: 136, mem: 19, time: 0.233319
---------------------------------------------------------------------------------------------
Loop_3_2_15
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[3] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 7	(7 + 0 + 0 + 0 + 0)
	(concrete cube) 7	(7 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #5
	(adding required pred. from mixed_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #4
	(adding from pre_c to cc. cube) #5
	(adding pred. from mixed_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #4
	(abstract cube) 11	(11 + 0 + 0 + 0 + 0)
	(concrete cube) 11	(11 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 11 -> 2)
	(130 + 11 -> 130 + 2)
	(11 -> 2 -> 2)
	(11 -> 2 -> 2)

		[MUS(s)]:

		[1] w8	(\held_3 && (\transfer_1 != 8'd0))
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 7 -> 3)
	(80 + 7 -> 80 + 3)
	(7 -> 3 -> 2)
	(7 -> 3 -> 2)

		[MUS(s)]:

		[1] w8	((\locked_1 == \transfer_3) && (\transfer_3 != 8'd0))
[RES_1]       15	: 3	: 0 19 49 4 s: 72
[RES_0]    L  3 : 0 28 100 10 s: 138, mem: 19, time: 0.235994
---------------------------------------------------------------------------------------------
Loop_3_3_15
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[3] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 7	(7 + 0 + 0 + 0 + 0)
	(concrete cube) 7	(7 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #7
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #4
	(adding from pre_c to cc. cube) #7
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #4
	(abstract cube) 12	(12 + 0 + 0 + 0 + 0)
	(concrete cube) 12	(12 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 12 -> 2)
	(132 + 12 -> 132 + 2)
	(12 -> 2 -> 2)
	(12 -> 2 -> 2)

		[MUS(s)]:

		[1] w8	((\locked_2 != 8'd0) && \held_3)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #5
	(adding required pred. from mixed_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #4
	(adding from pre_c to cc. cube) #5
	(adding pred. from mixed_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #4
	(abstract cube) 11	(11 + 0 + 0 + 0 + 0)
	(concrete cube) 11	(11 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #6
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #6
	(adding from pre_c to cc. cube) #6
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #6
	(abstract cube) 10	(10 + 0 + 0 + 0 + 0)
	(concrete cube) 10	(10 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: UNSAT
		(ab core: 10 -> 3)
	(50 + 10 -> 50 + 3)
	(10 -> 3 -> 2)
	(10 -> 3 -> 2)

		[MUS(s)]:

		[1] w8	((\transfer_2 != 8'd0) && (\transfer_3 != 8'd0))
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 11 -> 2)
	(134 + 11 -> 134 + 2)
	(11 -> 2 -> 2)
	(11 -> 2 -> 2)

		[MUS(s)]:

		[1] w8	(\held_3 && (\transfer_2 != 8'd0))
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 7 -> 3)
	(84 + 7 -> 84 + 3)
	(7 -> 3 -> 3)
	(7 -> 3 -> 3)

		[MUS(s)]:

		[1] w8	((\locked_2 == \transfer_3) && (\ep_3 != 8'd0) && (\transfer_3 != 8'd0))
[RES_1]       15	: 3	: 0 20 51 5 s: 76
[RES_0]    L  3 : 0 30 104 13 s: 147, mem: 19, time: 0.241248
---------------------------------------------------------------------------------------------
Loop_3_4_15
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[3] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #3
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(6 + 0 + 0 + 0 + 0)
	(concrete cube) 6	(6 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #5
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #5
	(abstract cube) 10	(10 + 0 + 0 + 0 + 0)
	(concrete cube) 10	(10 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 10 -> 2)
	(136 + 10 -> 136 + 2)
	(10 -> 2 -> 2)
	(10 -> 2 -> 2)

		[MUS(s)]:

		[1] w8	((\ep_2 == 8'd0) && \held_2)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #5
	(adding required pred. from mixed_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #5
	(adding from pre_c to cc. cube) #5
	(adding pred. from mixed_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #5
	(abstract cube) 11	(11 + 0 + 0 + 0 + 0)
	(concrete cube) 11	(11 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 11 -> 3)
	(137 + 11 -> 137 + 3)
	(11 -> 3 -> 3)
	(11 -> 3 -> 3)

		[MUS(s)]:

		[1] w8	((\ep_2 != \transfer_2) && \held_2 && (\transfer_2 != 8'd0))
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #5
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #5
	(abstract cube) 10	(10 + 0 + 0 + 0 + 0)
	(concrete cube) 10	(10 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #4
	(adding from pre_c to cc. cube) #3
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #4
	(abstract cube) 8	(8 + 0 + 0 + 0 + 0)
	(concrete cube) 8	(8 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #1
	(adding required pred. from inp_c to ab. cube) #7
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #1
	(adding pred. from inp_c to cc. cube) #7
	(abstract cube) 9	(9 + 0 + 0 + 0 + 0)
	(concrete cube) 9	(9 + 0 + 0 + 0)
		(Next: ((\ep_2$next == \ep_2$next_rhs) && (\ep_3$next == \ep_3$next_rhs) && (\transfer_2$next == \transfer_2$next_rhs)))

	[Concrete check]:

[ ACEXT ]: (Length: 4)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 19)
		(cc core: 19 -> 3)
UNSAT

		[MUS(s)]:
		[1] (!(LE_1_8_8(\acceptE, \ep_2)) && (\transfer_2 == \acceptE) && (\ep_2 == \transfer_2))

	[Lemmas]: 
		[1] !((!(LE_1_8_8(\acceptE, \ep_2)) && (\transfer_2 == \acceptE) && (\ep_2 == \transfer_2)))
#1660
#Lemmas = 16
[RES_1]       16	: 3	: 0 20 52 5 s: 77
[RES_0]    L  3 : 0 30 106 13 s: 149, mem: 19, time: 0.249511
---------------------------------------------------------------------------------------------
Loop_3_0_16
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[3] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #3
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(6 + 0 + 0 + 0 + 0)
	(concrete cube) 6	(6 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #8
	(adding required pred. from mixed_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #7
	(adding from pre_c to cc. cube) #8
	(adding pred. from mixed_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #7
	(abstract cube) 14	(14 + 0 + 0 + 0 + 0)
	(concrete cube) 14	(14 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 14 -> 3)
	(139 + 14 -> 139 + 3)
	(14 -> 3 -> 2)
	(14 -> 3 -> 2)

		[MUS(s)]:

		[1] w8	(\held_0 && (\transfer_2 != 8'd0))
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #9
	(adding required pred. from mixed_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #7
	(adding from pre_c to cc. cube) #9
	(adding pred. from mixed_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #7
	(abstract cube) 15	(15 + 0 + 0 + 0 + 0)
	(concrete cube) 15	(15 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 15 -> 1)
	(140 + 15 -> 140 + 1)
	(15 -> 1 -> 1)
	(15 -> 1 -> 1)

		[MUS(s)]:

		[1] w8	(\ep_2 != \locked_2)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #7
	(adding required pred. from mixed_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #7
	(adding from pre_c to cc. cube) #7
	(adding pred. from mixed_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #7
	(abstract cube) 13	(13 + 0 + 0 + 0 + 0)
	(concrete cube) 13	(13 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 13 -> 2)
	(141 + 13 -> 141 + 2)
	(13 -> 2 -> 2)
	(13 -> 2 -> 2)

		[MUS(s)]:

		[1] w8	((\ep_2 != 8'd0) && \held_0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #8
	(adding required pred. from mixed_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #6
	(adding from pre_c to cc. cube) #8
	(adding pred. from mixed_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #6
	(abstract cube) 14	(14 + 0 + 0 + 0 + 0)
	(concrete cube) 14	(14 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 14 -> 2)
	(142 + 14 -> 142 + 2)
	(14 -> 2 -> 2)
	(14 -> 2 -> 2)

		[MUS(s)]:

		[1] w8	(\held_1 && (\transfer_2 != 8'd0))
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #7
	(adding required pred. from mixed_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #6
	(adding from pre_c to cc. cube) #7
	(adding pred. from mixed_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #6
	(abstract cube) 13	(13 + 0 + 0 + 0 + 0)
	(concrete cube) 13	(13 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 13 -> 2)
	(143 + 13 -> 143 + 2)
	(13 -> 2 -> 2)
	(13 -> 2 -> 2)

		[MUS(s)]:

		[1] w8	((\ep_2 != 8'd0) && \held_1)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #5
	(adding required pred. from mixed_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #5
	(adding from pre_c to cc. cube) #5
	(adding pred. from mixed_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #5
	(abstract cube) 11	(11 + 0 + 0 + 0 + 0)
	(concrete cube) 11	(11 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #4
	(adding from pre_c to cc. cube) #3
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #4
	(abstract cube) 8	(8 + 0 + 0 + 0 + 0)
	(concrete cube) 8	(8 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #1
	(adding required pred. from inp_c to ab. cube) #7
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #1
	(adding pred. from inp_c to cc. cube) #7
	(abstract cube) 9	(9 + 0 + 0 + 0 + 0)
	(concrete cube) 9	(9 + 0 + 0 + 0)
		(Next: ((\ep_2$next == \ep_2$next_rhs) && (\ep_3$next == \ep_3$next_rhs) && (\transfer_2$next == \transfer_2$next_rhs)))

	[Concrete check]:

[ ACEXT ]: (Length: 4)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 20)
		(cc core: 20 -> 12)
UNSAT

		[MUS(s)]:
		[1] ((\grantN1 == 2'd2) && \held_2 && LE_1_8_8(\acceptE, \ep_2) && !(LE_1_8_8(\grantE, \ep_2)) && (\locked_2$next == \locked_2$next_rhs) && (\grantN2 == 2'd3) && (\transfer_3$next == \transfer_3$next_rhs) && (\locked_2$next == \transfer_3$next) && (\acceptN == 2'd2) && (\ep_2 == \locked_2))

	[Lemmas]: 
		[1] !(((\grantN1 == 2'd2) && \held_2 && LE_1_8_8(\acceptE, \ep_2) && !(LE_1_8_8(\grantE, \ep_2)) && (\locked_2$next == \locked_2$next_rhs) && (\grantN2 == 2'd3) && (\transfer_3$next == \transfer_3$next_rhs) && (\locked_2$next == \transfer_3$next) && (\acceptN == 2'd2) && (\ep_2 == \locked_2)))
#1712
#Lemmas = 17
[RES_1]       17	: 3	: 0 19 57 5 s: 81
[RES_0]    L  3 : 0 28 115 13 s: 156, mem: 19, time: 0.264927
---------------------------------------------------------------------------------------------
Loop_3_0_17
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[3] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #3
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(6 + 0 + 0 + 0 + 0)
	(concrete cube) 6	(6 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #5
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #5
	(adding from pre_c to cc. cube) #5
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #5
	(abstract cube) 10	(10 + 0 + 0 + 0 + 0)
	(concrete cube) 10	(10 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #4
	(adding from pre_c to cc. cube) #3
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #4
	(abstract cube) 8	(8 + 0 + 0 + 0 + 0)
	(concrete cube) 8	(8 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #1
	(adding required pred. from inp_c to ab. cube) #7
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #1
	(adding pred. from inp_c to cc. cube) #7
	(abstract cube) 9	(9 + 0 + 0 + 0 + 0)
	(concrete cube) 9	(9 + 0 + 0 + 0)
		(Next: ((\ep_2$next == \ep_2$next_rhs) && (\ep_3$next == \ep_3$next_rhs) && (\transfer_2$next == \transfer_2$next_rhs)))

	[Concrete check]:

[ ACEXT ]: (Length: 4)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 19)
		(cc core: 19 -> 10)
UNSAT

		[MUS(s)]:
		[1] ((\grantN1 == 2'd2) && (\acceptN == 2'd2) && (\ep_2 == \locked_2) && (\transfer_2 != \acceptE) && (\grantN2 == 2'd3) && !(LE_1_8_8(\grantE, \ep_2)) && (\locked_2$next == \locked_2$next_rhs) && \held_2 && (\transfer_3$next == \transfer_3$next_rhs) && (\locked_2$next == \transfer_3$next))

	[Lemmas]: 
		[1] !(((\grantN1 == 2'd2) && (\acceptN == 2'd2) && (\ep_2 == \locked_2) && (\transfer_2 != \acceptE) && (\grantN2 == 2'd3) && !(LE_1_8_8(\grantE, \ep_2)) && (\locked_2$next == \locked_2$next_rhs) && \held_2 && (\transfer_3$next == \transfer_3$next_rhs) && (\locked_2$next == \transfer_3$next)))
#1722
#Lemmas = 18
[RES_1]       18	: 3	: 0 19 57 5 s: 81
[RES_0]    L  3 : 0 28 115 13 s: 156, mem: 19, time: 0.274204
---------------------------------------------------------------------------------------------
Loop_3_0_18
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[3] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #3
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(6 + 0 + 0 + 0 + 0)
	(concrete cube) 6	(6 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #1
	(adding required pred. from inp_c to ab. cube) #5
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #1
	(adding pred. from inp_c to cc. cube) #5
	(abstract cube) 9	(9 + 0 + 0 + 0 + 0)
	(concrete cube) 9	(9 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #3
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(abstract cube) 6	(6 + 0 + 0 + 0 + 0)
	(concrete cube) 6	(6 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #1
	(adding required pred. from inp_c to ab. cube) #7
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #1
	(adding pred. from inp_c to cc. cube) #7
	(abstract cube) 9	(9 + 0 + 0 + 0 + 0)
	(concrete cube) 9	(9 + 0 + 0 + 0)
		(Next: ((\ep_2$next == \ep_2$next_rhs) && (\ep_3$next == \ep_3$next_rhs) && (\transfer_2$next == \transfer_2$next_rhs)))

	[Concrete check]:

[ ACEXT ]: (Length: 4)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 18)
		(cc core: 18 -> 10)
UNSAT

		[MUS(s)]:
		[1] ((\locked_2$next == \locked_2$next_rhs) && (\acceptN != 2'd2) && !(LE_1_8_8(\grantE, \ep_2)) && (\grantN1 == 2'd2) && (\acceptN != 2'd3) && (\grantN2 == 2'd3) && (\transfer_3$next == \transfer_3$next_rhs) && (\ep_2 == \locked_2) && \held_2 && (\locked_2$next == \transfer_3$next))

	[Lemmas]: 
		[1] !(((\locked_2$next == \locked_2$next_rhs) && (\acceptN != 2'd2) && !(LE_1_8_8(\grantE, \ep_2)) && (\grantN1 == 2'd2) && (\acceptN != 2'd3) && (\grantN2 == 2'd3) && (\transfer_3$next == \transfer_3$next_rhs) && (\ep_2 == \locked_2) && \held_2 && (\locked_2$next == \transfer_3$next)))
#1735
#Lemmas = 19
[RES_1]       19	: 3	: 0 19 57 5 s: 81
[RES_0]    L  3 : 0 28 115 13 s: 156, mem: 19, time: 0.283344
---------------------------------------------------------------------------------------------
Loop_3_0_19
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[3] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #3
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(6 + 0 + 0 + 0 + 0)
	(concrete cube) 6	(6 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #6
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #5
	(adding from pre_c to cc. cube) #6
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #5
	(abstract cube) 11	(11 + 0 + 0 + 0 + 0)
	(concrete cube) 11	(11 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 11 -> 2)
	(147 + 11 -> 147 + 2)
	(11 -> 2 -> 2)
	(11 -> 2 -> 2)

		[MUS(s)]:

		[1] w8	(\held_2 && (\transfer_3 != 8'd0))
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #5
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #5
	(adding from pre_c to cc. cube) #5
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #5
	(abstract cube) 10	(10 + 0 + 0 + 0 + 0)
	(concrete cube) 10	(10 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #5
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #6
	(adding from pre_c to cc. cube) #5
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #6
	(abstract cube) 9	(9 + 0 + 0 + 0 + 0)
	(concrete cube) 9	(9 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #6
	(adding required pred. from mixed_c to ab. cube) #1
	(adding required pred. from inp_c to ab. cube) #9
	(adding from pre_c to cc. cube) #6
	(adding pred. from mixed_c to cc. cube) #1
	(adding pred. from inp_c to cc. cube) #9
	(abstract cube) 12	(12 + 0 + 0 + 0 + 0)
	(concrete cube) 12	(12 + 0 + 0 + 0)
		(Next: ((\held_1$next == \held_1$next_rhs) && (\ep_2$next == \ep_2$next_rhs) && (\ep_3$next == \ep_3$next_rhs) && (\transfer_2$next == \transfer_2$next_rhs) && (\transfer_3$next == \transfer_3$next_rhs)))

	[Concrete check]:

[ ACEXT ]: (Length: 4)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 19)
		(cc core: 19 -> 10)
UNSAT

		[MUS(s)]:
		[1] ((\locked_2$next == \transfer_3$next) && (\grantN1 == 2'd2) && (\locked_2$next == \locked_2$next_rhs) && (\transfer_3$next == \transfer_3$next_rhs) && (\ep_2 == \locked_2) && !(LE_1_8_8(\grantE, \ep_2)) && \held_2 && (\transfer_3 != \acceptE) && (\grantN2 == 2'd3) && (\acceptN == 2'd3))

	[Lemmas]: 
		[1] !(((\locked_2$next == \transfer_3$next) && (\grantN1 == 2'd2) && (\locked_2$next == \locked_2$next_rhs) && (\transfer_3$next == \transfer_3$next_rhs) && (\ep_2 == \locked_2) && !(LE_1_8_8(\grantE, \ep_2)) && \held_2 && (\transfer_3 != \acceptE) && (\grantN2 == 2'd3) && (\acceptN == 2'd3)))
#1759
#Lemmas = 20
[RES_1]       20	: 3	: 0 19 58 5 s: 82
[RES_0]    L  3 : 0 28 117 13 s: 158, mem: 19, time: 0.293862
---------------------------------------------------------------------------------------------
Loop_3_0_20
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[3] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #3
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(6 + 0 + 0 + 0 + 0)
	(concrete cube) 6	(6 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 6 -> 3)
	(98 + 6 -> 98 + 3)
	(6 -> 3 -> 2)
	(6 -> 3 -> 2)

		[MUS(s)]:

		[1] w8	((\locked_2 == \transfer_3) && (\transfer_3 != 8'd0))
[RES_1]       20	: 3	: 0 19 57 5 s: 81
[RES_0]    L  3 : 0 28 115 12 s: 155, mem: 19, time: 0.295969
---------------------------------------------------------------------------------------------
Loop_3_1_20
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[3] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 7	(7 + 0 + 0 + 0 + 0)
	(concrete cube) 7	(7 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #6
	(adding required pred. from mixed_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #6
	(adding from pre_c to cc. cube) #6
	(adding pred. from mixed_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #6
	(abstract cube) 12	(12 + 0 + 0 + 0 + 0)
	(concrete cube) 12	(12 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 12 -> 2)
	(150 + 12 -> 150 + 2)
	(12 -> 2 -> 2)
	(12 -> 2 -> 2)

		[MUS(s)]:

		[1] w8	((\locked_3 != 8'd0) && \held_1)
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 7 -> 3)
	(103 + 7 -> 103 + 3)
	(7 -> 3 -> 3)
	(7 -> 3 -> 3)

		[MUS(s)]:

		[1] w8	((\locked_3 == \transfer_1) && (\ep_1 != 8'd0) && (\transfer_1 != 8'd0))
[RES_1]       20	: 3	: 0 19 58 6 s: 83
[RES_0]    L  3 : 0 28 117 15 s: 160, mem: 19, time: 0.299278
---------------------------------------------------------------------------------------------
Loop_3_2_20
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[3] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #3
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(6 + 0 + 0 + 0 + 0)
	(concrete cube) 6	(6 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #6
	(adding required pred. from mixed_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #7
	(adding from pre_c to cc. cube) #6
	(adding pred. from mixed_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #7
	(abstract cube) 12	(12 + 0 + 0 + 0 + 0)
	(concrete cube) 12	(12 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 12 -> 3)
	(152 + 12 -> 152 + 3)
	(12 -> 3 -> 2)
	(12 -> 3 -> 2)

		[MUS(s)]:

		[1] w8	(\held_0 && (\transfer_3 != 8'd0))
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #7
	(adding required pred. from mixed_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #7
	(adding from pre_c to cc. cube) #7
	(adding pred. from mixed_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #7
	(abstract cube) 13	(13 + 0 + 0 + 0 + 0)
	(concrete cube) 13	(13 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 13 -> 2)
	(153 + 13 -> 153 + 2)
	(13 -> 2 -> 2)
		(added cond. from num.)	(\ep_3$next != \locked_3$next)
	(13 -> 2 -> 3 -> 1)

		[MUS(s)]:

		[1] w8	(\ep_3 != \locked_3)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #5
	(adding required pred. from mixed_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #4
	(adding from pre_c to cc. cube) #5
	(adding pred. from mixed_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #4
	(abstract cube) 11	(11 + 0 + 0 + 0 + 0)
	(concrete cube) 11	(11 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #3
	(adding from pre_c to cc. cube) #3
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #3
	(abstract cube) 7	(7 + 0 + 0 + 0 + 0)
	(concrete cube) 7	(7 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #1
	(adding required pred. from inp_c to ab. cube) #7
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #1
	(adding pred. from inp_c to cc. cube) #7
	(abstract cube) 9	(9 + 0 + 0 + 0 + 0)
	(concrete cube) 9	(9 + 0 + 0 + 0)
		(Next: ((\ep_1$next == \ep_1$next_rhs) && (\ep_3$next == \ep_3$next_rhs) && (\transfer_3$next == \transfer_3$next_rhs)))

	[Concrete check]:

[ ACEXT ]: (Length: 4)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 20)
		(cc core: 20 -> 9)
UNSAT

		[MUS(s)]:
		[1] (!(LE_1_8_8(\grantE, \ep_3)) && LE_1_8_8(\acceptE, \ep_3) && (\grantN2 == 2'd1) && (\locked_3$next == \transfer_1$next) && \held_3 && (\ep_3 == \locked_3) && (\transfer_1$next == \transfer_1$next_rhs) && (\grantN1 == 2'd3) && (\locked_3$next == \locked_3$next_rhs))

	[Lemmas]: 
		[1] !((!(LE_1_8_8(\grantE, \ep_3)) && LE_1_8_8(\acceptE, \ep_3) && (\grantN2 == 2'd1) && (\locked_3$next == \transfer_1$next) && \held_3 && (\ep_3 == \locked_3) && (\transfer_1$next == \transfer_1$next_rhs) && (\grantN1 == 2'd3) && (\locked_3$next == \locked_3$next_rhs)))
#1808
#Lemmas = 21
[RES_1]       21	: 3	: 0 18 60 6 s: 84
[RES_0]    L  3 : 0 26 120 15 s: 161, mem: 20, time: 0.311803
---------------------------------------------------------------------------------------------
Loop_3_0_21
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[3] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #3
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(6 + 0 + 0 + 0 + 0)
	(concrete cube) 6	(6 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #5
	(adding required pred. from mixed_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #4
	(adding from pre_c to cc. cube) #5
	(adding pred. from mixed_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #4
	(abstract cube) 11	(11 + 0 + 0 + 0 + 0)
	(concrete cube) 11	(11 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 11 -> 3)
	(155 + 11 -> 155 + 3)
	(11 -> 3 -> 3)
	(11 -> 3 -> 3)

		[MUS(s)]:

		[1] w8	((\ep_3 != \transfer_3) && \held_3 && (\transfer_3 != 8'd0))
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #4
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #4
	(abstract cube) 10	(10 + 0 + 0 + 0 + 0)
	(concrete cube) 10	(10 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #3
	(adding from pre_c to cc. cube) #3
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #3
	(abstract cube) 7	(7 + 0 + 0 + 0 + 0)
	(concrete cube) 7	(7 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #1
	(adding required pred. from inp_c to ab. cube) #7
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #1
	(adding pred. from inp_c to cc. cube) #7
	(abstract cube) 9	(9 + 0 + 0 + 0 + 0)
	(concrete cube) 9	(9 + 0 + 0 + 0)
		(Next: ((\ep_1$next == \ep_1$next_rhs) && (\ep_3$next == \ep_3$next_rhs) && (\transfer_3$next == \transfer_3$next_rhs)))

	[Concrete check]:

[ ACEXT ]: (Length: 4)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 19)
		(cc core: 19 -> 11)
UNSAT

		[MUS(s)]:
		[1] ((\transfer_3 == \acceptE) && (\ep_3 == \transfer_3) && !(LE_1_8_8(\acceptE, \ep_3)))

	[Lemmas]: 
		[1] !(((\transfer_3 == \acceptE) && (\ep_3 == \transfer_3) && !(LE_1_8_8(\acceptE, \ep_3))))
#1828
#Lemmas = 22
[RES_1]       22	: 3	: 0 18 61 6 s: 85
[RES_0]    L  3 : 0 26 123 15 s: 164, mem: 20, time: 0.318696
---------------------------------------------------------------------------------------------
Loop_3_0_22
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[3] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #3
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(6 + 0 + 0 + 0 + 0)
	(concrete cube) 6	(6 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #5
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #4
	(adding from pre_c to cc. cube) #5
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #4
	(abstract cube) 10	(10 + 0 + 0 + 0 + 0)
	(concrete cube) 10	(10 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #3
	(adding from pre_c to cc. cube) #3
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #3
	(abstract cube) 7	(7 + 0 + 0 + 0 + 0)
	(concrete cube) 7	(7 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #1
	(adding required pred. from inp_c to ab. cube) #7
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #1
	(adding pred. from inp_c to cc. cube) #7
	(abstract cube) 9	(9 + 0 + 0 + 0 + 0)
	(concrete cube) 9	(9 + 0 + 0 + 0)
		(Next: ((\ep_1$next == \ep_1$next_rhs) && (\ep_3$next == \ep_3$next_rhs) && (\transfer_3$next == \transfer_3$next_rhs)))

	[Concrete check]:

[ ACEXT ]: (Length: 4)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 19)
		(cc core: 19 -> 9)
UNSAT

		[MUS(s)]:
		[1] (\held_3 && (\locked_3$next == \locked_3$next_rhs) && (\ep_3 == \locked_3) && (\transfer_1$next == \transfer_1$next_rhs) && (\grantN2 == 2'd1) && (\transfer_3 != \acceptE) && (\locked_3$next == \transfer_1$next) && !(LE_1_8_8(\grantE, \ep_3)) && (\grantN1 == 2'd3))

	[Lemmas]: 
		[1] !((\held_3 && (\locked_3$next == \locked_3$next_rhs) && (\ep_3 == \locked_3) && (\transfer_1$next == \transfer_1$next_rhs) && (\grantN2 == 2'd1) && (\transfer_3 != \acceptE) && (\locked_3$next == \transfer_1$next) && !(LE_1_8_8(\grantE, \ep_3)) && (\grantN1 == 2'd3)))
#1838
#Lemmas = 23
[RES_1]       23	: 3	: 0 18 61 6 s: 85
[RES_0]    L  3 : 0 26 123 15 s: 164, mem: 20, time: 0.328847
---------------------------------------------------------------------------------------------
Loop_3_0_23
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[3] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #3
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(6 + 0 + 0 + 0 + 0)
	(concrete cube) 6	(6 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 6 -> 3)
	(110 + 6 -> 110 + 3)
	(6 -> 3 -> 2)
	(6 -> 3 -> 2)

		[MUS(s)]:

		[1] w8	((\locked_3 == \transfer_1) && (\transfer_1 != 8'd0))
[RES_1]       23	: 3	: 0 18 60 6 s: 84
[RES_0]    L  3 : 0 26 121 14 s: 161, mem: 20, time: 0.330966
---------------------------------------------------------------------------------------------
Loop_3_1_23
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[3] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 7	(7 + 0 + 0 + 0 + 0)
	(concrete cube) 7	(7 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 7 -> 3)
	(111 + 7 -> 111 + 3)
	(7 -> 3 -> 3)
	(7 -> 3 -> 3)

		[MUS(s)]:

		[1] w8	((\locked_0 == \transfer_1) && (\ep_1 != 8'd0) && (\transfer_1 != 8'd0))
[RES_1]       23	: 3	: 0 18 60 7 s: 85
[RES_0]    L  3 : 0 26 121 17 s: 164, mem: 20, time: 0.33285
---------------------------------------------------------------------------------------------
Loop_3_2_23
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[3] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #3
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(6 + 0 + 0 + 0 + 0)
	(concrete cube) 6	(6 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #5
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #7
	(adding from pre_c to cc. cube) #5
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #7
	(abstract cube) 10	(10 + 0 + 0 + 0 + 0)
	(concrete cube) 10	(10 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #6
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #6
	(adding from pre_c to cc. cube) #6
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #6
	(abstract cube) 10	(10 + 0 + 0 + 0 + 0)
	(concrete cube) 10	(10 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #6
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #8
	(adding from pre_c to cc. cube) #6
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #8
	(abstract cube) 11	(11 + 0 + 0 + 0 + 0)
	(concrete cube) 11	(11 + 0 + 0 + 0)
		(Next: ((\held_1$next == \held_1$next_rhs) && (\ep_0$next == \ep_0$next_rhs) && (\ep_1$next == \ep_1$next_rhs) && (\transfer_0$next == \transfer_0$next_rhs) && (\transfer_1$next == \transfer_1$next_rhs)))

	[Concrete check]:

[ ACEXT ]: (Length: 4)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 19)
		(cc core: 19 -> 10)
UNSAT

		[MUS(s)]:
		[1] ((\grantN2 == 2'd1) && (\grantN1 == 2'd0) && (\locked_0$next == \transfer_1$next) && !(LE_1_8_8(\grantE, \ep_0)) && (\transfer_1$next == \transfer_1$next_rhs) && (\acceptN == 2'd1) && \held_0 && (\transfer_1 != \acceptE) && (\ep_0 == \locked_0) && (\locked_0$next == \locked_0$next_rhs))

	[Lemmas]: 
		[1] !(((\grantN2 == 2'd1) && (\grantN1 == 2'd0) && (\locked_0$next == \transfer_1$next) && !(LE_1_8_8(\grantE, \ep_0)) && (\transfer_1$next == \transfer_1$next_rhs) && (\acceptN == 2'd1) && \held_0 && (\transfer_1 != \acceptE) && (\ep_0 == \locked_0) && (\locked_0$next == \locked_0$next_rhs)))
#1865
#Lemmas = 24
[RES_1]       24	: 3	: 0 18 60 7 s: 85
[RES_0]    L  3 : 0 26 121 17 s: 164, mem: 20, time: 0.34344
---------------------------------------------------------------------------------------------
Loop_3_0_24
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[3] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #3
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(6 + 0 + 0 + 0 + 0)
	(concrete cube) 6	(6 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #1
	(adding required pred. from inp_c to ab. cube) #7
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #1
	(adding pred. from inp_c to cc. cube) #7
	(abstract cube) 9	(9 + 0 + 0 + 0 + 0)
	(concrete cube) 9	(9 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(abstract cube) 7	(7 + 0 + 0 + 0 + 0)
	(concrete cube) 7	(7 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #7
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #7
	(abstract cube) 9	(9 + 0 + 0 + 0 + 0)
	(concrete cube) 9	(9 + 0 + 0 + 0)
		(Next: ((\ep_0$next == \ep_0$next_rhs) && (\ep_1$next == \ep_1$next_rhs) && (\transfer_0$next == \transfer_0$next_rhs)))

	[Concrete check]:

[ ACEXT ]: (Length: 4)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 18)
		(cc core: 18 -> 10)
UNSAT

		[MUS(s)]:
		[1] ((\transfer_1$next == \transfer_1$next_rhs) && (\acceptN != 2'd0) && (\acceptN != 2'd1) && (\ep_0 == \locked_0) && (\locked_0$next == \transfer_1$next) && \held_0 && (\grantN1 == 2'd0) && !(LE_1_8_8(\grantE, \ep_0)) && (\locked_0$next == \locked_0$next_rhs) && (\grantN2 == 2'd1))

	[Lemmas]: 
		[1] !(((\transfer_1$next == \transfer_1$next_rhs) && (\acceptN != 2'd0) && (\acceptN != 2'd1) && (\ep_0 == \locked_0) && (\locked_0$next == \transfer_1$next) && \held_0 && (\grantN1 == 2'd0) && !(LE_1_8_8(\grantE, \ep_0)) && (\locked_0$next == \locked_0$next_rhs) && (\grantN2 == 2'd1)))
#1881
#Lemmas = 25
[RES_1]       25	: 3	: 0 18 60 7 s: 85
[RES_0]    L  3 : 0 26 121 17 s: 164, mem: 20, time: 0.354364
---------------------------------------------------------------------------------------------
Loop_3_0_25
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[3] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #3
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(6 + 0 + 0 + 0 + 0)
	(concrete cube) 6	(6 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #5
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #7
	(adding from pre_c to cc. cube) #5
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #7
	(abstract cube) 10	(10 + 0 + 0 + 0 + 0)
	(concrete cube) 10	(10 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #5
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #6
	(adding from pre_c to cc. cube) #5
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #6
	(abstract cube) 10	(10 + 0 + 0 + 0 + 0)
	(concrete cube) 10	(10 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #5
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #7
	(adding from pre_c to cc. cube) #5
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #7
	(abstract cube) 10	(10 + 0 + 0 + 0 + 0)
	(concrete cube) 10	(10 + 0 + 0 + 0)
		(Next: ((\held_1$next == \held_1$next_rhs) && (\ep_0$next == \ep_0$next_rhs) && (\ep_1$next == \ep_1$next_rhs) && (\transfer_0$next == \transfer_0$next_rhs)))

	[Concrete check]:

[ ACEXT ]: (Length: 4)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 19)
		(cc core: 19 -> 10)
UNSAT

		[MUS(s)]:
		[1] ((\grantN1 == 2'd0) && (\grantN2 == 2'd1) && (\transfer_1$next == \transfer_1$next_rhs) && (\ep_0 == \locked_0) && (\transfer_0 != \acceptE) && (\acceptN == 2'd0) && \held_0 && !(LE_1_8_8(\grantE, \ep_0)) && (\locked_0$next == \locked_0$next_rhs) && (\locked_0$next == \transfer_1$next))

	[Lemmas]: 
		[1] !(((\grantN1 == 2'd0) && (\grantN2 == 2'd1) && (\transfer_1$next == \transfer_1$next_rhs) && (\ep_0 == \locked_0) && (\transfer_0 != \acceptE) && (\acceptN == 2'd0) && \held_0 && !(LE_1_8_8(\grantE, \ep_0)) && (\locked_0$next == \locked_0$next_rhs) && (\locked_0$next == \transfer_1$next)))
#1897
#Lemmas = 26
[RES_1]       26	: 3	: 0 18 60 7 s: 85
[RES_0]    L  3 : 0 26 121 17 s: 164, mem: 20, time: 0.36377
---------------------------------------------------------------------------------------------
Loop_3_0_26
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[3] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #3
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(6 + 0 + 0 + 0 + 0)
	(concrete cube) 6	(6 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #5
	(adding required pred. from mixed_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #7
	(adding from pre_c to cc. cube) #5
	(adding pred. from mixed_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #7
	(abstract cube) 11	(11 + 0 + 0 + 0 + 0)
	(concrete cube) 11	(11 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #5
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #6
	(adding from pre_c to cc. cube) #5
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #6
	(abstract cube) 10	(10 + 0 + 0 + 0 + 0)
	(concrete cube) 10	(10 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #5
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #7
	(adding from pre_c to cc. cube) #5
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #7
	(abstract cube) 10	(10 + 0 + 0 + 0 + 0)
	(concrete cube) 10	(10 + 0 + 0 + 0)
		(Next: ((\held_1$next == \held_1$next_rhs) && (\ep_0$next == \ep_0$next_rhs) && (\ep_1$next == \ep_1$next_rhs) && (\transfer_0$next == \transfer_0$next_rhs)))

	[Concrete check]:

[ ACEXT ]: (Length: 4)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 20)
		(cc core: 20 -> 10)
UNSAT

		[MUS(s)]:
		[1] ((\ep_0 == \locked_0) && (\grantN1 == 2'd0) && \held_0 && !(LE_1_8_8(\grantE, \ep_0)) && LE_1_8_8(\acceptE, \ep_0) && (\grantN2 == 2'd1) && (\locked_0$next == \locked_0$next_rhs) && (\acceptN == 2'd0) && (\locked_0$next == \transfer_1$next) && (\transfer_1$next == \transfer_1$next_rhs))

	[Lemmas]: 
		[1] !(((\ep_0 == \locked_0) && (\grantN1 == 2'd0) && \held_0 && !(LE_1_8_8(\grantE, \ep_0)) && LE_1_8_8(\acceptE, \ep_0) && (\grantN2 == 2'd1) && (\locked_0$next == \locked_0$next_rhs) && (\acceptN == 2'd0) && (\locked_0$next == \transfer_1$next) && (\transfer_1$next == \transfer_1$next_rhs)))
#1910
#Lemmas = 27
[RES_1]       27	: 3	: 0 18 60 7 s: 85
[RES_0]    L  3 : 0 26 121 17 s: 164, mem: 20, time: 0.373679
---------------------------------------------------------------------------------------------
Loop_3_0_27
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[3] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #3
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(6 + 0 + 0 + 0 + 0)
	(concrete cube) 6	(6 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 6 -> 2)
	(116 + 6 -> 116 + 2)
	(6 -> 2 -> 2)
	(6 -> 2 -> 2)

		[MUS(s)]:

		[1] w8	((\locked_0 == \transfer_1) && (\transfer_1 != 8'd0))
[RES_1]       27	: 3	: 0 18 59 7 s: 84
[RES_0]    L  3 : 0 26 119 16 s: 161, mem: 20, time: 0.376023
---------------------------------------------------------------------------------------------
Loop_3_1_27
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[3] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 7	(7 + 0 + 0 + 0 + 0)
	(concrete cube) 7	(7 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 7 -> 3)
	(117 + 7 -> 117 + 3)
	(7 -> 3 -> 3)
	(7 -> 3 -> 3)

		[MUS(s)]:

		[1] w8	((\locked_2 == \transfer_1) && (\ep_1 != 8'd0) && (\transfer_1 != 8'd0))
[RES_1]       27	: 3	: 0 18 59 8 s: 85
[RES_0]    L  3 : 0 26 119 19 s: 164, mem: 20, time: 0.377942
---------------------------------------------------------------------------------------------
Loop_3_2_27
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[3] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #3
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(6 + 0 + 0 + 0 + 0)
	(concrete cube) 6	(6 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #1
	(adding required pred. from inp_c to ab. cube) #5
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #1
	(adding pred. from inp_c to cc. cube) #5
	(abstract cube) 9	(9 + 0 + 0 + 0 + 0)
	(concrete cube) 9	(9 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #3
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(abstract cube) 6	(6 + 0 + 0 + 0 + 0)
	(concrete cube) 6	(6 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #1
	(adding required pred. from inp_c to ab. cube) #7
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #1
	(adding pred. from inp_c to cc. cube) #7
	(abstract cube) 9	(9 + 0 + 0 + 0 + 0)
	(concrete cube) 9	(9 + 0 + 0 + 0)
		(Next: ((\ep_1$next == \ep_1$next_rhs) && (\ep_2$next == \ep_2$next_rhs) && (\transfer_2$next == \transfer_2$next_rhs)))

	[Concrete check]:

[ ACEXT ]: (Length: 4)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 18)
		(cc core: 18 -> 9)
UNSAT

		[MUS(s)]:
		[1] (!(LE_1_8_8(\grantE, \ep_2)) && (\grantN2 == 2'd1) && (\grantN1 == 2'd2) && (\transfer_1$next == \transfer_1$next_rhs) && \held_2 && (\locked_2$next == \locked_2$next_rhs) && (\acceptN != 2'd2) && (\ep_2 == \locked_2) && (\locked_2$next == \transfer_1$next))

	[Lemmas]: 
		[1] !((!(LE_1_8_8(\grantE, \ep_2)) && (\grantN2 == 2'd1) && (\grantN1 == 2'd2) && (\transfer_1$next == \transfer_1$next_rhs) && \held_2 && (\locked_2$next == \locked_2$next_rhs) && (\acceptN != 2'd2) && (\ep_2 == \locked_2) && (\locked_2$next == \transfer_1$next)))
#1935
#Lemmas = 28
[RES_1]       28	: 3	: 0 18 59 8 s: 85
[RES_0]    L  3 : 0 26 119 19 s: 164, mem: 20, time: 0.389327
---------------------------------------------------------------------------------------------
Loop_3_0_28
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[3] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #3
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(6 + 0 + 0 + 0 + 0)
	(concrete cube) 6	(6 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #5
	(adding required pred. from mixed_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #5
	(adding from pre_c to cc. cube) #5
	(adding pred. from mixed_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #5
	(abstract cube) 11	(11 + 0 + 0 + 0 + 0)
	(concrete cube) 11	(11 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #4
	(adding from pre_c to cc. cube) #3
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #4
	(abstract cube) 8	(8 + 0 + 0 + 0 + 0)
	(concrete cube) 8	(8 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #1
	(adding required pred. from inp_c to ab. cube) #7
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #1
	(adding pred. from inp_c to cc. cube) #7
	(abstract cube) 9	(9 + 0 + 0 + 0 + 0)
	(concrete cube) 9	(9 + 0 + 0 + 0)
		(Next: ((\ep_1$next == \ep_1$next_rhs) && (\ep_2$next == \ep_2$next_rhs) && (\transfer_2$next == \transfer_2$next_rhs)))

	[Concrete check]:

[ ACEXT ]: (Length: 4)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 20)
		(cc core: 20 -> 10)
UNSAT

		[MUS(s)]:
		[1] ((\locked_2$next == \locked_2$next_rhs) && (\transfer_2 == 8'd0) && (\grantN2 == 2'd1) && (\grantN1 == 2'd2) && \held_2 && !(LE_1_8_8(\grantE, \ep_2)) && (\ep_2 == \locked_2) && (\transfer_1$next == \transfer_1$next_rhs) && (\locked_2$next == \transfer_1$next))

	[Lemmas]: 
		[1] !(((\locked_2$next == \locked_2$next_rhs) && (\transfer_2 == 8'd0) && (\grantN2 == 2'd1) && (\grantN1 == 2'd2) && \held_2 && !(LE_1_8_8(\grantE, \ep_2)) && (\ep_2 == \locked_2) && (\transfer_1$next == \transfer_1$next_rhs) && (\locked_2$next == \transfer_1$next)))
#1948
#Lemmas = 29
[RES_1]       29	: 3	: 0 18 59 8 s: 85
[RES_0]    L  3 : 0 26 119 19 s: 164, mem: 20, time: 0.398096
---------------------------------------------------------------------------------------------
Loop_3_0_29
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[3] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #3
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(6 + 0 + 0 + 0 + 0)
	(concrete cube) 6	(6 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #5
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #5
	(adding from pre_c to cc. cube) #5
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #5
	(abstract cube) 10	(10 + 0 + 0 + 0 + 0)
	(concrete cube) 10	(10 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #4
	(adding from pre_c to cc. cube) #3
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #4
	(abstract cube) 8	(8 + 0 + 0 + 0 + 0)
	(concrete cube) 8	(8 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #1
	(adding required pred. from inp_c to ab. cube) #7
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #1
	(adding pred. from inp_c to cc. cube) #7
	(abstract cube) 9	(9 + 0 + 0 + 0 + 0)
	(concrete cube) 9	(9 + 0 + 0 + 0)
		(Next: ((\ep_1$next == \ep_1$next_rhs) && (\ep_2$next == \ep_2$next_rhs) && (\transfer_2$next == \transfer_2$next_rhs)))

	[Concrete check]:

[ ACEXT ]: (Length: 4)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 19)
		(cc core: 19 -> 9)
UNSAT

		[MUS(s)]:
		[1] (\held_2 && (\transfer_2 != \acceptE) && (\ep_2 == \locked_2) && (\locked_2$next == \locked_2$next_rhs) && (\grantN1 == 2'd2) && (\transfer_1$next == \transfer_1$next_rhs) && !(LE_1_8_8(\grantE, \ep_2)) && (\locked_2$next == \transfer_1$next) && (\grantN2 == 2'd1))

	[Lemmas]: 
		[1] !((\held_2 && (\transfer_2 != \acceptE) && (\ep_2 == \locked_2) && (\locked_2$next == \locked_2$next_rhs) && (\grantN1 == 2'd2) && (\transfer_1$next == \transfer_1$next_rhs) && !(LE_1_8_8(\grantE, \ep_2)) && (\locked_2$next == \transfer_1$next) && (\grantN2 == 2'd1)))
#1960
#Lemmas = 30
[RES_1]       30	: 3	: 0 18 59 8 s: 85
[RES_0]    L  3 : 0 26 119 19 s: 164, mem: 20, time: 0.406942
---------------------------------------------------------------------------------------------
Loop_3_0_30
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[3] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #3
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(6 + 0 + 0 + 0 + 0)
	(concrete cube) 6	(6 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 6 -> 3)
	(121 + 6 -> 121 + 3)
	(6 -> 3 -> 2)
	(6 -> 3 -> 2)

		[MUS(s)]:

		[1] w8	((\locked_2 == \transfer_1) && (\transfer_1 != 8'd0))
[RES_1]       30	: 3	: 0 18 58 8 s: 84
[RES_0]    L  3 : 0 26 117 18 s: 161, mem: 20, time: 0.408999
---------------------------------------------------------------------------------------------
Loop_3_1_30
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[3] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 7	(7 + 0 + 0 + 0 + 0)
	(concrete cube) 7	(7 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 7 -> 3)
	(124 + 7 -> 124 + 3)
	(7 -> 3 -> 3)
	(7 -> 3 -> 3)

		[MUS(s)]:

		[1] w8	((\locked_1 == \transfer_2) && (\ep_2 != 8'd0) && (\transfer_2 != 8'd0))
[RES_1]       30	: 3	: 0 18 58 9 s: 85
[RES_0]    L  3 : 0 26 117 21 s: 164, mem: 20, time: 0.411119
---------------------------------------------------------------------------------------------
Loop_3_2_30
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[3] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #3
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(6 + 0 + 0 + 0 + 0)
	(concrete cube) 6	(6 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #5
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #6
	(adding from pre_c to cc. cube) #5
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #6
	(abstract cube) 10	(10 + 0 + 0 + 0 + 0)
	(concrete cube) 10	(10 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #5
	(adding from pre_c to cc. cube) #3
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #5
	(abstract cube) 9	(9 + 0 + 0 + 0 + 0)
	(concrete cube) 9	(9 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #1
	(adding required pred. from inp_c to ab. cube) #7
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #1
	(adding pred. from inp_c to cc. cube) #7
	(abstract cube) 9	(9 + 0 + 0 + 0 + 0)
	(concrete cube) 9	(9 + 0 + 0 + 0)
		(Next: ((\ep_1$next == \ep_1$next_rhs) && (\ep_2$next == \ep_2$next_rhs) && (\transfer_1$next == \transfer_1$next_rhs)))

	[Concrete check]:

[ ACEXT ]: (Length: 4)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 19)
		(cc core: 19 -> 10)
UNSAT

		[MUS(s)]:
		[1] ((\grantN1 == 2'd1) && (\grantN2 == 2'd2) && (\ep_1 == \locked_1) && !(LE_1_8_8(\grantE, \ep_1)) && (\transfer_2$next == \transfer_2$next_rhs) && (\acceptN == 2'd1) && (\locked_1$next == \locked_1$next_rhs) && (\locked_1$next == \transfer_2$next) && (\transfer_1 != \acceptE) && \held_1)

	[Lemmas]: 
		[1] !(((\grantN1 == 2'd1) && (\grantN2 == 2'd2) && (\ep_1 == \locked_1) && !(LE_1_8_8(\grantE, \ep_1)) && (\transfer_2$next == \transfer_2$next_rhs) && (\acceptN == 2'd1) && (\locked_1$next == \locked_1$next_rhs) && (\locked_1$next == \transfer_2$next) && (\transfer_1 != \acceptE) && \held_1))
#1983
#Lemmas = 31
[RES_1]       31	: 3	: 0 18 58 9 s: 85
[RES_0]    L  3 : 0 26 117 21 s: 164, mem: 20, time: 0.422392
---------------------------------------------------------------------------------------------
Loop_3_0_31
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[3] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #3
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(6 + 0 + 0 + 0 + 0)
	(concrete cube) 6	(6 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #5
	(adding required pred. from mixed_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #6
	(adding from pre_c to cc. cube) #5
	(adding pred. from mixed_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #6
	(abstract cube) 11	(11 + 0 + 0 + 0 + 0)
	(concrete cube) 11	(11 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #5
	(adding from pre_c to cc. cube) #3
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #5
	(abstract cube) 9	(9 + 0 + 0 + 0 + 0)
	(concrete cube) 9	(9 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #1
	(adding required pred. from inp_c to ab. cube) #7
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #1
	(adding pred. from inp_c to cc. cube) #7
	(abstract cube) 9	(9 + 0 + 0 + 0 + 0)
	(concrete cube) 9	(9 + 0 + 0 + 0)
		(Next: ((\ep_1$next == \ep_1$next_rhs) && (\ep_2$next == \ep_2$next_rhs) && (\transfer_1$next == \transfer_1$next_rhs)))

	[Concrete check]:

[ ACEXT ]: (Length: 4)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 20)
		(cc core: 20 -> 10)
UNSAT

		[MUS(s)]:
		[1] ((\acceptN == 2'd1) && (\grantN2 == 2'd2) && (\locked_1$next == \locked_1$next_rhs) && LE_1_8_8(\acceptE, \ep_1) && (\locked_1$next == \transfer_2$next) && (\transfer_2$next == \transfer_2$next_rhs) && \held_1 && (\ep_1 == \locked_1) && (\grantN1 == 2'd1) && !(LE_1_8_8(\grantE, \ep_1)))

	[Lemmas]: 
		[1] !(((\acceptN == 2'd1) && (\grantN2 == 2'd2) && (\locked_1$next == \locked_1$next_rhs) && LE_1_8_8(\acceptE, \ep_1) && (\locked_1$next == \transfer_2$next) && (\transfer_2$next == \transfer_2$next_rhs) && \held_1 && (\ep_1 == \locked_1) && (\grantN1 == 2'd1) && !(LE_1_8_8(\grantE, \ep_1))))
#1993
#Lemmas = 32
[RES_1]       32	: 3	: 0 18 58 9 s: 85
[RES_0]    L  3 : 0 26 117 21 s: 164, mem: 20, time: 0.432431
---------------------------------------------------------------------------------------------
Loop_3_0_32
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[3] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #3
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(6 + 0 + 0 + 0 + 0)
	(concrete cube) 6	(6 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #1
	(adding required pred. from inp_c to ab. cube) #6
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #1
	(adding pred. from inp_c to cc. cube) #6
	(abstract cube) 9	(9 + 0 + 0 + 0 + 0)
	(concrete cube) 9	(9 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #3
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(abstract cube) 6	(6 + 0 + 0 + 0 + 0)
	(concrete cube) 6	(6 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #1
	(adding required pred. from inp_c to ab. cube) #7
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #1
	(adding pred. from inp_c to cc. cube) #7
	(abstract cube) 9	(9 + 0 + 0 + 0 + 0)
	(concrete cube) 9	(9 + 0 + 0 + 0)
		(Next: ((\ep_1$next == \ep_1$next_rhs) && (\ep_2$next == \ep_2$next_rhs) && (\transfer_1$next == \transfer_1$next_rhs)))

	[Concrete check]:

[ ACEXT ]: (Length: 4)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 18)
		(cc core: 18 -> 10)
UNSAT

		[MUS(s)]:
		[1] ((\ep_1 == \locked_1) && \held_1 && (\grantN1 == 2'd1) && (\transfer_2$next == \transfer_2$next_rhs) && (\grantN2 == 2'd2) && (\locked_1$next == \transfer_2$next) && (\acceptN != 2'd2) && (\acceptN != 2'd1) && (\locked_1$next == \locked_1$next_rhs) && !(LE_1_8_8(\grantE, \ep_1)))

	[Lemmas]: 
		[1] !(((\ep_1 == \locked_1) && \held_1 && (\grantN1 == 2'd1) && (\transfer_2$next == \transfer_2$next_rhs) && (\grantN2 == 2'd2) && (\locked_1$next == \transfer_2$next) && (\acceptN != 2'd2) && (\acceptN != 2'd1) && (\locked_1$next == \locked_1$next_rhs) && !(LE_1_8_8(\grantE, \ep_1))))
#2006
#Lemmas = 33
[RES_1]       33	: 3	: 0 18 58 9 s: 85
[RES_0]    L  3 : 0 26 117 21 s: 164, mem: 20, time: 0.4427
---------------------------------------------------------------------------------------------
Loop_3_0_33
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[3] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #3
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(6 + 0 + 0 + 0 + 0)
	(concrete cube) 6	(6 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #5
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #6
	(adding from pre_c to cc. cube) #5
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #6
	(abstract cube) 10	(10 + 0 + 0 + 0 + 0)
	(concrete cube) 10	(10 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #5
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #6
	(adding from pre_c to cc. cube) #5
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #6
	(abstract cube) 9	(9 + 0 + 0 + 0 + 0)
	(concrete cube) 9	(9 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #6
	(adding required pred. from mixed_c to ab. cube) #1
	(adding required pred. from inp_c to ab. cube) #8
	(adding from pre_c to cc. cube) #6
	(adding pred. from mixed_c to cc. cube) #1
	(adding pred. from inp_c to cc. cube) #8
	(abstract cube) 11	(11 + 0 + 0 + 0 + 0)
	(concrete cube) 11	(11 + 0 + 0 + 0)
		(Next: ((\held_1$next == \held_1$next_rhs) && (\ep_1$next == \ep_1$next_rhs) && (\ep_2$next == \ep_2$next_rhs) && (\transfer_1$next == \transfer_1$next_rhs) && (\transfer_2$next == \transfer_2$next_rhs)))

	[Concrete check]:

[ ACEXT ]: (Length: 4)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 19)
		(cc core: 19 -> 10)
UNSAT

		[MUS(s)]:
		[1] ((\grantN1 == 2'd1) && !(LE_1_8_8(\grantE, \ep_1)) && (\ep_1 == \locked_1) && \held_1 && (\grantN2 == 2'd2) && (\acceptN == 2'd2) && (\locked_1$next == \transfer_2$next) && (\locked_1$next == \locked_1$next_rhs) && (\transfer_2 != \acceptE) && (\transfer_2$next == \transfer_2$next_rhs))

	[Lemmas]: 
		[1] !(((\grantN1 == 2'd1) && !(LE_1_8_8(\grantE, \ep_1)) && (\ep_1 == \locked_1) && \held_1 && (\grantN2 == 2'd2) && (\acceptN == 2'd2) && (\locked_1$next == \transfer_2$next) && (\locked_1$next == \locked_1$next_rhs) && (\transfer_2 != \acceptE) && (\transfer_2$next == \transfer_2$next_rhs)))
#2021
#Lemmas = 34
[RES_1]       34	: 3	: 0 18 58 9 s: 85
[RES_0]    L  3 : 0 26 117 21 s: 164, mem: 21, time: 0.45365
---------------------------------------------------------------------------------------------
Loop_3_0_34
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[3] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #3
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(6 + 0 + 0 + 0 + 0)
	(concrete cube) 6	(6 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 6 -> 3)
	(129 + 6 -> 129 + 3)
	(6 -> 3 -> 2)
	(6 -> 3 -> 2)

		[MUS(s)]:

		[1] w8	((\locked_1 == \transfer_2) && (\transfer_2 != 8'd0))
[RES_1]       34	: 3	: 0 18 57 9 s: 84
[RES_0]    L  3 : 0 26 115 20 s: 161, mem: 21, time: 0.456322
---------------------------------------------------------------------------------------------
Loop_3_1_34
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[3] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 7	(7 + 0 + 0 + 0 + 0)
	(concrete cube) 7	(7 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 7 -> 3)
	(130 + 7 -> 130 + 3)
	(7 -> 3 -> 3)
	(7 -> 3 -> 3)

		[MUS(s)]:

		[1] w8	((\locked_3 == \transfer_2) && (\ep_2 != 8'd0) && (\transfer_2 != 8'd0))
[RES_1]       34	: 3	: 0 18 57 10 s: 85
[RES_0]    L  3 : 0 26 115 23 s: 164, mem: 21, time: 0.458174
---------------------------------------------------------------------------------------------
Loop_3_2_34
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[3] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #3
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(6 + 0 + 0 + 0 + 0)
	(concrete cube) 6	(6 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #5
	(adding required pred. from mixed_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #4
	(adding from pre_c to cc. cube) #5
	(adding pred. from mixed_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #4
	(abstract cube) 11	(11 + 0 + 0 + 0 + 0)
	(concrete cube) 11	(11 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #3
	(adding from pre_c to cc. cube) #3
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #3
	(abstract cube) 7	(7 + 0 + 0 + 0 + 0)
	(concrete cube) 7	(7 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #1
	(adding required pred. from inp_c to ab. cube) #7
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #1
	(adding pred. from inp_c to cc. cube) #7
	(abstract cube) 9	(9 + 0 + 0 + 0 + 0)
	(concrete cube) 9	(9 + 0 + 0 + 0)
		(Next: ((\ep_2$next == \ep_2$next_rhs) && (\ep_3$next == \ep_3$next_rhs) && (\transfer_3$next == \transfer_3$next_rhs)))

	[Concrete check]:

[ ACEXT ]: (Length: 4)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 20)
		(cc core: 20 -> 9)
UNSAT

		[MUS(s)]:
		[1] ((\grantN2 == 2'd2) && (\ep_3 == \locked_3) && \held_3 && (\locked_3$next == \locked_3$next_rhs) && !(LE_1_8_8(\grantE, \ep_3)) && (\locked_3$next == \transfer_2$next) && (\transfer_2$next == \transfer_2$next_rhs) && LE_1_8_8(\acceptE, \ep_3) && (\grantN1 == 2'd3))

	[Lemmas]: 
		[1] !(((\grantN2 == 2'd2) && (\ep_3 == \locked_3) && \held_3 && (\locked_3$next == \locked_3$next_rhs) && !(LE_1_8_8(\grantE, \ep_3)) && (\locked_3$next == \transfer_2$next) && (\transfer_2$next == \transfer_2$next_rhs) && LE_1_8_8(\acceptE, \ep_3) && (\grantN1 == 2'd3)))
#2044
#Lemmas = 35
[RES_1]       35	: 3	: 0 18 57 10 s: 85
[RES_0]    L  3 : 0 26 115 23 s: 164, mem: 21, time: 0.468811
---------------------------------------------------------------------------------------------
Loop_3_0_35
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[3] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #3
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(6 + 0 + 0 + 0 + 0)
	(concrete cube) 6	(6 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #5
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #4
	(adding from pre_c to cc. cube) #5
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #4
	(abstract cube) 10	(10 + 0 + 0 + 0 + 0)
	(concrete cube) 10	(10 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #3
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #3
	(adding from pre_c to cc. cube) #3
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #3
	(abstract cube) 7	(7 + 0 + 0 + 0 + 0)
	(concrete cube) 7	(7 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #1
	(adding required pred. from inp_c to ab. cube) #7
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #1
	(adding pred. from inp_c to cc. cube) #7
	(abstract cube) 9	(9 + 0 + 0 + 0 + 0)
	(concrete cube) 9	(9 + 0 + 0 + 0)
		(Next: ((\ep_2$next == \ep_2$next_rhs) && (\ep_3$next == \ep_3$next_rhs) && (\transfer_3$next == \transfer_3$next_rhs)))

	[Concrete check]:

[ ACEXT ]: (Length: 4)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 19)
		(cc core: 19 -> 9)
UNSAT

		[MUS(s)]:
		[1] (\held_3 && (\locked_3$next == \transfer_2$next) && (\transfer_3 != \acceptE) && (\grantN1 == 2'd3) && !(LE_1_8_8(\grantE, \ep_3)) && (\transfer_2$next == \transfer_2$next_rhs) && (\locked_3$next == \locked_3$next_rhs) && (\grantN2 == 2'd2) && (\ep_3 == \locked_3))

	[Lemmas]: 
		[1] !((\held_3 && (\locked_3$next == \transfer_2$next) && (\transfer_3 != \acceptE) && (\grantN1 == 2'd3) && !(LE_1_8_8(\grantE, \ep_3)) && (\transfer_2$next == \transfer_2$next_rhs) && (\locked_3$next == \locked_3$next_rhs) && (\grantN2 == 2'd2) && (\ep_3 == \locked_3)))
#2054
#Lemmas = 36
[RES_1]       36	: 3	: 0 18 57 10 s: 85
[RES_0]    L  3 : 0 26 115 23 s: 164, mem: 21, time: 0.478709
---------------------------------------------------------------------------------------------
Loop_3_0_36
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[3] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #3
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(6 + 0 + 0 + 0 + 0)
	(concrete cube) 6	(6 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 6 -> 2)
	(133 + 6 -> 133 + 2)
	(6 -> 2 -> 2)
	(6 -> 2 -> 2)

		[MUS(s)]:

		[1] w8	((\locked_3 == \transfer_2) && (\transfer_2 != 8'd0))
[RES_1]       36	: 3	: 0 18 56 10 s: 84
[RES_0]    L  3 : 0 26 113 22 s: 161, mem: 21, time: 0.480817
---------------------------------------------------------------------------------------------
Loop_3_1_36
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[3] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #3
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(6 + 0 + 0 + 0 + 0)
	(concrete cube) 6	(6 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #5
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #7
	(adding from pre_c to cc. cube) #5
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #7
	(abstract cube) 10	(10 + 0 + 0 + 0 + 0)
	(concrete cube) 10	(10 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #6
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #6
	(adding from pre_c to cc. cube) #6
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #6
	(abstract cube) 10	(10 + 0 + 0 + 0 + 0)
	(concrete cube) 10	(10 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #6
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #9
	(adding from pre_c to cc. cube) #6
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #9
	(abstract cube) 11	(11 + 0 + 0 + 0 + 0)
	(concrete cube) 11	(11 + 0 + 0 + 0)
		(Next: ((\held_1$next == \held_1$next_rhs) && (\ep_0$next == \ep_0$next_rhs) && (\ep_2$next == \ep_2$next_rhs) && (\transfer_0$next == \transfer_0$next_rhs) && (\transfer_2$next == \transfer_2$next_rhs)))

	[Concrete check]:

[ ACEXT ]: (Length: 4)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 19)
		(cc core: 19 -> 10)
UNSAT

		[MUS(s)]:
		[1] ((\ep_0 == \locked_0) && (\transfer_2 == 8'd0) && (\transfer_2$next == \transfer_2$next_rhs) && (\locked_0$next == \locked_0$next_rhs) && (\transfer_2$next != 8'd0) && (\locked_0$next == \transfer_2$next) && !(LE_1_8_8(\grantE, \ep_0)) && (\acceptN == 2'd2))

	[Lemmas]: 
		[1] !(((\ep_0 == \locked_0) && (\transfer_2 == 8'd0) && (\transfer_2$next == \transfer_2$next_rhs) && (\locked_0$next == \locked_0$next_rhs) && (\transfer_2$next != 8'd0) && (\locked_0$next == \transfer_2$next) && !(LE_1_8_8(\grantE, \ep_0)) && (\acceptN == 2'd2)))
#2074
#Lemmas = 37
[RES_1]       37	: 3	: 0 18 56 10 s: 84
[RES_0]    L  3 : 0 26 113 22 s: 161, mem: 21, time: 0.491172
---------------------------------------------------------------------------------------------
Loop_3_0_37
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[3] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #3
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(6 + 0 + 0 + 0 + 0)
	(concrete cube) 6	(6 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #1
	(adding required pred. from inp_c to ab. cube) #7
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #1
	(adding pred. from inp_c to cc. cube) #7
	(abstract cube) 9	(9 + 0 + 0 + 0 + 0)
	(concrete cube) 9	(9 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(abstract cube) 7	(7 + 0 + 0 + 0 + 0)
	(concrete cube) 7	(7 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #7
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #7
	(abstract cube) 9	(9 + 0 + 0 + 0 + 0)
	(concrete cube) 9	(9 + 0 + 0 + 0)
		(Next: ((\ep_0$next == \ep_0$next_rhs) && (\ep_2$next == \ep_2$next_rhs) && (\transfer_0$next == \transfer_0$next_rhs)))

	[Concrete check]:

[ ACEXT ]: (Length: 4)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 18)
		(cc core: 18 -> 10)
UNSAT

		[MUS(s)]:
		[1] ((\grantN1 == 2'd0) && !(LE_1_8_8(\grantE, \ep_0)) && (\ep_0 == \locked_0) && (\locked_0$next == \locked_0$next_rhs) && (\acceptN != 2'd2) && (\locked_0$next == \transfer_2$next) && (\acceptN != 2'd0) && (\grantN2 == 2'd2) && (\transfer_2$next == \transfer_2$next_rhs) && \held_0)

	[Lemmas]: 
		[1] !(((\grantN1 == 2'd0) && !(LE_1_8_8(\grantE, \ep_0)) && (\ep_0 == \locked_0) && (\locked_0$next == \locked_0$next_rhs) && (\acceptN != 2'd2) && (\locked_0$next == \transfer_2$next) && (\acceptN != 2'd0) && (\grantN2 == 2'd2) && (\transfer_2$next == \transfer_2$next_rhs) && \held_0))
#2090
#Lemmas = 38
[RES_1]       38	: 3	: 0 18 56 10 s: 84
[RES_0]    L  3 : 0 26 113 22 s: 161, mem: 21, time: 0.501167
---------------------------------------------------------------------------------------------
Loop_3_0_38
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[3] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #3
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(6 + 0 + 0 + 0 + 0)
	(concrete cube) 6	(6 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #5
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #7
	(adding from pre_c to cc. cube) #5
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #7
	(abstract cube) 10	(10 + 0 + 0 + 0 + 0)
	(concrete cube) 10	(10 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #5
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #6
	(adding from pre_c to cc. cube) #5
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #6
	(abstract cube) 10	(10 + 0 + 0 + 0 + 0)
	(concrete cube) 10	(10 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #5
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #8
	(adding from pre_c to cc. cube) #5
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #8
	(abstract cube) 10	(10 + 0 + 0 + 0 + 0)
	(concrete cube) 10	(10 + 0 + 0 + 0)
		(Next: ((\held_1$next == \held_1$next_rhs) && (\ep_0$next == \ep_0$next_rhs) && (\ep_2$next == \ep_2$next_rhs) && (\transfer_0$next == \transfer_0$next_rhs)))

	[Concrete check]:

[ ACEXT ]: (Length: 4)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 19)
		(cc core: 19 -> 10)
UNSAT

		[MUS(s)]:
		[1] (\held_0 && (\locked_0$next == \locked_0$next_rhs) && (\ep_0 == \locked_0) && (\transfer_2$next == \transfer_2$next_rhs) && (\grantN2 == 2'd2) && (\acceptN == 2'd0) && (\grantN1 == 2'd0) && !(LE_1_8_8(\grantE, \ep_0)) && (\transfer_0 != \acceptE) && (\locked_0$next == \transfer_2$next))

	[Lemmas]: 
		[1] !((\held_0 && (\locked_0$next == \locked_0$next_rhs) && (\ep_0 == \locked_0) && (\transfer_2$next == \transfer_2$next_rhs) && (\grantN2 == 2'd2) && (\acceptN == 2'd0) && (\grantN1 == 2'd0) && !(LE_1_8_8(\grantE, \ep_0)) && (\transfer_0 != \acceptE) && (\locked_0$next == \transfer_2$next)))
#2106
#Lemmas = 39
[RES_1]       39	: 3	: 0 18 56 10 s: 84
[RES_0]    L  3 : 0 26 113 22 s: 161, mem: 21, time: 0.511807
---------------------------------------------------------------------------------------------
Loop_3_0_39
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[3] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #3
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(6 + 0 + 0 + 0 + 0)
	(concrete cube) 6	(6 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #5
	(adding required pred. from mixed_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #7
	(adding from pre_c to cc. cube) #5
	(adding pred. from mixed_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #7
	(abstract cube) 11	(11 + 0 + 0 + 0 + 0)
	(concrete cube) 11	(11 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #5
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #6
	(adding from pre_c to cc. cube) #5
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #6
	(abstract cube) 10	(10 + 0 + 0 + 0 + 0)
	(concrete cube) 10	(10 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #5
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #8
	(adding from pre_c to cc. cube) #5
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #8
	(abstract cube) 10	(10 + 0 + 0 + 0 + 0)
	(concrete cube) 10	(10 + 0 + 0 + 0)
		(Next: ((\held_1$next == \held_1$next_rhs) && (\ep_0$next == \ep_0$next_rhs) && (\ep_2$next == \ep_2$next_rhs) && (\transfer_0$next == \transfer_0$next_rhs)))

	[Concrete check]:

[ ACEXT ]: (Length: 4)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 13)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 20)
		(cc core: 20 -> 10)
UNSAT

		[MUS(s)]:
		[1] ((\grantN2 == 2'd2) && (\grantN1 == 2'd0) && (\locked_0$next == \locked_0$next_rhs) && \held_0 && (\ep_0 == \locked_0) && (\acceptN == 2'd0) && (\transfer_2$next == \transfer_2$next_rhs) && !(LE_1_8_8(\grantE, \ep_0)) && (\locked_0$next == \transfer_2$next) && LE_1_8_8(\acceptE, \ep_0))

	[Lemmas]: 
		[1] !(((\grantN2 == 2'd2) && (\grantN1 == 2'd0) && (\locked_0$next == \locked_0$next_rhs) && \held_0 && (\ep_0 == \locked_0) && (\acceptN == 2'd0) && (\transfer_2$next == \transfer_2$next_rhs) && !(LE_1_8_8(\grantE, \ep_0)) && (\locked_0$next == \transfer_2$next) && LE_1_8_8(\acceptE, \ep_0)))
#2119
#Lemmas = 40
[RES_1]       40	: 3	: 0 18 56 10 s: 84
[RES_0]    L  3 : 0 26 113 22 s: 161, mem: 21, time: 0.522132
---------------------------------------------------------------------------------------------
Loop_3_0_40
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[3] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #3
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(6 + 0 + 0 + 0 + 0)
	(concrete cube) 6	(6 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 6 -> 3)
	(138 + 6 -> 138 + 3)
	(6 -> 3 -> 2)
	(6 -> 3 -> 2)

		[MUS(s)]:

		[1] w8	((\locked_0 == \transfer_2) && (\transfer_2 != 8'd0))
[RES_1]       40	: 3	: 0 18 55 11 s: 84
[RES_0]    L  3 : 0 26 111 24 s: 161, mem: 21, time: 0.524556
---------------------------------------------------------------------------------------------
Loop_3_1_40
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[3] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 7	(7 + 0 + 0 + 0 + 0)
	(concrete cube) 7	(7 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #6
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #5
	(adding from pre_c to cc. cube) #6
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #5
	(abstract cube) 11	(11 + 0 + 0 + 0 + 0)
	(concrete cube) 11	(11 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #4
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #4
	(abstract cube) 9	(9 + 0 + 0 + 0 + 0)
	(concrete cube) 9	(9 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #7
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #7
	(abstract cube) 9	(9 + 0 + 0 + 0 + 0)
	(concrete cube) 9	(9 + 0 + 0 + 0)
		(Next: ((\ep_0$next == \ep_0$next_rhs) && (\ep_2$next == \ep_2$next_rhs) && (\transfer_2$next == \transfer_2$next_rhs)))

	[Concrete check]:

[ ACEXT ]: (Length: 4)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 14)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 21)
		(cc core: 21 -> 9)
UNSAT

		[MUS(s)]:
		[1] ((\transfer_2 == 8'd0) && (\locked_2$next == \locked_2$next_rhs) && (\transfer_0$next == \transfer_0$next_rhs) && (\grantN2 == 2'd0) && \held_2 && (\grantN1 == 2'd2) && (\locked_2$next == \transfer_0$next) && (\ep_2 == \locked_2) && !(LE_1_8_8(\grantE, \ep_2)))

	[Lemmas]: 
		[1] !(((\transfer_2 == 8'd0) && (\locked_2$next == \locked_2$next_rhs) && (\transfer_0$next == \transfer_0$next_rhs) && (\grantN2 == 2'd0) && \held_2 && (\grantN1 == 2'd2) && (\locked_2$next == \transfer_0$next) && (\ep_2 == \locked_2) && !(LE_1_8_8(\grantE, \ep_2))))
#2138
#Lemmas = 41
[RES_1]       41	: 3	: 0 18 55 11 s: 84
[RES_0]    L  3 : 0 26 111 24 s: 161, mem: 21, time: 0.534814
---------------------------------------------------------------------------------------------
Loop_3_0_41
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[3] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 7	(7 + 0 + 0 + 0 + 0)
	(concrete cube) 7	(7 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #6
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #5
	(adding from pre_c to cc. cube) #6
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #5
	(abstract cube) 11	(11 + 0 + 0 + 0 + 0)
	(concrete cube) 11	(11 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #4
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #4
	(abstract cube) 9	(9 + 0 + 0 + 0 + 0)
	(concrete cube) 9	(9 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #7
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #7
	(abstract cube) 9	(9 + 0 + 0 + 0 + 0)
	(concrete cube) 9	(9 + 0 + 0 + 0)
		(Next: ((\ep_0$next == \ep_0$next_rhs) && (\ep_2$next == \ep_2$next_rhs) && (\transfer_2$next == \transfer_2$next_rhs)))

	[Concrete check]:

[ ACEXT ]: (Length: 4)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 14)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 21)
		(cc core: 21 -> 9)
UNSAT

		[MUS(s)]:
		[1] ((\grantN1 == 2'd2) && (\locked_2$next == \locked_2$next_rhs) && (\grantN2 == 2'd0) && !(LE_1_8_8(\grantE, \ep_2)) && (\transfer_2 != \acceptE) && (\ep_2 == \locked_2) && \held_2 && (\locked_2$next == \transfer_0$next) && (\transfer_0$next == \transfer_0$next_rhs))

	[Lemmas]: 
		[1] !(((\grantN1 == 2'd2) && (\locked_2$next == \locked_2$next_rhs) && (\grantN2 == 2'd0) && !(LE_1_8_8(\grantE, \ep_2)) && (\transfer_2 != \acceptE) && (\ep_2 == \locked_2) && \held_2 && (\locked_2$next == \transfer_0$next) && (\transfer_0$next == \transfer_0$next_rhs)))
#2150
#Lemmas = 42
[RES_1]       42	: 3	: 0 18 55 11 s: 84
[RES_0]    L  3 : 0 26 111 24 s: 161, mem: 21, time: 0.544995
---------------------------------------------------------------------------------------------
Loop_3_0_42
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[3] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 7	(7 + 0 + 0 + 0 + 0)
	(concrete cube) 7	(7 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 7 -> 2)
	(143 + 7 -> 143 + 2)
	(7 -> 2 -> 2)
	(7 -> 2 -> 2)

		[MUS(s)]:

		[1] w8	((\locked_2 == \transfer_0) && (\transfer_0 != 8'd0))
[RES_1]       42	: 3	: 0 18 54 12 s: 84
[RES_0]    L  3 : 0 26 109 26 s: 161, mem: 21, time: 0.54745
---------------------------------------------------------------------------------------------
Loop_3_1_42
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[3] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 7	(7 + 0 + 0 + 0 + 0)
	(concrete cube) 7	(7 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #5
	(adding required pred. from mixed_c to ab. cube) #1
	(adding required pred. from inp_c to ab. cube) #4
	(adding from pre_c to cc. cube) #5
	(adding pred. from mixed_c to cc. cube) #1
	(adding pred. from inp_c to cc. cube) #4
	(abstract cube) 10	(10 + 0 + 0 + 0 + 0)
	(concrete cube) 10	(10 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(abstract cube) 7	(7 + 0 + 0 + 0 + 0)
	(concrete cube) 7	(7 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #7
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #7
	(abstract cube) 9	(9 + 0 + 0 + 0 + 0)
	(concrete cube) 9	(9 + 0 + 0 + 0)
		(Next: ((\ep_0$next == \ep_0$next_rhs) && (\ep_3$next == \ep_3$next_rhs) && (\transfer_3$next == \transfer_3$next_rhs)))

	[Concrete check]:

[ ACEXT ]: (Length: 4)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 14)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 20)
		(cc core: 20 -> 9)
UNSAT

		[MUS(s)]:
		[1] ((\ep_3 == \locked_3) && (\transfer_0$next == \transfer_0$next_rhs) && (\locked_3$next == \transfer_0$next) && \held_3 && (\acceptN != 2'd3) && !(LE_1_8_8(\grantE, \ep_3)) && (\locked_3$next == \locked_3$next_rhs) && (\grantN1 == 2'd3) && (\grantN2 == 2'd0))

	[Lemmas]: 
		[1] !(((\ep_3 == \locked_3) && (\transfer_0$next == \transfer_0$next_rhs) && (\locked_3$next == \transfer_0$next) && \held_3 && (\acceptN != 2'd3) && !(LE_1_8_8(\grantE, \ep_3)) && (\locked_3$next == \locked_3$next_rhs) && (\grantN1 == 2'd3) && (\grantN2 == 2'd0)))
#2169
#Lemmas = 43
[RES_1]       43	: 3	: 0 18 54 12 s: 84
[RES_0]    L  3 : 0 26 109 26 s: 161, mem: 21, time: 0.557505
---------------------------------------------------------------------------------------------
Loop_3_0_43
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[3] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 7	(7 + 0 + 0 + 0 + 0)
	(concrete cube) 7	(7 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #6
	(adding required pred. from mixed_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #4
	(adding from pre_c to cc. cube) #6
	(adding pred. from mixed_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #4
	(abstract cube) 12	(12 + 0 + 0 + 0 + 0)
	(concrete cube) 12	(12 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #3
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #3
	(abstract cube) 8	(8 + 0 + 0 + 0 + 0)
	(concrete cube) 8	(8 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #7
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #7
	(abstract cube) 9	(9 + 0 + 0 + 0 + 0)
	(concrete cube) 9	(9 + 0 + 0 + 0)
		(Next: ((\ep_0$next == \ep_0$next_rhs) && (\ep_3$next == \ep_3$next_rhs) && (\transfer_3$next == \transfer_3$next_rhs)))

	[Concrete check]:

[ ACEXT ]: (Length: 4)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 14)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 22)
		(cc core: 22 -> 9)
UNSAT

		[MUS(s)]:
		[1] ((\locked_3$next == \transfer_0$next) && (\locked_3$next == \locked_3$next_rhs) && (\grantN1 == 2'd3) && \held_3 && (\ep_3 == \locked_3) && !(LE_1_8_8(\grantE, \ep_3)) && LE_1_8_8(\acceptE, \ep_3) && (\grantN2 == 2'd0) && (\transfer_0$next == \transfer_0$next_rhs))

	[Lemmas]: 
		[1] !(((\locked_3$next == \transfer_0$next) && (\locked_3$next == \locked_3$next_rhs) && (\grantN1 == 2'd3) && \held_3 && (\ep_3 == \locked_3) && !(LE_1_8_8(\grantE, \ep_3)) && LE_1_8_8(\acceptE, \ep_3) && (\grantN2 == 2'd0) && (\transfer_0$next == \transfer_0$next_rhs)))
#2182
#Lemmas = 44
[RES_1]       44	: 3	: 0 18 54 12 s: 84
[RES_0]    L  3 : 0 26 109 26 s: 161, mem: 21, time: 0.568596
---------------------------------------------------------------------------------------------
Loop_3_0_44
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[3] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 7	(7 + 0 + 0 + 0 + 0)
	(concrete cube) 7	(7 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #6
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #4
	(adding from pre_c to cc. cube) #6
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #4
	(abstract cube) 11	(11 + 0 + 0 + 0 + 0)
	(concrete cube) 11	(11 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #3
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #3
	(abstract cube) 8	(8 + 0 + 0 + 0 + 0)
	(concrete cube) 8	(8 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #7
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #7
	(abstract cube) 9	(9 + 0 + 0 + 0 + 0)
	(concrete cube) 9	(9 + 0 + 0 + 0)
		(Next: ((\ep_0$next == \ep_0$next_rhs) && (\ep_3$next == \ep_3$next_rhs) && (\transfer_3$next == \transfer_3$next_rhs)))

	[Concrete check]:

[ ACEXT ]: (Length: 4)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 14)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 21)
		(cc core: 21 -> 9)
UNSAT

		[MUS(s)]:
		[1] ((\locked_3$next == \transfer_0$next) && (\ep_3 == \locked_3) && (\transfer_3 != \acceptE) && (\locked_3$next == \locked_3$next_rhs) && \held_3 && (\grantN1 == 2'd3) && (\transfer_0$next == \transfer_0$next_rhs) && !(LE_1_8_8(\grantE, \ep_3)) && (\grantN2 == 2'd0))

	[Lemmas]: 
		[1] !(((\locked_3$next == \transfer_0$next) && (\ep_3 == \locked_3) && (\transfer_3 != \acceptE) && (\locked_3$next == \locked_3$next_rhs) && \held_3 && (\grantN1 == 2'd3) && (\transfer_0$next == \transfer_0$next_rhs) && !(LE_1_8_8(\grantE, \ep_3)) && (\grantN2 == 2'd0)))
#2194
#Lemmas = 45
[RES_1]       45	: 3	: 0 18 54 12 s: 84
[RES_0]    L  3 : 0 26 109 26 s: 161, mem: 21, time: 0.583005
---------------------------------------------------------------------------------------------
Loop_3_0_45
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[3] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 7	(7 + 0 + 0 + 0 + 0)
	(concrete cube) 7	(7 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 7 -> 2)
	(147 + 7 -> 147 + 2)
	(7 -> 2 -> 2)
	(7 -> 2 -> 2)

		[MUS(s)]:

		[1] w8	((\locked_3 == \transfer_0) && (\transfer_0 != 8'd0))
[RES_1]       45	: 3	: 0 18 53 13 s: 84
[RES_0]    L  3 : 0 26 107 28 s: 161, mem: 21, time: 0.585026
---------------------------------------------------------------------------------------------
Loop_3_1_45
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[3] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 7	(7 + 0 + 0 + 0 + 0)
	(concrete cube) 7	(7 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #6
	(adding required pred. from mixed_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #6
	(adding from pre_c to cc. cube) #6
	(adding pred. from mixed_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #6
	(abstract cube) 12	(12 + 0 + 0 + 0 + 0)
	(concrete cube) 12	(12 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #5
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #5
	(abstract cube) 10	(10 + 0 + 0 + 0 + 0)
	(concrete cube) 10	(10 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #7
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #7
	(abstract cube) 9	(9 + 0 + 0 + 0 + 0)
	(concrete cube) 9	(9 + 0 + 0 + 0)
		(Next: ((\ep_0$next == \ep_0$next_rhs) && (\ep_1$next == \ep_1$next_rhs) && (\transfer_1$next == \transfer_1$next_rhs)))

	[Concrete check]:

[ ACEXT ]: (Length: 4)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 14)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 22)
		(cc core: 22 -> 10)
UNSAT

		[MUS(s)]:
		[1] ((\ep_1 == \locked_1) && !(LE_1_8_8(\grantE, \ep_1)) && (\locked_1$next == \transfer_0$next) && (\locked_1$next == \locked_1$next_rhs) && \held_1 && (\grantN1 == 2'd1) && (\grantN2 == 2'd0) && (\transfer_1 == 8'd0) && (\transfer_0$next == \transfer_0$next_rhs))

	[Lemmas]: 
		[1] !(((\ep_1 == \locked_1) && !(LE_1_8_8(\grantE, \ep_1)) && (\locked_1$next == \transfer_0$next) && (\locked_1$next == \locked_1$next_rhs) && \held_1 && (\grantN1 == 2'd1) && (\grantN2 == 2'd0) && (\transfer_1 == 8'd0) && (\transfer_0$next == \transfer_0$next_rhs)))
#2213
#Lemmas = 46
[RES_1]       46	: 3	: 0 18 53 13 s: 84
[RES_0]    L  3 : 0 26 107 28 s: 161, mem: 21, time: 0.595692
---------------------------------------------------------------------------------------------
Loop_3_0_46
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[3] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 7	(7 + 0 + 0 + 0 + 0)
	(concrete cube) 7	(7 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #6
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #6
	(adding from pre_c to cc. cube) #6
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #6
	(abstract cube) 11	(11 + 0 + 0 + 0 + 0)
	(concrete cube) 11	(11 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #5
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #5
	(abstract cube) 10	(10 + 0 + 0 + 0 + 0)
	(concrete cube) 10	(10 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #7
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #7
	(abstract cube) 9	(9 + 0 + 0 + 0 + 0)
	(concrete cube) 9	(9 + 0 + 0 + 0)
		(Next: ((\ep_0$next == \ep_0$next_rhs) && (\ep_1$next == \ep_1$next_rhs) && (\transfer_1$next == \transfer_1$next_rhs)))

	[Concrete check]:

[ ACEXT ]: (Length: 4)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 14)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 21)
		(cc core: 21 -> 9)
UNSAT

		[MUS(s)]:
		[1] (!(LE_1_8_8(\grantE, \ep_1)) && (\grantN2 == 2'd0) && (\ep_1 == \locked_1) && (\locked_1$next == \transfer_0$next) && (\grantN1 == 2'd1) && (\transfer_1 != \acceptE) && \held_1 && (\locked_1$next == \locked_1$next_rhs) && (\transfer_0$next == \transfer_0$next_rhs))

	[Lemmas]: 
		[1] !((!(LE_1_8_8(\grantE, \ep_1)) && (\grantN2 == 2'd0) && (\ep_1 == \locked_1) && (\locked_1$next == \transfer_0$next) && (\grantN1 == 2'd1) && (\transfer_1 != \acceptE) && \held_1 && (\locked_1$next == \locked_1$next_rhs) && (\transfer_0$next == \transfer_0$next_rhs)))
#2225
#Lemmas = 47
[RES_1]       47	: 3	: 0 18 53 13 s: 84
[RES_0]    L  3 : 0 26 107 28 s: 161, mem: 21, time: 0.605724
---------------------------------------------------------------------------------------------
Loop_3_0_47
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[3] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 7	(7 + 0 + 0 + 0 + 0)
	(concrete cube) 7	(7 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 7 -> 2)
	(150 + 7 -> 150 + 2)
	(7 -> 2 -> 2)
	(7 -> 2 -> 2)

		[MUS(s)]:

		[1] w8	((\locked_1 == \transfer_0) && (\transfer_0 != 8'd0))
[RES_1]       47	: 3	: 0 18 52 14 s: 84
[RES_0]    L  3 : 0 26 105 30 s: 161, mem: 21, time: 0.608049
---------------------------------------------------------------------------------------------
Loop_3_1_47
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[3] & T & !P+ ]: UNSAT
[RES_1]       47	: 3	: 0 18 52 14 s: 84
[RES_0]    L  3 : 0 26 105 30 s: 161, mem: 21, time: 0.608631
	[Forward propagation]:
[RES_1]       47	: 4	: 0 12 25 38 9 s: 84
[RES_0]    L  4 : 0 14 51 81 15 s: 161, mem: 21, time: 0.637207
---------------------------------------------------------------------------------------------
Loop_4_0_47
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[4] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 7	(7 + 0 + 0 + 0 + 0)
	(concrete cube) 7	(7 + 0 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #8
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #6
	(adding from pre_c to cc. cube) #8
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #6
	(abstract cube) 12	(12 + 0 + 0 + 0 + 0)
	(concrete cube) 12	(12 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 12 -> 4)
	(200 + 12 -> 200 + 4)
	(12 -> 4 -> 3)
	(12 -> 4 -> 3)

		[MUS(s)]:

		[1] w8	((\transfer_3 == \transfer_0) && (\ep_3 != 8'd0) && (\transfer_0 != 8'd0))
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 7 -> 3)
	(117 + 7 -> 117 + 3)
	(7 -> 3 -> 3)
	(7 -> 3 -> 3)

		[MUS(s)]:

		[1] w8	((\locked_0 == \transfer_3) && (\ep_3 != 8'd0) && (\transfer_3 != 8'd0))
[RES_1]       47	: 4	: 0 12 25 39 10 s: 86
[RES_0]    L  4 : 0 14 51 84 18 s: 167, mem: 21, time: 0.643801
---------------------------------------------------------------------------------------------
Loop_4_1_47
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[4] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #3
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(6 + 0 + 0 + 0 + 0)
	(concrete cube) 6	(6 + 0 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #5
	(adding required pred. from mixed_c to ab. cube) #1
	(adding required pred. from inp_c to ab. cube) #5
	(adding from pre_c to cc. cube) #5
	(adding pred. from mixed_c to cc. cube) #1
	(adding pred. from inp_c to cc. cube) #5
	(abstract cube) 10	(10 + 0 + 0 + 0 + 0)
	(concrete cube) 10	(10 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #7
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #3
	(adding from pre_c to cc. cube) #7
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #3
	(abstract cube) 10	(10 + 0 + 0 + 0 + 0)
	(concrete cube) 10	(10 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 10 -> 2)
	(245 + 10 -> 245 + 2)
	(10 -> 2 -> 2)
	(10 -> 2 -> 2)

		[MUS(s)]:

		[1] w8	((\locked_0 != 8'd0) && (\ep_2 != 8'd0))
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #5
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #3
	(adding from pre_c to cc. cube) #5
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #3
	(abstract cube) 8	(8 + 0 + 0 + 0 + 0)
	(concrete cube) 8	(8 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 8 -> 2)
	(246 + 8 -> 246 + 2)
	(8 -> 2 -> 2)
	(8 -> 2 -> 2)

		[MUS(s)]:

		[1] w8	((\locked_0 != 8'd0) && (\transfer_2 != 8'd0))
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 10 -> 2)
	(205 + 10 -> 205 + 2)
	(10 -> 2 -> 2)
	(10 -> 2 -> 2)

		[MUS(s)]:

		[1] w8	((\locked_0 != 8'd0) && \held_2)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #5
	(adding required pred. from mixed_c to ab. cube) #1
	(adding required pred. from inp_c to ab. cube) #6
	(adding from pre_c to cc. cube) #5
	(adding pred. from mixed_c to cc. cube) #1
	(adding pred. from inp_c to cc. cube) #6
	(abstract cube) 10	(10 + 0 + 0 + 0 + 0)
	(concrete cube) 10	(10 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #5
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #3
	(adding from pre_c to cc. cube) #5
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #3
	(abstract cube) 8	(8 + 0 + 0 + 0 + 0)
	(concrete cube) 8	(8 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 8 -> 2)
	(248 + 8 -> 248 + 2)
	(8 -> 2 -> 2)
	(8 -> 2 -> 2)

		[MUS(s)]:

		[1] w8	((\locked_0 != 8'd0) && (\transfer_1 != 8'd0))
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 10 -> 3)
	(207 + 10 -> 207 + 3)
	(10 -> 3 -> 2)
	(10 -> 3 -> 2)

		[MUS(s)]:

		[1] w8	(\held_1 && (\locked_0 != 8'd0))
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #6
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #6
	(adding from pre_c to cc. cube) #6
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #6
	(abstract cube) 10	(10 + 0 + 0 + 0 + 0)
	(concrete cube) 10	(10 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 10 -> 4)
	(209 + 10 -> 209 + 4)
	(10 -> 4 -> 3)
	(10 -> 4 -> 3)

		[MUS(s)]:

		[1] w8	((\ep_0 != \transfer_0) && (\transfer_3 == \transfer_0) && (\transfer_0 != 8'd0))
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 6 -> 3)
	(121 + 6 -> 121 + 3)
	(6 -> 3 -> 2)
	(6 -> 3 -> 2)

		[MUS(s)]:

		[1] w8	((\locked_0 == \transfer_3) && (\transfer_3 != 8'd0))
[RES_1]       47	: 4	: 0 12 26 41 10 s: 89
[RES_0]    L  4 : 0 14 53 89 17 s: 173, mem: 21, time: 0.658648
---------------------------------------------------------------------------------------------
Loop_4_2_47
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[4] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 7	(7 + 0 + 0 + 0 + 0)
	(concrete cube) 7	(7 + 0 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #5
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #4
	(adding from pre_c to cc. cube) #5
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #4
	(abstract cube) 10	(10 + 0 + 0 + 0 + 0)
	(concrete cube) 10	(10 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #6
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #3
	(adding from pre_c to cc. cube) #6
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #3
	(abstract cube) 10	(10 + 0 + 0 + 0 + 0)
	(concrete cube) 10	(10 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 10 -> 2)
	(252 + 10 -> 252 + 2)
	(10 -> 2 -> 2)
	(10 -> 2 -> 2)

		[MUS(s)]:

		[1] w8	((\locked_1 != 8'd0) && (\ep_3 != 8'd0))
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #3
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #3
	(abstract cube) 8	(8 + 0 + 0 + 0 + 0)
	(concrete cube) 8	(8 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 8 -> 2)
	(253 + 8 -> 253 + 2)
	(8 -> 2 -> 2)
	(8 -> 2 -> 2)

		[MUS(s)]:

		[1] w8	((\locked_1 != 8'd0) && (\transfer_3 != 8'd0))
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 10 -> 3)
	(214 + 10 -> 214 + 3)
	(10 -> 3 -> 3)
	(10 -> 3 -> 3)

		[MUS(s)]:

		[1] w8	((\ep_3 == \transfer_3) && (\locked_1 != 8'd0) && (\transfer_3 != 8'd0))
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #5
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #4
	(adding from pre_c to cc. cube) #5
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #4
	(abstract cube) 10	(10 + 0 + 0 + 0 + 0)
	(concrete cube) 10	(10 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 10 -> 3)
	(215 + 10 -> 215 + 3)
	(10 -> 3 -> 2)
	(10 -> 3 -> 2)

		[MUS(s)]:

		[1] w8	((\locked_1 != 8'd0) && \held_3)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #8
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #5
	(adding from pre_c to cc. cube) #8
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #5
	(abstract cube) 13	(13 + 0 + 0 + 0 + 0)
	(concrete cube) 13	(13 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 13 -> 3)
	(216 + 13 -> 216 + 3)
	(13 -> 3 -> 3)
	(13 -> 3 -> 3)

		[MUS(s)]:

		[1] w8	((\locked_1 != 8'd0) && (\ep_2 != 8'd0) && (\ep_3 != 8'd0))
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 7 -> 3)
	(126 + 7 -> 126 + 3)
	(7 -> 3 -> 3)
	(7 -> 3 -> 3)

		[MUS(s)]:

		[1] w8	((\locked_1 == \transfer_3) && (\ep_3 != 8'd0) && (\transfer_3 != 8'd0))
[RES_1]       47	: 4	: 0 12 27 44 11 s: 94
[RES_0]    L  4 : 0 14 55 97 20 s: 186, mem: 22, time: 0.671667
---------------------------------------------------------------------------------------------
Loop_4_3_47
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[4] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #3
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(6 + 0 + 0 + 0 + 0)
	(concrete cube) 6	(6 + 0 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #5
	(adding required pred. from mixed_c to ab. cube) #1
	(adding required pred. from inp_c to ab. cube) #5
	(adding from pre_c to cc. cube) #5
	(adding pred. from mixed_c to cc. cube) #1
	(adding pred. from inp_c to cc. cube) #5
	(abstract cube) 10	(10 + 0 + 0 + 0 + 0)
	(concrete cube) 10	(10 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #5
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #3
	(adding from pre_c to cc. cube) #5
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #3
	(abstract cube) 8	(8 + 0 + 0 + 0 + 0)
	(concrete cube) 8	(8 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 8 -> 2)
	(258 + 8 -> 258 + 2)
	(8 -> 2 -> 2)
	(8 -> 2 -> 2)

		[MUS(s)]:

		[1] w8	((\locked_1 != 8'd0) && (\transfer_2 != 8'd0))
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 10 -> 3)
	(219 + 10 -> 219 + 3)
	(10 -> 3 -> 2)
	(10 -> 3 -> 2)

		[MUS(s)]:

		[1] w8	((\locked_1 != 8'd0) && \held_2)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #6
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #7
	(adding from pre_c to cc. cube) #6
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #7
	(abstract cube) 11	(11 + 0 + 0 + 0 + 0)
	(concrete cube) 11	(11 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #9
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #7
	(adding from pre_c to cc. cube) #9
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #7
	(abstract cube) 13	(13 + 0 + 0 + 0 + 0)
	(concrete cube) 13	(13 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 13 -> 2)
	(260 + 13 -> 260 + 2)
	(13 -> 2 -> 2)
	(13 -> 2 -> 2)

		[MUS(s)]:

		[1] w8	((\locked_1 != 8'd0) && (\transfer_0 != 8'd0))
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 11 -> 2)
	(221 + 11 -> 221 + 2)
	(11 -> 2 -> 2)
	(11 -> 2 -> 2)

		[MUS(s)]:

		[1] w8	((\locked_1 != 8'd0) && \held_0)
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 6 -> 3)
	(129 + 6 -> 129 + 3)
	(6 -> 3 -> 2)
	(6 -> 3 -> 2)

		[MUS(s)]:

		[1] w8	((\locked_1 == \transfer_3) && (\transfer_3 != 8'd0))
[RES_1]       47	: 4	: 0 12 27 45 11 s: 95
[RES_0]    L  4 : 0 14 55 99 19 s: 187, mem: 22, time: 0.681999
---------------------------------------------------------------------------------------------
Loop_4_4_47
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[4] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #3
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(6 + 0 + 0 + 0 + 0)
	(concrete cube) 6	(6 + 0 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #5
	(adding required pred. from mixed_c to ab. cube) #1
	(adding required pred. from inp_c to ab. cube) #7
	(adding from pre_c to cc. cube) #5
	(adding pred. from mixed_c to cc. cube) #1
	(adding pred. from inp_c to cc. cube) #7
	(abstract cube) 10	(10 + 0 + 0 + 0 + 0)
	(concrete cube) 10	(10 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #7
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #3
	(adding from pre_c to cc. cube) #7
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #3
	(abstract cube) 10	(10 + 0 + 0 + 0 + 0)
	(concrete cube) 10	(10 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 10 -> 2)
	(263 + 10 -> 263 + 2)
	(10 -> 2 -> 2)
	(10 -> 2 -> 2)

		[MUS(s)]:

		[1] w8	((\locked_2 != 8'd0) && (\transfer_0 != 8'd0))
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 10 -> 2)
	(224 + 10 -> 224 + 2)
	(10 -> 2 -> 2)
	(10 -> 2 -> 2)

		[MUS(s)]:

		[1] w8	((\locked_2 != 8'd0) && \held_0)
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 6 -> 3)
	(132 + 6 -> 132 + 3)
	(6 -> 3 -> 3)
		(added cond. from num.)	(\ep_3$next != \transfer_3$next)
	(6 -> 3 -> 4 -> 3)

		[MUS(s)]:

		[1] w8	((\ep_3 == 8'd0) && (\locked_2 == \transfer_3) && (\ep_3 != \transfer_3))
[RES_1]       47	: 4	: 0 12 28 46 12 s: 98
[RES_0]    L  4 : 0 14 57 101 22 s: 194, mem: 22, time: 0.689126
---------------------------------------------------------------------------------------------
Loop_4_5_47
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[4] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 7	(7 + 0 + 0 + 0 + 0)
	(concrete cube) 7	(7 + 0 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #6
	(adding required pred. from mixed_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #4
	(adding from pre_c to cc. cube) #6
	(adding pred. from mixed_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #4
	(abstract cube) 12	(12 + 0 + 0 + 0 + 0)
	(concrete cube) 12	(12 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #7
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #6
	(adding from pre_c to cc. cube) #7
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #6
	(abstract cube) 11	(11 + 0 + 0 + 0 + 0)
	(concrete cube) 11	(11 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 11 -> 2)
	(266 + 11 -> 266 + 2)
	(11 -> 2 -> 2)
	(11 -> 2 -> 2)

		[MUS(s)]:

		[1] w8	((\locked_2 != 8'd0) && (\transfer_3 != 8'd0))
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 12 -> 4)
	(227 + 12 -> 227 + 4)
	(12 -> 4 -> 2)
	(12 -> 4 -> 2)

		[MUS(s)]:

		[1] w8	(\held_3 && (\ep_2 != 8'd0))
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 7 -> 3)
	(134 + 7 -> 134 + 3)
	(7 -> 3 -> 2)
	(7 -> 3 -> 2)

		[MUS(s)]:

		[1] w8	((\locked_2 == \transfer_3) && (\transfer_3 != 8'd0))
[RES_1]       47	: 4	: 0 12 29 46 13 s: 100
[RES_0]    L  4 : 0 14 59 101 24 s: 198, mem: 22, time: 0.695197
---------------------------------------------------------------------------------------------
Loop_4_6_47
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[4] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 7	(7 + 0 + 0 + 0 + 0)
	(concrete cube) 7	(7 + 0 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #5
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #6
	(adding from pre_c to cc. cube) #5
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #6
	(abstract cube) 10	(10 + 0 + 0 + 0 + 0)
	(concrete cube) 10	(10 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #5
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #5
	(adding from pre_c to cc. cube) #5
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #5
	(abstract cube) 10	(10 + 0 + 0 + 0 + 0)
	(concrete cube) 10	(10 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 10 -> 2)
	(269 + 10 -> 269 + 2)
	(10 -> 2 -> 2)
	(10 -> 2 -> 2)

		[MUS(s)]:

		[1] w8	((\locked_3 != 8'd0) && (\transfer_1 != 8'd0))
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 10 -> 2)
	(230 + 10 -> 230 + 2)
	(10 -> 2 -> 2)
	(10 -> 2 -> 2)

		[MUS(s)]:

		[1] w8	((\locked_3 != 8'd0) && \held_1)
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 7 -> 3)
	(139 + 7 -> 139 + 3)
	(7 -> 3 -> 3)
	(7 -> 3 -> 3)

		[MUS(s)]:

		[1] w8	((\locked_3 == \transfer_1) && (\ep_1 != 8'd0) && (\transfer_1 != 8'd0))
[RES_1]       47	: 4	: 0 12 29 47 14 s: 102
[RES_0]    L  4 : 0 14 59 103 27 s: 203, mem: 22, time: 0.700855
---------------------------------------------------------------------------------------------
Loop_4_7_47
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[4] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #3
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(6 + 0 + 0 + 0 + 0)
	(concrete cube) 6	(6 + 0 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #7
	(adding required pred. from mixed_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #5
	(adding from pre_c to cc. cube) #7
	(adding pred. from mixed_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #5
	(abstract cube) 13	(13 + 0 + 0 + 0 + 0)
	(concrete cube) 13	(13 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #8
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #7
	(adding from pre_c to cc. cube) #8
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #7
	(abstract cube) 12	(12 + 0 + 0 + 0 + 0)
	(concrete cube) 12	(12 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: UNSAT
		(ab core: 12 -> 2)
	(272 + 12 -> 272 + 2)
	(12 -> 2 -> 2)
	(12 -> 2 -> 2)

		[MUS(s)]:

		[1] w8	((\locked_3 != 8'd0) && (\transfer_2 != 8'd0))
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 13 -> 2)
	(233 + 13 -> 233 + 2)
	(13 -> 2 -> 2)
	(13 -> 2 -> 2)

		[MUS(s)]:

		[1] w8	((\locked_3 != 8'd0) && (\ep_2 != 8'd0))
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 6 -> 3)
	(141 + 6 -> 141 + 3)
	(6 -> 3 -> 2)
	(6 -> 3 -> 2)

		[MUS(s)]:

		[1] w8	((\locked_3 == \transfer_1) && (\transfer_1 != 8'd0))
[RES_1]       47	: 4	: 0 12 30 47 14 s: 103
[RES_0]    L  4 : 0 14 61 103 26 s: 204, mem: 22, time: 0.707199
---------------------------------------------------------------------------------------------
Loop_4_8_47
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[4] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #3
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(6 + 0 + 0 + 0 + 0)
	(concrete cube) 6	(6 + 0 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 6 -> 2)
	(142 + 6 -> 142 + 2)
	(6 -> 2 -> 2)
	(6 -> 2 -> 2)

		[MUS(s)]:

		[1] w8	((\locked_2 == \transfer_1) && (\transfer_1 != 8'd0))
[RES_1]       47	: 4	: 0 12 30 46 15 s: 103
[RES_0]    L  4 : 0 14 61 101 28 s: 204, mem: 22, time: 0.709399
---------------------------------------------------------------------------------------------
Loop_4_9_47
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[4] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #3
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #3
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 6	(6 + 0 + 0 + 0 + 0)
	(concrete cube) 6	(6 + 0 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #6
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #6
	(adding from pre_c to cc. cube) #6
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #6
	(abstract cube) 10	(10 + 0 + 0 + 0 + 0)
	(concrete cube) 10	(10 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 10 -> 5)
	(236 + 10 -> 236 + 5)
	(10 -> 5 -> 3)
	(10 -> 5 -> 3)

		[MUS(s)]:

		[1] w8	((\transfer_1 == \transfer_0) && (\ep_0 != \transfer_0) && (\transfer_0 != 8'd0))
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 6 -> 3)
	(144 + 6 -> 144 + 3)
	(6 -> 3 -> 2)
	(6 -> 3 -> 2)

		[MUS(s)]:

		[1] w8	((\locked_0 == \transfer_1) && (\transfer_1 != 8'd0))
[RES_1]       47	: 4	: 0 12 30 46 16 s: 104
[RES_0]    L  4 : 0 14 61 102 30 s: 207, mem: 22, time: 0.71677
---------------------------------------------------------------------------------------------
Loop_4_10_47
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[4] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 7	(7 + 0 + 0 + 0 + 0)
	(concrete cube) 7	(7 + 0 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 7 -> 3)
	(147 + 7 -> 147 + 3)
	(7 -> 3 -> 3)
	(7 -> 3 -> 3)

		[MUS(s)]:

		[1] w8	((\ep_0 != \transfer_0) && (\locked_1 == \transfer_0) && (\transfer_0 != 8'd0))
[RES_1]       47	: 4	: 0 12 30 46 17 s: 105
[RES_0]    L  4 : 0 14 61 102 33 s: 210, mem: 22, time: 0.720489
---------------------------------------------------------------------------------------------
Loop_4_11_47
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[4] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 7	(7 + 0 + 0 + 0 + 0)
	(concrete cube) 7	(7 + 0 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 7 -> 3)
	(148 + 7 -> 148 + 3)
	(7 -> 3 -> 3)
	(7 -> 3 -> 3)

		[MUS(s)]:

		[1] w8	((\locked_3 == \transfer_0) && (\ep_0 != \transfer_0) && (\transfer_0 != 8'd0))
[RES_1]       47	: 4	: 0 12 30 46 18 s: 106
[RES_0]    L  4 : 0 14 61 102 36 s: 213, mem: 22, time: 0.723113
---------------------------------------------------------------------------------------------
Loop_4_12_47
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[4] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 7	(7 + 0 + 0 + 0 + 0)
	(concrete cube) 7	(7 + 0 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #8
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #6
	(adding from pre_c to cc. cube) #8
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #6
	(abstract cube) 12	(12 + 0 + 0 + 0 + 0)
	(concrete cube) 12	(12 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 12 -> 5)
	(240 + 12 -> 240 + 5)
	(12 -> 5 -> 3)
	(12 -> 5 -> 3)

		[MUS(s)]:

		[1] w8	((\transfer_2 == \transfer_0) && (\ep_2 != 8'd0) && (\transfer_0 != 8'd0))
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #6
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #6
	(adding from pre_c to cc. cube) #6
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #6
	(abstract cube) 10	(10 + 0 + 0 + 0 + 0)
	(concrete cube) 10	(10 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 10 -> 4)
	(241 + 10 -> 241 + 4)
	(10 -> 4 -> 3)
	(10 -> 4 -> 3)

		[MUS(s)]:

		[1] w8	((\transfer_2 == \transfer_0) && (\ep_0 != \transfer_0) && (\transfer_0 != 8'd0))
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 7 -> 3)
	(151 + 7 -> 151 + 3)
	(7 -> 3 -> 3)
	(7 -> 3 -> 3)

		[MUS(s)]:

		[1] w8	((\locked_2 == \transfer_0) && (\ep_0 != \transfer_0) && (\transfer_0 != 8'd0))
[RES_1]       47	: 4	: 0 12 30 48 19 s: 109
[RES_0]    L  4 : 0 14 61 108 39 s: 222, mem: 22, time: 0.732812
---------------------------------------------------------------------------------------------
Loop_4_13_47
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[4] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 7	(7 + 0 + 0 + 0 + 0)
	(concrete cube) 7	(7 + 0 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 7 -> 3)
	(154 + 7 -> 154 + 3)
	(7 -> 3 -> 2)
	(7 -> 3 -> 2)

		[MUS(s)]:

		[1] w8	((\locked_1 == \transfer_2) && (\transfer_2 != 8'd0))
[RES_1]       47	: 4	: 0 12 30 47 20 s: 109
[RES_0]    L  4 : 0 14 61 106 41 s: 222, mem: 22, time: 0.735584
---------------------------------------------------------------------------------------------
Loop_4_14_47
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[4] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 7	(7 + 0 + 0 + 0 + 0)
	(concrete cube) 7	(7 + 0 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 7 -> 3)
	(155 + 7 -> 155 + 3)
	(7 -> 3 -> 2)
	(7 -> 3 -> 2)

		[MUS(s)]:

		[1] w8	((\locked_0 == \transfer_2) && (\transfer_2 != 8'd0))
[RES_1]       47	: 4	: 0 12 30 46 21 s: 109
[RES_0]    L  4 : 0 14 61 104 43 s: 222, mem: 22, time: 0.738119
---------------------------------------------------------------------------------------------
Loop_4_15_47
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[4] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 7	(7 + 0 + 0 + 0 + 0)
	(concrete cube) 7	(7 + 0 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 7 -> 3)
	(156 + 7 -> 156 + 3)
	(7 -> 3 -> 2)
	(7 -> 3 -> 2)

		[MUS(s)]:

		[1] w8	((\locked_3 == \transfer_2) && (\transfer_2 != 8'd0))
[RES_1]       47	: 4	: 0 12 30 45 22 s: 109
[RES_0]    L  4 : 0 14 61 102 45 s: 222, mem: 22, time: 0.740689
---------------------------------------------------------------------------------------------
Loop_4_16_47
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[4] & T & !P+ ]: UNSAT
[RES_1]       47	: 4	: 0 12 30 45 22 s: 109
[RES_0]    L  4 : 0 14 61 102 45 s: 222, mem: 22, time: 0.741283
	[Forward propagation]:
[RES_1]       47	: 5	: 0 12 21 41 25 9 s: 108
[RES_0]    L  5 : 0 14 43 85 62 15 s: 219, mem: 22, time: 0.775093
---------------------------------------------------------------------------------------------
Loop_5_0_47
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[5] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 7	(7 + 0 + 0 + 0 + 0)
	(concrete cube) 7	(7 + 0 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #6
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #7
	(adding from pre_c to cc. cube) #6
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #7
	(abstract cube) 11	(11 + 0 + 0 + 0 + 0)
	(concrete cube) 11	(11 + 0 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #8
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #6
	(adding from pre_c to cc. cube) #8
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #6
	(abstract cube) 12	(12 + 0 + 0 + 0 + 0)
	(concrete cube) 12	(12 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #7
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #9
	(adding from pre_c to cc. cube) #7
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #9
	(abstract cube) 12	(12 + 0 + 0 + 0 + 0)
	(concrete cube) 12	(12 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #7
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #8
	(adding from pre_c to cc. cube) #7
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #8
	(abstract cube) 12	(12 + 0 + 0 + 0 + 0)
	(concrete cube) 12	(12 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #5
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #9
	(adding from pre_c to cc. cube) #5
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #9
	(abstract cube) 10	(10 + 0 + 0 + 0 + 0)
	(concrete cube) 10	(10 + 0 + 0 + 0)
		(Next: ((\held_0$next == \held_0$next_rhs) && (\held_2$next == \held_2$next_rhs) && (\ep_0$next == \ep_0$next_rhs) && (\ep_3$next == \ep_3$next_rhs) && (\transfer_0$next == \transfer_0$next_rhs) && (\transfer_3$next == \transfer_3$next_rhs)))

	[Concrete check]:

[ ACEXT ]: (Length: 6)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 14)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 21)
		(cc core: 21 -> 10)
UNSAT

		[MUS(s)]:
		[1] ((\locked_0$next == \transfer_3$next) && !(LE_1_8_8(\grantE, \ep_0)) && (\ep_0 == \locked_0) && (\transfer_3 != \acceptE) && (\grantN1 == 2'd0) && (\locked_0$next == \locked_0$next_rhs) && \held_0 && (\acceptN == 2'd3) && (\grantN2 == 2'd3) && (\transfer_3$next == \transfer_3$next_rhs))

	[Lemmas]: 
		[1] !(((\locked_0$next == \transfer_3$next) && !(LE_1_8_8(\grantE, \ep_0)) && (\ep_0 == \locked_0) && (\transfer_3 != \acceptE) && (\grantN1 == 2'd0) && (\locked_0$next == \locked_0$next_rhs) && \held_0 && (\acceptN == 2'd3) && (\grantN2 == 2'd3) && (\transfer_3$next == \transfer_3$next_rhs)))
#2505
#Lemmas = 48
[RES_1]       48	: 5	: 0 12 21 41 25 9 s: 108
[RES_0]    L  5 : 0 14 43 85 62 15 s: 219, mem: 22, time: 0.791272
---------------------------------------------------------------------------------------------
Loop_5_0_48
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[5] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #4
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #4
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 7	(7 + 0 + 0 + 0 + 0)
	(concrete cube) 7	(7 + 0 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #6
	(adding required pred. from mixed_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #4
	(adding from pre_c to cc. cube) #6
	(adding pred. from mixed_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #4
	(abstract cube) 12	(12 + 0 + 0 + 0 + 0)
	(concrete cube) 12	(12 + 0 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #7
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #6
	(adding from pre_c to cc. cube) #7
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #6
	(abstract cube) 11	(11 + 0 + 0 + 0 + 0)
	(concrete cube) 11	(11 + 0 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #6
	(adding required pred. from mixed_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #9
	(adding from pre_c to cc. cube) #6
	(adding pred. from mixed_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #9
	(abstract cube) 13	(13 + 0 + 0 + 0 + 0)
	(concrete cube) 13	(13 + 0 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #6
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #7
	(adding from pre_c to cc. cube) #6
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #7
	(abstract cube) 11	(11 + 0 + 0 + 0 + 0)
	(concrete cube) 11	(11 + 0 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #6
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #9
	(adding from pre_c to cc. cube) #6
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #9
	(abstract cube) 11	(11 + 0 + 0 + 0 + 0)
	(concrete cube) 11	(11 + 0 + 0 + 0)
		(Next: ((\held_1$next == \held_1$next_rhs) && (\held_2$next == \held_2$next_rhs) && (\ep_0$next == \ep_0$next_rhs) && (\ep_3$next == \ep_3$next_rhs) && (\transfer_0$next == \transfer_0$next_rhs)))

	[Concrete check]:

[ ACEXT ]: (Length: 6)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 14)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 22)
		SAT_c ? [ A[2] & T[2] & A[1]+ ]: 		(bv input core size: 28)
		SAT_c ? [ A[3] & T[3] & A[2]+ ]: 		(bv input core size: 30)
		SAT_c ? [ A[4] & T[4] & A[3]+ ]: 		(bv input core size: 30)
		SAT_c ? [ A[5] & T[5] & A[4]+ ]: 		(bv input core size: 27)

	[Simulation check]: 
[Sim_1]    =========== Simulation Begins ===============
	1: A[5]

	2: A[4]

	3: A[3]

	4: A[2]

	5: A[1]
[1] Cube to CubeNext+ is UNSAT

		(cc core: 95 -> 15)
resMusBv: 1
		ACEXT is infeasible
			(unsat: A[1] to A[0] )
[Sim_1]    Adding lemma to ensure following never happens: 
	(\ep_3 == bv8_8'd*_16)
	(bv8_8'd*_13 == bv8_8'd*_16)
	!(LE_1_8_8(bv8_8'd*_13, bv8_8'd*_6))
	(\locked_0$next == \transfer_3$next)
	(\transfer_3$next == \acceptE$next)
	(\transfer_0 == 8'd0)
	(\locked_0 == bv8_8'd*_6)
	!(LE_1_8_8(\acceptE$next, \ep_3$next))
	(\ep_3$next == \ep_3$next_rhs)
	(\transfer_3$next == \transfer_3$next_rhs)
	(\locked_0$next == \locked_0$next_rhs)

[Sim_1]    Processing failure condition: 
	(\ep_3 == bv8_8'd*_16)
	(bv8_8'd*_13 == bv8_8'd*_16)
	!(LE_1_8_8(bv8_8'd*_13, bv8_8'd*_6))
	(\locked_0$next == \transfer_3$next)
	(\transfer_3$next == \acceptE$next)
	(\transfer_0 == 8'd0)
	(\locked_0 == bv8_8'd*_6)
	!(LE_1_8_8(\acceptE$next, \ep_3$next))
	(\ep_3$next == \ep_3$next_rhs)
	(\transfer_3$next == \transfer_3$next_rhs)
	(\locked_0$next == \locked_0$next_rhs)

			(skipping predicate (present)  (\transfer_0 == 8'd0) )
			(adding predicate (absent)   (\ep_3 == \locked_3) )
						(learning signal    \ep_3 )
						(learning signal    \locked_3 )
			(adding predicate (absent)   (\ep_3 == \transfer_3) )
						(learning signal    \transfer_3 )
			(adding predicate (absent)   (\locked_3 == \transfer_3) )
			(trying instantiating symbolic expression)	(\ep_3 == bv8_8'd*_16)
				(instantiating symbolic value)	bv8_8'd*_16	:=	8'd127
			(symbolic expression instance)
				(\ep_3 == bv8_8'd*_16) := (\ep_3 == 8'd127)
			(adding predicate (absent)   (\ep_3 == 8'd127) )
			(finding parent expressions)	(\ep_3 == bv8_8'd*_16)
				(symbolic value parent)	bv8_8'd*_16	:=	\acceptE
				(parent expression: main)
					(\ep_3 == bv8_8'd*_16) := (\ep_3 == \acceptE)
				(adding predicate (from parent main)   (\ep_3 == \acceptE) )
						(learning signal    \acceptE )
			(trying instantiating symbolic expression)	(bv8_8'd*_13 == bv8_8'd*_16)
				(instantiating symbolic value)	bv8_8'd*_13	:=	8'd127
				(instantiating symbolic value)	bv8_8'd*_16	:=	8'd127
			(symbolic expression instance)
				(bv8_8'd*_13 == bv8_8'd*_16) := (8'd127 == 8'd127)
			(creating wire l$1 for port LE_1_8_8(\ep_3, \locked_0))
			(adding predicate (absent)   l$1 )
						(learning signal    \locked_0 )
						(learning uf type   LE_1_8_8 )
						(learning uf        LE_1_8_8(\ep_3, \locked_0) )
			(trying instantiating symbolic expression)	(\locked_0 == bv8_8'd*_6)
				(instantiating symbolic value)	bv8_8'd*_6	:=	8'd126
			(symbolic expression instance)
				(\locked_0 == bv8_8'd*_6) := (\locked_0 == 8'd126)
			(adding predicate (absent)   (\locked_0 == 8'd126) )
			(finding parent expressions)	(\locked_0 == bv8_8'd*_6)
				(symbolic value parent) @2	bv8_8'd*_6	:=	\locked_0
				(parent expression) @2
					(\locked_0 == bv8_8'd*_6) := (\locked_0 == \locked_0)
				(symbolic value parent) @3	bv8_8'd*_6	:=	\locked_0
				(parent expression) @3
					(\locked_0 == bv8_8'd*_6) := (\locked_0 == \locked_0)
				(symbolic value parent)	bv8_8'd*_6	:=	\acceptE
				(parent expression: main)
					(\locked_0 == bv8_8'd*_6) := (\locked_0 == \acceptE)
				(adding predicate (from parent main)   (\locked_0 == \acceptE) )
[Sim_1]    =========== Simulation Ends ===============

	[Lemmas]: 
		[1] !((((\locked_0 == \acceptE) || (\locked_0 != \acceptE)) && (\locked_0 == \acceptE) && ((\locked_0 == 8'd126) || (\locked_0 != 8'd126)) && (\locked_0 == 8'd126) && (l$1 || !(l$1)) && !(l$1) && ((\ep_3 == \acceptE) || (\ep_3 != \acceptE)) && (\ep_3 == \acceptE) && ((\ep_3 == 8'd127) || (\ep_3 != 8'd127)) && (\ep_3 == 8'd127) && ((\locked_3 == \transfer_3) || (\locked_3 != \transfer_3)) && (\locked_3 == \transfer_3) && ((\ep_3 == \transfer_3) || (\ep_3 != \transfer_3)) && (\ep_3 == \transfer_3) && ((\ep_3 == \locked_3) || (\ep_3 != \locked_3)) && (\ep_3 == \locked_3) && (\transfer_0 == 8'd0) && (\locked_0$next == \transfer_3$next) && (\transfer_3$next == \acceptE$next) && !(LE_1_8_8(\acceptE$next, \ep_3$next)) && (\ep_3$next == \ep_3$next_rhs) && (\transfer_3$next == \transfer_3$next_rhs) && (\locked_0$next == \locked_0$next_rhs)))
#2755
		(redundant lemma)
#Lemmas = 49
[RES_1]       49	: 5	: 0 12 21 41 25 9 s: 108
[RES_0]    L  5 : 0 14 43 85 62 15 s: 219, mem: 24, time: 0.839238
---------------------------------------------------------------------------------------------
Loop_5_0_49
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[5] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #5
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #5
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 14	(8 + 6 + 0 + 0 + 0)
	(concrete cube) 14	(8 + 6 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #12
	(adding required pred. from mixed_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #4
	(adding from pre_c to cc. cube) #12
	(adding pred. from mixed_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #4
	(abstract cube) 24	(18 + 6 + 0 + 0 + 0)
	(concrete cube) 24	(18 + 6 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #12
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #7
	(adding from pre_c to cc. cube) #12
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #7
	(abstract cube) 24	(17 + 7 + 0 + 0 + 0)
	(concrete cube) 24	(17 + 7 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #10
	(adding required pred. from mixed_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #9
	(adding from pre_c to cc. cube) #10
	(adding pred. from mixed_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #9
	(abstract cube) 23	(17 + 6 + 0 + 0 + 0)
	(concrete cube) 23	(17 + 6 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #13
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #8
	(adding from pre_c to cc. cube) #13
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #8
	(abstract cube) 24	(18 + 6 + 0 + 0 + 0)
	(concrete cube) 24	(18 + 6 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #11
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #10
	(adding from pre_c to cc. cube) #11
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #10
	(abstract cube) 22	(16 + 6 + 0 + 0 + 0)
	(concrete cube) 22	(16 + 6 + 0 + 0)
		(Next: ((\held_1$next == \held_1$next_rhs) && (\held_2$next == \held_2$next_rhs) && (\ep_0$next == \ep_0$next_rhs) && (\ep_3$next == \ep_3$next_rhs) && (\transfer_0$next == \transfer_0$next_rhs) && (\transfer_3$next == \transfer_3$next_rhs) && (\locked_0$next == \locked_0$next_rhs) && (\locked_3$next == \locked_3$next_rhs)))

	[Concrete check]:

[ ACEXT ]: (Length: 6)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 21)
		(cc core: 21 -> 3)
UNSAT

		[MUS(s)]:
		[1] (!(l$1) && (\locked_0 == \acceptE) && !(LE_1_8_8(\acceptE, \ep_3)))

	[Lemmas]: 
		[1] !((!(l$1) && (\locked_0 == \acceptE) && !(LE_1_8_8(\acceptE, \ep_3))))
#2811
#Lemmas = 50
[RES_1]       50	: 5	: 0 12 21 41 25 9 s: 108
[RES_0]    L  5 : 0 14 43 85 62 15 s: 219, mem: 24, time: 0.852514
---------------------------------------------------------------------------------------------
Loop_5_0_50
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[5] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #5
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #5
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 14	(8 + 6 + 0 + 0 + 0)
	(concrete cube) 14	(8 + 6 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #12
	(adding required pred. from mixed_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #4
	(adding from pre_c to cc. cube) #12
	(adding pred. from mixed_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #4
	(abstract cube) 24	(18 + 6 + 0 + 0 + 0)
	(concrete cube) 24	(18 + 6 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #12
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #7
	(adding from pre_c to cc. cube) #12
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #7
	(abstract cube) 24	(17 + 7 + 0 + 0 + 0)
	(concrete cube) 24	(17 + 7 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #10
	(adding required pred. from mixed_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #9
	(adding from pre_c to cc. cube) #10
	(adding pred. from mixed_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #9
	(abstract cube) 23	(17 + 6 + 0 + 0 + 0)
	(concrete cube) 23	(17 + 6 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #13
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #8
	(adding from pre_c to cc. cube) #13
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #8
	(abstract cube) 24	(18 + 6 + 0 + 0 + 0)
	(concrete cube) 24	(18 + 6 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #11
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #10
	(adding from pre_c to cc. cube) #11
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #10
	(abstract cube) 22	(16 + 6 + 0 + 0 + 0)
	(concrete cube) 22	(16 + 6 + 0 + 0)
		(Next: ((\held_1$next == \held_1$next_rhs) && (\held_2$next == \held_2$next_rhs) && (\ep_0$next == \ep_0$next_rhs) && (\ep_3$next == \ep_3$next_rhs) && (\transfer_0$next == \transfer_0$next_rhs) && (\transfer_3$next == \transfer_3$next_rhs) && (\locked_0$next == \locked_0$next_rhs) && (\locked_3$next == \locked_3$next_rhs)))

	[Concrete check]:

[ ACEXT ]: (Length: 6)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 21)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 42)
		SAT_c ? [ A[2] & T[2] & A[1]+ ]: 		(bv input core size: 55)
		SAT_c ? [ A[3] & T[3] & A[2]+ ]: 		(bv input core size: 54)
		SAT_c ? [ A[4] & T[4] & A[3]+ ]: 		(bv input core size: 55)
		(cc core: 55 -> 2)
UNSAT

		[MUS(s)]:
		[1] (!(l$1) && (\ep_3 == 8'd0))

	[Lemmas]: 
		[1] !((!(l$1) && (\ep_3 == 8'd0)))
#2830
		[2] !((!(l$1$next) && (\ep_3$next == 8'd0)))
#2832
#Lemmas = 52
[RES_1]       52	: 5	: 0 12 21 41 25 9 s: 108
[RES_0]    L  5 : 0 14 43 85 62 15 s: 219, mem: 24, time: 0.872594
---------------------------------------------------------------------------------------------
Loop_5_0_51
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[5] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #5
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #5
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 14	(8 + 6 + 0 + 0 + 0)
	(concrete cube) 14	(8 + 6 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #12
	(adding required pred. from mixed_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #4
	(adding from pre_c to cc. cube) #12
	(adding pred. from mixed_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #4
	(abstract cube) 24	(18 + 6 + 0 + 0 + 0)
	(concrete cube) 24	(18 + 6 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #12
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #7
	(adding from pre_c to cc. cube) #12
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #7
	(abstract cube) 24	(17 + 7 + 0 + 0 + 0)
	(concrete cube) 24	(17 + 7 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #10
	(adding required pred. from mixed_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #9
	(adding from pre_c to cc. cube) #10
	(adding pred. from mixed_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #9
	(abstract cube) 23	(17 + 6 + 0 + 0 + 0)
	(concrete cube) 23	(17 + 6 + 0 + 0)
	SAT_a ? [ F[1] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #13
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #8
	(adding from pre_c to cc. cube) #13
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #8
	(abstract cube) 24	(18 + 6 + 0 + 0 + 0)
	(concrete cube) 24	(18 + 6 + 0 + 0)
	SAT_a ? [ F[0] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #11
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #10
	(adding from pre_c to cc. cube) #11
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #10
	(abstract cube) 22	(16 + 6 + 0 + 0 + 0)
	(concrete cube) 22	(16 + 6 + 0 + 0)
		(Next: ((\held_1$next == \held_1$next_rhs) && (\held_2$next == \held_2$next_rhs) && (\ep_0$next == \ep_0$next_rhs) && (\ep_3$next == \ep_3$next_rhs) && (\transfer_0$next == \transfer_0$next_rhs) && (\transfer_3$next == \transfer_3$next_rhs) && (\locked_0$next == \locked_0$next_rhs) && (\locked_3$next == \locked_3$next_rhs)))

	[Concrete check]:

[ ACEXT ]: (Length: 6)
[Concrete check]:
		SAT_c ? [ A[0] & T[0] & A[End]+ ]: 		(bv input core size: 21)
		SAT_c ? [ A[1] & T[1] & A[0]+ ]: 		(bv input core size: 42)
		SAT_c ? [ A[2] & T[2] & A[1]+ ]: 		(bv input core size: 55)
		SAT_c ? [ A[3] & T[3] & A[2]+ ]: 		(bv input core size: 54)
		SAT_c ? [ A[4] & T[4] & A[3]+ ]: 		(bv input core size: 55)
		SAT_c ? [ A[5] & T[5] & A[4]+ ]: 		(bv input core size: 54)

	[Simulation check]: 
[Sim_1]    =========== Simulation Begins ===============
	1: A[5]

	2: A[4]

	3: A[3]

	4: A[2]
[2] Cube to CubeNext+ is UNSAT

		(cc core: 113 -> 14)
resMusBv: 1
		ACEXT is infeasible
			(unsat: A[2] to A[1] )
[Sim_1]    Adding lemma to ensure following never happens: 
	(\locked_0 == bv8_8'd*_25)
	(\ep_3$next != \acceptE$next)
	(\ep_3 == 8'd0)
	l$1$next
	(\transfer_0$next == \acceptE$next)
	!(LE_1_8_8(bv8_8'd*_32, bv8_8'd*_25))
	(\transfer_0$next == 8'd0)
	(\transfer_3 == bv8_8'd*_32)
	(\ep_3$next == \ep_3$next_rhs)
	(\transfer_0$next == \transfer_0$next_rhs)
	(\locked_0$next == \locked_0$next_rhs)

[Sim_1]    Processing failure condition: 
	(\locked_0 == bv8_8'd*_25)
	(\ep_3$next != \acceptE$next)
	(\ep_3 == 8'd0)
	l$1$next
	(\transfer_0$next == \acceptE$next)
	!(LE_1_8_8(bv8_8'd*_32, bv8_8'd*_25))
	(\transfer_0$next == 8'd0)
	(\transfer_3 == bv8_8'd*_32)
	(\ep_3$next == \ep_3$next_rhs)
	(\transfer_0$next == \transfer_0$next_rhs)
	(\locked_0$next == \locked_0$next_rhs)

			(skipping predicate (present)  (\ep_3 == 8'd0) )
			(trying instantiating symbolic expression)	(\locked_0 == bv8_8'd*_25)
				(instantiating symbolic value)	bv8_8'd*_25	:=	8'd129
			(symbolic expression instance)
				(\locked_0 == bv8_8'd*_25) := (\locked_0 == 8'd129)
			(adding predicate (absent)   (\locked_0 == 8'd129) )
			(finding parent expressions)	(\locked_0 == bv8_8'd*_25)
				(symbolic value parent) @3	bv8_8'd*_25	:=	\locked_0
				(parent expression) @3
					(\locked_0 == bv8_8'd*_25) := (\locked_0 == \locked_0)
				(symbolic value parent)	bv8_8'd*_25	:=	\acceptE
				(parent expression: main)
					(\locked_0 == bv8_8'd*_25) := (\locked_0 == \acceptE)
			(creating wire l$2 for port LE_1_8_8(\transfer_3, \locked_0))
			(adding predicate (absent)   l$2 )
						(learning uf        LE_1_8_8(\transfer_3, \locked_0) )
			(trying instantiating symbolic expression)	(\transfer_3 == bv8_8'd*_32)
				(instantiating symbolic value)	bv8_8'd*_32	:=	8'd160
			(symbolic expression instance)
				(\transfer_3 == bv8_8'd*_32) := (\transfer_3 == 8'd160)
			(adding predicate (absent)   (\transfer_3 == 8'd160) )
			(finding parent expressions)	(\transfer_3 == bv8_8'd*_32)
				(symbolic value parent)	bv8_8'd*_32	:=	\grantE
				(parent expression: main)
					(\transfer_3 == bv8_8'd*_32) := (\transfer_3 == \grantE)
				(adding predicate (from parent main)   (\transfer_3 == \grantE) )
						(learning signal    \grantE )
[Sim_1]    =========== Simulation Ends ===============

	[Lemmas]: 
		[1] !((((\transfer_3 == \grantE) || (\transfer_3 != \grantE)) && (\transfer_3 == \grantE) && ((\transfer_3 == 8'd160) || (\transfer_3 != 8'd160)) && (\transfer_3 == 8'd160) && (l$2 || !(l$2)) && !(l$2) && (\locked_0 == \acceptE) && ((\locked_0 == 8'd129) || (\locked_0 != 8'd129)) && (\locked_0 == 8'd129) && (\ep_3 == 8'd0) && (\ep_3$next != \acceptE$next) && l$1$next && (\transfer_0$next == \acceptE$next) && (\transfer_0$next == 8'd0) && (\ep_3$next == \ep_3$next_rhs) && (\transfer_0$next == \transfer_0$next_rhs) && (\locked_0$next == \locked_0$next_rhs)))
#3008
		(redundant lemma)
#Lemmas = 53
[RES_1]       53	: 5	: 0 12 21 41 25 9 s: 108
[RES_0]    L  5 : 0 14 43 85 62 15 s: 219, mem: 26, time: 0.958467
---------------------------------------------------------------------------------------------
Loop_5_0_52
---------------------------------------------------------------------------------------------
	SAT_a ? [ F[5] & T & !P+ ]: SAT
	(adding pred. from next_c to next) #2
	(adding from pre_c to ab. cube) #5
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #2
	(adding from pre_c to cc. cube) #5
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #2
	(bad cube [in !P+]) sz: 4
	(abstract cube) 18	(8 + 10 + 0 + 0 + 0)
	(concrete cube) 18	(8 + 10 + 0 + 0)
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #16
	(adding required pred. from mixed_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #4
	(adding from pre_c to cc. cube) #16
	(adding pred. from mixed_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #4
	(abstract cube) 32	(22 + 10 + 0 + 0 + 0)
	(concrete cube) 32	(22 + 10 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #16
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #7
	(adding from pre_c to cc. cube) #16
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #7
	(abstract cube) 31	(21 + 10 + 0 + 0 + 0)
	(concrete cube) 31	(21 + 10 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 31 -> 6)
	(282 + 31 -> 282 + 6)
	(31 -> 6 -> 3)
	(31 -> 6 -> 3)

		[MUS(s)]:

		[1] w8	(l$2 && (\ep_0 == \locked_0) && (\transfer_3 != 8'd0))
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 32 -> 6)
	(196 + 32 -> 196 + 6)
	(32 -> 6 -> 4)
	(32 -> 6 -> 4)

		[MUS(s)]:

		[1] w8	(l$2 && (\ep_3 == \transfer_3) && (\ep_0 == \locked_0) && \held_3)
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #16
	(adding required pred. from mixed_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #4
	(adding from pre_c to cc. cube) #16
	(adding pred. from mixed_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #4
	(abstract cube) 32	(22 + 10 + 0 + 0 + 0)
	(concrete cube) 32	(22 + 10 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 32 -> 5)
	(197 + 32 -> 197 + 5)
	(32 -> 5 -> 3)
	(32 -> 5 -> 3)

		[MUS(s)]:

		[1] w8	(l$1 && (\ep_0 == \locked_0) && \held_3)
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #30
	(adding required pred. from mixed_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #5
	(adding from pre_c to cc. cube) #30
	(adding pred. from mixed_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #5
	(abstract cube) 45	(36 + 9 + 0 + 0 + 0)
	(concrete cube) 45	(36 + 9 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 45 -> 3)
	(199 + 45 -> 199 + 3)
	(45 -> 3 -> 3)
	(45 -> 3 -> 3)

		[MUS(s)]:

		[1] w8	((\ep_0 == \locked_0) && (\locked_3 != 8'd0) && (\ep_2 != 8'd0))
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #30
	(adding required pred. from mixed_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #6
	(adding from pre_c to cc. cube) #30
	(adding pred. from mixed_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #6
	(abstract cube) 45	(36 + 9 + 0 + 0 + 0)
	(concrete cube) 45	(36 + 9 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 45 -> 4)
	(201 + 45 -> 201 + 4)
	(45 -> 4 -> 3)
	(45 -> 4 -> 3)

		[MUS(s)]:

		[1] w8	((\ep_0 == \locked_0) && (\locked_3 != 8'd0) && (\ep_1 != 8'd0))
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #38
	(adding required pred. from mixed_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #6
	(adding from pre_c to cc. cube) #38
	(adding pred. from mixed_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #6
	(abstract cube) 51	(44 + 7 + 0 + 0 + 0)
	(concrete cube) 51	(44 + 7 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #39
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #7
	(adding from pre_c to cc. cube) #39
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #7
	(abstract cube) 49	(43 + 6 + 0 + 0 + 0)
	(concrete cube) 49	(43 + 6 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 49 -> 4)
	(287 + 49 -> 287 + 4)
	(49 -> 4 -> 3)
	(49 -> 4 -> 3)

		[MUS(s)]:

		[1] w8	((\transfer_1 != 8'd0) && (\transfer_0 != 8'd0) && (\transfer_3 != 8'd0))
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 51 -> 5)
	(203 + 51 -> 203 + 5)
	(51 -> 5 -> 3)
	(51 -> 5 -> 3)

		[MUS(s)]:

		[1] w8	(\held_1 && (\transfer_0 != 8'd0) && (\transfer_3 != 8'd0))
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #30
	(adding required pred. from mixed_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #6
	(adding from pre_c to cc. cube) #30
	(adding pred. from mixed_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #6
	(abstract cube) 44	(36 + 8 + 0 + 0 + 0)
	(concrete cube) 44	(36 + 8 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #31
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #7
	(adding from pre_c to cc. cube) #31
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #7
	(abstract cube) 42	(35 + 7 + 0 + 0 + 0)
	(concrete cube) 42	(35 + 7 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 42 -> 8)
	(289 + 42 -> 289 + 8)
	(42 -> 8 -> 3)
	(42 -> 8 -> 3)

		[MUS(s)]:

		[1] w8	((\ep_3 != 8'd0) && (\transfer_1 != 8'd0) && (\transfer_0 != 8'd0))
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 44 -> 5)
	(205 + 44 -> 205 + 5)
	(44 -> 5 -> 3)
	(44 -> 5 -> 3)

		[MUS(s)]:

		[1] w8	((\locked_3 != 8'd0) && \held_1 && (\transfer_0 != 8'd0))
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #30
	(adding required pred. from mixed_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #5
	(adding from pre_c to cc. cube) #30
	(adding pred. from mixed_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #5
	(abstract cube) 44	(36 + 8 + 0 + 0 + 0)
	(concrete cube) 44	(36 + 8 + 0 + 0)
	SAT_a ? [ F[3] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #31
	(adding required pred. from mixed_c to ab. cube) #2
	(adding required pred. from inp_c to ab. cube) #7
	(adding from pre_c to cc. cube) #31
	(adding pred. from mixed_c to cc. cube) #2
	(adding pred. from inp_c to cc. cube) #7
	(abstract cube) 42	(35 + 7 + 0 + 0 + 0)
	(concrete cube) 42	(35 + 7 + 0 + 0)
	SAT_a ? [ F[2] & T & C+ ]: UNSAT
		(ab core: 42 -> 3)
	(291 + 42 -> 291 + 3)
	(42 -> 3 -> 3)
	(42 -> 3 -> 3)

		[MUS(s)]:

		[1] w8	((\ep_3 != 8'd0) && (\transfer_2 != 8'd0) && (\transfer_0 != 8'd0))
	SAT_a ? [ F[3] & T & C+ ]: UNSAT
		(ab core: 44 -> 4)
	(207 + 44 -> 207 + 4)
	(44 -> 4 -> 3)
	(44 -> 4 -> 3)

		[MUS(s)]:

		[1] w8	((\locked_3 != 8'd0) && \held_2 && (\transfer_0 != 8'd0))
	SAT_a ? [ F[4] & T & C+ ]: SAT
	(adding from pre_c to ab. cube) #22
	(adding required pred. from mixed_c to ab. cube) #3
	(adding required pred. from inp_c to ab. cube) #4
	(adding from pre_c to cc. cube) #22
	(adding pred. from mixed_c to cc. cube) #3
	(adding pred. from inp_c to cc. cube) #4
	(abstract cube) 36	(28 + 8 + 0 + 0 + 0)
	(concrete cube) 36	(28 + 8 + 0 + 0)
signum: 24
[RES_0]    TIMEOUT
error: 0
[RES_1]       53	: 5	: 0 12 21 45 32 9 s: 119
[RES_0]    L  5 : 0 14 43 97 84 15 s: 253, mem: 26, time: 0.994496

-----------
Refinements
-----------
[1]	!(((\transfer_1 == 8'd0) && (\transfer_1 == \acceptE) && !(LE_1_8_8(\acceptE, \ep_1))))
[2]	!(((\ep_0$next == 8'd0) && !(LE_1_8_8(\acceptE, \ep_0)) && (\ep_0$next == \ep_0$next_rhs) && (\acceptN == 2'd0) && (\transfer_0 == \acceptE)))
[3]	!(((\transfer_3$next != 8'd0) && (\locked_0$next == \transfer_3$next) && (\acceptN == 2'd3) && (\transfer_3$next == \transfer_3$next_rhs) && (\ep_0 == \locked_0) && (\grantN1 == 2'd0) && (\locked_0$next == \locked_0$next_rhs) && (\transfer_3 == 8'd0)))
[4]	!((!(LE_1_8_8(\grantE, \ep_0)) && \held_0 && (\grantN2 == 2'd3) && (\transfer_3$next == \transfer_3$next_rhs) && (\acceptN != 2'd0) && (\locked_0$next == \transfer_3$next) && (\grantN1 == 2'd0) && (\ep_0 == \locked_0) && (\locked_0$next == \locked_0$next_rhs) && (\acceptN != 2'd3)))
[5]	!((!(LE_1_8_8(\acceptE, \ep_0)) && (\ep_0 == \transfer_0) && (\transfer_0 == \acceptE)))
[6]	!(((\ep_0 == \locked_0) && !(LE_1_8_8(\grantE, \ep_0)) && (\grantN2 == 2'd3) && (\locked_0$next == \locked_0$next_rhs) && (\acceptN == 2'd0) && (\transfer_0 != \acceptE) && (\locked_0$next == \transfer_3$next) && (\transfer_3$next == \transfer_3$next_rhs) && (\grantN1 == 2'd0) && \held_0))
[7]	!(((\ep_0 == \locked_0) && (\grantN1 == 2'd0) && !(LE_1_8_8(\grantE, \ep_0)) && (\grantN2 == 2'd3) && \held_0 && (\acceptN == 2'd0) && (\locked_0$next == \transfer_3$next) && (\locked_0$next == \locked_0$next_rhs) && LE_1_8_8(\acceptE, \ep_0) && (\transfer_3$next == \transfer_3$next_rhs)))
[8]	!(((\grantN1 != 2'd3) && (\grantN1 != 2'd1) && (\grantN1 != 2'd0) && (\grantN1 != 2'd2)))
[9]	!(((\transfer_3 == 8'd0) && (\transfer_3 == \acceptE) && !(LE_1_8_8(\acceptE, \ep_3))))
[10]	!((!(LE_1_8_8(\acceptE, \ep_2)) && (\transfer_2 == \acceptE) && (\transfer_2 == 8'd0)))
[11]	!(((\locked_1$next == \transfer_3$next) && (\transfer_1 != \acceptE) && (\transfer_3$next == \transfer_3$next_rhs) && \held_1 && (\acceptN == 2'd1) && (\locked_1$next == \locked_1$next_rhs) && (\grantN2 == 2'd3) && !(LE_1_8_8(\grantE, \ep_1)) && (\grantN1 == 2'd1) && (\ep_1 == \locked_1)))
[12]	!(((\transfer_3$next == \transfer_3$next_rhs) && (\grantN2 == 2'd3) && (\locked_1$next == \locked_1$next_rhs) && (\acceptN == 2'd1) && (\ep_1 == \locked_1) && (\locked_1$next == \transfer_3$next) && LE_1_8_8(\acceptE, \ep_1) && (\grantN1 == 2'd1) && \held_1 && !(LE_1_8_8(\grantE, \ep_1))))
[13]	!(((\ep_1 == \transfer_1) && !(LE_1_8_8(\acceptE, \ep_1)) && (\transfer_1 == \acceptE)))
[14]	!(((\transfer_3$next == \transfer_3$next_rhs) && (\locked_1$next == \locked_1$next_rhs) && (\locked_1$next == \transfer_3$next) && (\acceptN != 2'd3) && !(LE_1_8_8(\grantE, \ep_1)) && (\grantN1 == 2'd1) && (\acceptN != 2'd1) && \held_1 && (\ep_1 == \locked_1) && (\grantN2 == 2'd3)))
[15]	!(((\acceptN == 2'd3) && !(LE_1_8_8(\grantE, \ep_1)) && (\transfer_3 != \acceptE) && (\transfer_3$next == \transfer_3$next_rhs) && (\locked_1$next == \transfer_3$next) && \held_1 && (\ep_1 == \locked_1) && (\grantN2 == 2'd3) && (\locked_1$next == \locked_1$next_rhs) && (\grantN1 == 2'd1)))
[16]	!((!(LE_1_8_8(\acceptE, \ep_2)) && (\transfer_2 == \acceptE) && (\ep_2 == \transfer_2)))
[17]	!(((\grantN1 == 2'd2) && \held_2 && LE_1_8_8(\acceptE, \ep_2) && !(LE_1_8_8(\grantE, \ep_2)) && (\locked_2$next == \locked_2$next_rhs) && (\grantN2 == 2'd3) && (\transfer_3$next == \transfer_3$next_rhs) && (\locked_2$next == \transfer_3$next) && (\acceptN == 2'd2) && (\ep_2 == \locked_2)))
[18]	!(((\grantN1 == 2'd2) && (\acceptN == 2'd2) && (\ep_2 == \locked_2) && (\transfer_2 != \acceptE) && (\grantN2 == 2'd3) && !(LE_1_8_8(\grantE, \ep_2)) && (\locked_2$next == \locked_2$next_rhs) && \held_2 && (\transfer_3$next == \transfer_3$next_rhs) && (\locked_2$next == \transfer_3$next)))
[19]	!(((\locked_2$next == \locked_2$next_rhs) && (\acceptN != 2'd2) && !(LE_1_8_8(\grantE, \ep_2)) && (\grantN1 == 2'd2) && (\acceptN != 2'd3) && (\grantN2 == 2'd3) && (\transfer_3$next == \transfer_3$next_rhs) && (\ep_2 == \locked_2) && \held_2 && (\locked_2$next == \transfer_3$next)))
[20]	!(((\locked_2$next == \transfer_3$next) && (\grantN1 == 2'd2) && (\locked_2$next == \locked_2$next_rhs) && (\transfer_3$next == \transfer_3$next_rhs) && (\ep_2 == \locked_2) && !(LE_1_8_8(\grantE, \ep_2)) && \held_2 && (\transfer_3 != \acceptE) && (\grantN2 == 2'd3) && (\acceptN == 2'd3)))
[21]	!((!(LE_1_8_8(\grantE, \ep_3)) && LE_1_8_8(\acceptE, \ep_3) && (\grantN2 == 2'd1) && (\locked_3$next == \transfer_1$next) && \held_3 && (\ep_3 == \locked_3) && (\transfer_1$next == \transfer_1$next_rhs) && (\grantN1 == 2'd3) && (\locked_3$next == \locked_3$next_rhs)))
[22]	!(((\transfer_3 == \acceptE) && (\ep_3 == \transfer_3) && !(LE_1_8_8(\acceptE, \ep_3))))
[23]	!((\held_3 && (\locked_3$next == \locked_3$next_rhs) && (\ep_3 == \locked_3) && (\transfer_1$next == \transfer_1$next_rhs) && (\grantN2 == 2'd1) && (\transfer_3 != \acceptE) && (\locked_3$next == \transfer_1$next) && !(LE_1_8_8(\grantE, \ep_3)) && (\grantN1 == 2'd3)))
[24]	!(((\grantN2 == 2'd1) && (\grantN1 == 2'd0) && (\locked_0$next == \transfer_1$next) && !(LE_1_8_8(\grantE, \ep_0)) && (\transfer_1$next == \transfer_1$next_rhs) && (\acceptN == 2'd1) && \held_0 && (\transfer_1 != \acceptE) && (\ep_0 == \locked_0) && (\locked_0$next == \locked_0$next_rhs)))
[25]	!(((\transfer_1$next == \transfer_1$next_rhs) && (\acceptN != 2'd0) && (\acceptN != 2'd1) && (\ep_0 == \locked_0) && (\locked_0$next == \transfer_1$next) && \held_0 && (\grantN1 == 2'd0) && !(LE_1_8_8(\grantE, \ep_0)) && (\locked_0$next == \locked_0$next_rhs) && (\grantN2 == 2'd1)))
[26]	!(((\grantN1 == 2'd0) && (\grantN2 == 2'd1) && (\transfer_1$next == \transfer_1$next_rhs) && (\ep_0 == \locked_0) && (\transfer_0 != \acceptE) && (\acceptN == 2'd0) && \held_0 && !(LE_1_8_8(\grantE, \ep_0)) && (\locked_0$next == \locked_0$next_rhs) && (\locked_0$next == \transfer_1$next)))
[27]	!(((\ep_0 == \locked_0) && (\grantN1 == 2'd0) && \held_0 && !(LE_1_8_8(\grantE, \ep_0)) && LE_1_8_8(\acceptE, \ep_0) && (\grantN2 == 2'd1) && (\locked_0$next == \locked_0$next_rhs) && (\acceptN == 2'd0) && (\locked_0$next == \transfer_1$next) && (\transfer_1$next == \transfer_1$next_rhs)))
[28]	!((!(LE_1_8_8(\grantE, \ep_2)) && (\grantN2 == 2'd1) && (\grantN1 == 2'd2) && (\transfer_1$next == \transfer_1$next_rhs) && \held_2 && (\locked_2$next == \locked_2$next_rhs) && (\acceptN != 2'd2) && (\ep_2 == \locked_2) && (\locked_2$next == \transfer_1$next)))
[29]	!(((\locked_2$next == \locked_2$next_rhs) && (\transfer_2 == 8'd0) && (\grantN2 == 2'd1) && (\grantN1 == 2'd2) && \held_2 && !(LE_1_8_8(\grantE, \ep_2)) && (\ep_2 == \locked_2) && (\transfer_1$next == \transfer_1$next_rhs) && (\locked_2$next == \transfer_1$next)))
[30]	!((\held_2 && (\transfer_2 != \acceptE) && (\ep_2 == \locked_2) && (\locked_2$next == \locked_2$next_rhs) && (\grantN1 == 2'd2) && (\transfer_1$next == \transfer_1$next_rhs) && !(LE_1_8_8(\grantE, \ep_2)) && (\locked_2$next == \transfer_1$next) && (\grantN2 == 2'd1)))
[31]	!(((\grantN1 == 2'd1) && (\grantN2 == 2'd2) && (\ep_1 == \locked_1) && !(LE_1_8_8(\grantE, \ep_1)) && (\transfer_2$next == \transfer_2$next_rhs) && (\acceptN == 2'd1) && (\locked_1$next == \locked_1$next_rhs) && (\locked_1$next == \transfer_2$next) && (\transfer_1 != \acceptE) && \held_1))
[32]	!(((\acceptN == 2'd1) && (\grantN2 == 2'd2) && (\locked_1$next == \locked_1$next_rhs) && LE_1_8_8(\acceptE, \ep_1) && (\locked_1$next == \transfer_2$next) && (\transfer_2$next == \transfer_2$next_rhs) && \held_1 && (\ep_1 == \locked_1) && (\grantN1 == 2'd1) && !(LE_1_8_8(\grantE, \ep_1))))
[33]	!(((\ep_1 == \locked_1) && \held_1 && (\grantN1 == 2'd1) && (\transfer_2$next == \transfer_2$next_rhs) && (\grantN2 == 2'd2) && (\locked_1$next == \transfer_2$next) && (\acceptN != 2'd2) && (\acceptN != 2'd1) && (\locked_1$next == \locked_1$next_rhs) && !(LE_1_8_8(\grantE, \ep_1))))
[34]	!(((\grantN1 == 2'd1) && !(LE_1_8_8(\grantE, \ep_1)) && (\ep_1 == \locked_1) && \held_1 && (\grantN2 == 2'd2) && (\acceptN == 2'd2) && (\locked_1$next == \transfer_2$next) && (\locked_1$next == \locked_1$next_rhs) && (\transfer_2 != \acceptE) && (\transfer_2$next == \transfer_2$next_rhs)))
[35]	!(((\grantN2 == 2'd2) && (\ep_3 == \locked_3) && \held_3 && (\locked_3$next == \locked_3$next_rhs) && !(LE_1_8_8(\grantE, \ep_3)) && (\locked_3$next == \transfer_2$next) && (\transfer_2$next == \transfer_2$next_rhs) && LE_1_8_8(\acceptE, \ep_3) && (\grantN1 == 2'd3)))
[36]	!((\held_3 && (\locked_3$next == \transfer_2$next) && (\transfer_3 != \acceptE) && (\grantN1 == 2'd3) && !(LE_1_8_8(\grantE, \ep_3)) && (\transfer_2$next == \transfer_2$next_rhs) && (\locked_3$next == \locked_3$next_rhs) && (\grantN2 == 2'd2) && (\ep_3 == \locked_3)))
[37]	!(((\ep_0 == \locked_0) && (\transfer_2 == 8'd0) && (\transfer_2$next == \transfer_2$next_rhs) && (\locked_0$next == \locked_0$next_rhs) && (\transfer_2$next != 8'd0) && (\locked_0$next == \transfer_2$next) && !(LE_1_8_8(\grantE, \ep_0)) && (\acceptN == 2'd2)))
[38]	!(((\grantN1 == 2'd0) && !(LE_1_8_8(\grantE, \ep_0)) && (\ep_0 == \locked_0) && (\locked_0$next == \locked_0$next_rhs) && (\acceptN != 2'd2) && (\locked_0$next == \transfer_2$next) && (\acceptN != 2'd0) && (\grantN2 == 2'd2) && (\transfer_2$next == \transfer_2$next_rhs) && \held_0))
[39]	!((\held_0 && (\locked_0$next == \locked_0$next_rhs) && (\ep_0 == \locked_0) && (\transfer_2$next == \transfer_2$next_rhs) && (\grantN2 == 2'd2) && (\acceptN == 2'd0) && (\grantN1 == 2'd0) && !(LE_1_8_8(\grantE, \ep_0)) && (\transfer_0 != \acceptE) && (\locked_0$next == \transfer_2$next)))
[40]	!(((\grantN2 == 2'd2) && (\grantN1 == 2'd0) && (\locked_0$next == \locked_0$next_rhs) && \held_0 && (\ep_0 == \locked_0) && (\acceptN == 2'd0) && (\transfer_2$next == \transfer_2$next_rhs) && !(LE_1_8_8(\grantE, \ep_0)) && (\locked_0$next == \transfer_2$next) && LE_1_8_8(\acceptE, \ep_0)))
[41]	!(((\transfer_2 == 8'd0) && (\locked_2$next == \locked_2$next_rhs) && (\transfer_0$next == \transfer_0$next_rhs) && (\grantN2 == 2'd0) && \held_2 && (\grantN1 == 2'd2) && (\locked_2$next == \transfer_0$next) && (\ep_2 == \locked_2) && !(LE_1_8_8(\grantE, \ep_2))))
[42]	!(((\grantN1 == 2'd2) && (\locked_2$next == \locked_2$next_rhs) && (\grantN2 == 2'd0) && !(LE_1_8_8(\grantE, \ep_2)) && (\transfer_2 != \acceptE) && (\ep_2 == \locked_2) && \held_2 && (\locked_2$next == \transfer_0$next) && (\transfer_0$next == \transfer_0$next_rhs)))
[43]	!(((\ep_3 == \locked_3) && (\transfer_0$next == \transfer_0$next_rhs) && (\locked_3$next == \transfer_0$next) && \held_3 && (\acceptN != 2'd3) && !(LE_1_8_8(\grantE, \ep_3)) && (\locked_3$next == \locked_3$next_rhs) && (\grantN1 == 2'd3) && (\grantN2 == 2'd0)))
[44]	!(((\locked_3$next == \transfer_0$next) && (\locked_3$next == \locked_3$next_rhs) && (\grantN1 == 2'd3) && \held_3 && (\ep_3 == \locked_3) && !(LE_1_8_8(\grantE, \ep_3)) && LE_1_8_8(\acceptE, \ep_3) && (\grantN2 == 2'd0) && (\transfer_0$next == \transfer_0$next_rhs)))
[45]	!(((\locked_3$next == \transfer_0$next) && (\ep_3 == \locked_3) && (\transfer_3 != \acceptE) && (\locked_3$next == \locked_3$next_rhs) && \held_3 && (\grantN1 == 2'd3) && (\transfer_0$next == \transfer_0$next_rhs) && !(LE_1_8_8(\grantE, \ep_3)) && (\grantN2 == 2'd0)))
[46]	!(((\ep_1 == \locked_1) && !(LE_1_8_8(\grantE, \ep_1)) && (\locked_1$next == \transfer_0$next) && (\locked_1$next == \locked_1$next_rhs) && \held_1 && (\grantN1 == 2'd1) && (\grantN2 == 2'd0) && (\transfer_1 == 8'd0) && (\transfer_0$next == \transfer_0$next_rhs)))
[47]	!((!(LE_1_8_8(\grantE, \ep_1)) && (\grantN2 == 2'd0) && (\ep_1 == \locked_1) && (\locked_1$next == \transfer_0$next) && (\grantN1 == 2'd1) && (\transfer_1 != \acceptE) && \held_1 && (\locked_1$next == \locked_1$next_rhs) && (\transfer_0$next == \transfer_0$next_rhs)))
[48]	!(((\locked_0$next == \transfer_3$next) && !(LE_1_8_8(\grantE, \ep_0)) && (\ep_0 == \locked_0) && (\transfer_3 != \acceptE) && (\grantN1 == 2'd0) && (\locked_0$next == \locked_0$next_rhs) && \held_0 && (\acceptN == 2'd3) && (\grantN2 == 2'd3) && (\transfer_3$next == \transfer_3$next_rhs)))
[49]	!((((\locked_0 == \acceptE) || (\locked_0 != \acceptE)) && (\locked_0 == \acceptE) && ((\locked_0 == 8'd126) || (\locked_0 != 8'd126)) && (\locked_0 == 8'd126) && (l$1 || !(l$1)) && !(l$1) && ((\ep_3 == \acceptE) || (\ep_3 != \acceptE)) && (\ep_3 == \acceptE) && ((\ep_3 == 8'd127) || (\ep_3 != 8'd127)) && (\ep_3 == 8'd127) && ((\locked_3 == \transfer_3) || (\locked_3 != \transfer_3)) && (\locked_3 == \transfer_3) && ((\ep_3 == \transfer_3) || (\ep_3 != \transfer_3)) && (\ep_3 == \transfer_3) && ((\ep_3 == \locked_3) || (\ep_3 != \locked_3)) && (\ep_3 == \locked_3) && (\transfer_0 == 8'd0) && (\locked_0$next == \transfer_3$next) && (\transfer_3$next == \acceptE$next) && !(LE_1_8_8(\acceptE$next, \ep_3$next)) && (\ep_3$next == \ep_3$next_rhs) && (\transfer_3$next == \transfer_3$next_rhs) && (\locked_0$next == \locked_0$next_rhs)))
[50]	!((!(l$1) && (\locked_0 == \acceptE) && !(LE_1_8_8(\acceptE, \ep_3))))
[51]	!((!(l$1) && (\ep_3 == 8'd0)))
[52]	!((!(l$1$next) && (\ep_3$next == 8'd0)))
[53]	!((((\transfer_3 == \grantE) || (\transfer_3 != \grantE)) && (\transfer_3 == \grantE) && ((\transfer_3 == 8'd160) || (\transfer_3 != 8'd160)) && (\transfer_3 == 8'd160) && (l$2 || !(l$2)) && !(l$2) && (\locked_0 == \acceptE) && ((\locked_0 == 8'd129) || (\locked_0 != 8'd129)) && (\locked_0 == 8'd129) && (\ep_3 == 8'd0) && (\ep_3$next != \acceptE$next) && l$1$next && (\transfer_0$next == \acceptE$next) && (\transfer_0$next == 8'd0) && (\ep_3$next == \ep_3$next_rhs) && (\transfer_0$next == \transfer_0$next_rhs) && (\locked_0$next == \locked_0$next_rhs)))
-----------
 s: 253, mem: 26, time: 1.00
Frames explored (52 datapath refinements) : 
2 2 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 5 5 5 5 5 
CEXT lengths (52 feasibility checks) : 
3 3 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 6 6 6 6 6 
DP lemmas (52 feasibility checks) : 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 
Block= 119 BlockT= 123 BlockS= 119 BlockU= 4 Oblig= 453 ObligT= 453 ObligS= 276 ObligU= 177 FPT= 305 FPS= 221 FPU= 84 CallT= 3157 CallS= 2319 CallU= 838 MUST= 786 MUSS= 492 MUSU= 294 sMUST= 24 sMUSS= 16 sMUSU= 8 dMUST= 585 dMUSS= 476 dMUSU= 109 rMUST= 825 rMUSS= 395 rMUSU= 430 All_clauses= 177 All_literals= 396 Clauses= 119 Literals= 253 DPLemmas= 53 DPrefsNoDPL= 0 DPRefs= 52

pme_fail: 0, pme_succ: 0, lit_before: 0, lit_after: 0
coi_before: 0, coi_after: 0
mus_before: 2016 mus_lit: 384 mus_cls: 177 mus_cnt: 177
S+M	Call = 3943 (sat=2811, 71.29%)
SAT	Call = 3157 (sat=2319, 73.46%)
MUS	Call = 786 (sat=492, 62.60%)

Detailed Stats:

  (reachability)
	#Frame Restrictions:	177
	#TB                :	395
	#cubes-subsumed    :	58
	#context reset     :	0
	#Y2 reset          :	0
	#frame solver reset:	1
	avg-sz-frame-restriction:  	2.17

	avg-sz-ab-cube:  	10.65
		%t1-ab-cube:   	100.00%	[sel: 100.00% ]
		%t2-ab-cube:   	0.00%	[sel: 0.00% ]
		%t3-ab-cube:   	0.00%	[sel: 0.00% ]
		%t4-ab-cube:   	0.00%	[sel: 0.00% ]

		ab-cube info:	
			s == s:	13.58%	[sel: 22.40% ]
			s == n:	31.51%	[sel: 2.08% ]
			s == o:	0.00%	[sel: 0.00% ]
			n == o:	0.00%	[sel: 0.00% ]
			o == o:	0.00%	[sel: 0.00% ]
			s != s:	11.13%	[sel: 4.69% ]
			s != n:	24.16%	[sel: 55.47% ]
			s != o:	0.00%	[sel: 0.00% ]
			n != o:	0.00%	[sel: 0.00% ]
			o != o:	0.00%	[sel: 0.00% ]
			s bool:	7.25%	[sel: 14.58% ]
			up    :	12.37%	[sel: 0.78% ]
			oth   :	0.00%	[sel: 0.00% ]

		%coi-ab-cube  :	94.77%	[sel: 98.96% ]
			s (==):	12.58%	[sel: 22.14% ]
			s (!=):	8.85%	[sel: 4.69% ]
			n (==):	31.51%	[sel: 2.08% ]
			n (!=):	23.26%	[sel: 55.47% ]
			other :	18.57%	[sel: 14.58% ]
		%pred-ab-cube :	5.23%	[sel: 1.04% ]
		%fproj-ab-cube:	0.00%	[sel: 0.00% ]
			s (==):	0.00%	[sel: 0.00% ]
			s (!=):	0.00%	[sel: 0.00% ]
			n (==):	0.00%	[sel: 0.00% ]
			n (!=):	0.00%	[sel: 0.00% ]
		%proj-ab-cube :	0.00%	[sel: 0.00% ]
			s (==):	0.00%	[sel: 0.00% ]
			s (!=):	0.00%	[sel: 0.00% ]
			n (==):	0.00%	[sel: 0.00% ]
			n (!=):	0.00%	[sel: 0.00% ]
		%subs-ab-cube :	0.00%	[sel: 0.00% ]
	avg-#sv-ab-cube:  	4.00
	avg-tsb-ab-cube:  	28.00
	relevancy:       	35.25%

	avg-sz-cc-cube:  	10.00
		%coi-cc-cube  :	94.77%
		%pred-cc-cube :	5.23%
		%fproj-cc-cube:	0.00%
			s (==):	0.00%
			s (!=):	0.00%
			n (==):	0.00%
			n (!=):	0.00%
		%proj-cc-cube :	0.00%
			s (==):	0.00%
			s (!=):	0.00%
			n (==):	0.00%
			n (!=):	0.00%

	tb_cube_time:     	0.09 (9.24%)
		cube_eval_time: 	0.02 (2.24%)
		cube_pred_time: 	0.00 (0.07%)
		cube_fproj_time:	0.00 (0.00%)
		cube_proj_time: 	0.00 (0.00%)
		cube _subs_time:	0.00 (0.03%)
		sum:            	0.02 (25.28% of tb_cube_time)

	tb_ct_time:      	0.01 (1.34%)
		ct isblocked_time:  	0.00 (0.00%)
		ct isinitial_time:  	0.00 (0.32%)
		ct containment_time:	0.00 (0.05%)
		ct fastforward_time:	0.00 (0.00%)
		sum:                	0.00 (27.56% of tb_ct_time)

	setcontain_time:	0.00 (0.00%)

	updatesolver_time:	0.01 (0.68%)

	tb_time:	0.38 (38.07%)
		tb_reach_time:    	0.10 (10.02%)
		tb_val_time:    	0.02 (1.78%) [ cti_val_time: 138133934.58 (13877800329.13%) ]
		tb_cube_time:      	0.09 (9.24%)
		tb_mus_time:      	0.12 (12.49%)
			tb_mus_core_time:      	0.04 (4.04%)
			tb_mus_min_time:      	0.07 (7.31%)
		tb_ct_time:       	0.01 (1.34%)
		tb_extra_time:    	0.00 (0.00%)
		sum:           	0.33 (86.91% of tb_time)


  (refinement)
	sim_time:		0.10 (10.02%) 	 [20.20% of dpr_time]

  pre_time:	0.00 (0.14%)
  cti_time:	0.02 (2.06%)	[cti_i_time:	0.00 (0.18%) ]
  tb_time:	0.38 (38.07%)
  fp_time:	0.07 (6.75%)	[fp_extra_time:	0.00 (0.00%) ]
  refine_time:	0.49 (49.59%)
  sol_set_time:	0.00 (0.17%)
  inv_time:	0.00 (0.00%)	[induct_time:	0.00 (0.00%) ]
  draw_time:	0.00 (0.00%)
  sum:		0.96 (96.78%)

  extra_time:	0.00 (0.00%)

  timeout_time:	0.00 (0.00%)

[simplified] 0 (ex), 0 (cc), 2 (ot)

===   TIMED OUT   ===

Averroes finished.

br-#mus         177           
        hard        soft         out           
           
      117.84       11.39        2.56               (br-core)           
      117.84        2.56        2.17                (br-min)          

         sat       unsat           
                                          #Calls           
           0         177   (br-core)           
           0           0  (br-core2)           
         395         253    (br-min)           
                                      Time (sec)           
        0.07        0.04   (br-core)           
        0.00        0.00  (br-core2)           
        0.02        0.03    (br-min)           
                                    Avg. Time (microsec)           
           0         220   (br-core)           
           0           0  (br-core2)           
          61         132    (br-min)           
                                    Max Time (microsec)           
        3457         811   (br-core)           
           0           0  (br-core2)           
         368         701    (br-min)          

                      ab                      bv           
         sat       unsat         sat       unsat           
                                                      #Calls           
         175          28           7           2   (oneshot)           
        1645         514           0           0       (inc)           
           0         177         492         117    (assume)           
                       0                       0   (timeout)          

                                                  Time (sec)           
        0.01        0.00        0.03        0.01   (oneshot)           
        0.10        0.07        0.00        0.00       (inc)           
        0.00        0.02        0.37        0.02    (assume)           
                    0.00                    0.00   (timeout)          

                                                Avg. Time (microsec)
          63          61        4006        2524   (oneshot)           
          58         135           0           0       (inc)           
           0         137         754         152    (assume)           
                       0                       0   (timeout)           
           
      Result        Time        Mem.       #Refs           
                     sec          MB                       
        f_to        1.00          26          53